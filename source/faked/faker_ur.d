// generated by fakerjsgenerator
///
module faked.faker_ur;

import faked.base;


///
class Faker_ur : Faker {
@safe:
	import std.random;
	import std.array;
	import std.format;
	import std.conv : to;

	///
	this(int seed) {
        super(seed);
	}

	///
	override string loremWords() {
		auto data = [
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد"
		];
		return choice(data, this.rnd);
	}

	///
	override string loremSupplemental() {
		auto data = [
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسداسدھدسبابگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبادفھناسدھ",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدباسدفنباسد",
		"رعابھ",
		"ابسانفسدد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سندافاھگسدبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"ساسدبھ اسدفگبطاسدفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدطاسدگاسدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چاسدسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد",
		"سگ",
		"دگاس",
		"ساد",
		"دسھا",
		"باس",
		"نان",
		"انب",
		"ابس",
		"ادسگ",
		"ابنسد",
		"سفد",
		"دف",
		"بس",
		"باسدب",
		"باسدبا",
		"رعابھ",
		"ابسد",
		"سب",
		"ساد",
		"ط",
		"اسدبگ",
		"اسدگ",
		"اھگسد",
		"سدگ",
		"اسگ",
		"شبچ",
		"عو",
		"سدبگا",
		"اسبد",
		"ساب",
		"سدب",
		"سبا",
		"باسد",
		"دسب",
		"طسد",
		"چسد"
		];
		return choice(data, this.rnd);
	}

	///
	override string financeTransactionType() {
		auto data = [
		"deposit",
		"withdrawal",
		"payment",
		"invoice'"
		];
		return choice(data, this.rnd);
	}

	///
	override string financeAccountType() {
		auto data = [
		"Savings",
		"Current'"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalType() {
		auto data = [
		"bear",
		"lion",
		"insect",
		"crocodilia",
		"cow'"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalCrocodilia() {
		auto data = [
		"امریکی گڑیال",
		"آسٹریلیائ تازہ پانی کا گڑیال",
		"نیل گڑیال",
		"مشرقی افریقی گڑیال",
		"نمکین پانی کا گڑیال",
		"گڑیال"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalBear() {
		auto data = [
		"پانڈا",
		"بھالو",
		"امریکی کالا بھالو",
		"ایشیایٰ کالا بھالو",
		"بھورا بھالو"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalCow() {
		auto data = [
		"گائے",
		"نیلی گاٗیے",
		"امریکی گاٗیے'"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalLion() {
		auto data = [
		"ایشیایْ شیر",
		"مشرقی افریقی شیر",
		"شمالی مغربی کانگو کا شیر'"
		];
		return choice(data, this.rnd);
	}

	///
	override string animalInsect() {
		auto data = [
		"شہد کی مکھی",
		"مکھی",
		"چیونٹی'"
		];
		return choice(data, this.rnd);
	}

	///
	override string appVersion() {
		auto data = [
		"0.#.#",
		"0.##",
		"#.##",
		"#.#",
		"#.#.#'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}


	override string appAuthor() {
		final switch(uniform(0, 2, this.rnd)) {
			case 0: return nameName();
			case 1: return companyName() ~ "'";
		}
	}

	///
	override string appName() {
		auto data = [
		"اوقات نماز",
		"قسط حساب",
		"نقشہ نگار",
		"دبیٗ وقت",
		"ڈالر رپیہ",
		"دراز",
		"پاک وھیلز",
		"واٹس ایپ"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameMaleFirstName() {
		auto data = [
		"عمیر",
		"ابراہیم",
		"احسن",
		"عبداللہ",
		"عثمان",
		"حمزہ",
		"سیف",
		"ولید",
		"وسیم",
		"محسن",
		"یاسین",
		"کمال",
		"عادل",
		"اویس",
		"مسود",
		"شفیع",
		"فرہان",
		"ممتاز"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameSuffix() {
		auto data = [
		"چھوٹے",
		"بڑے",
		"پہل",
		"دوم",
		"سوم",
		"چہارم",
		"پنجم",
		"ششم",
		"هفتم",
		"نوئم",
		"دسم"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameLastName() {
		auto data = [
		"اعوان",
		"ملک",
		"جبران",
		"احمد",
		"علی",
		"خان",
		"جان",
		"آفریدی",
		"باجوڑی",
		"میمن",
		"راجپوت",
		"عبدالی",
		"نیازی",
		"شریف",
		"چوہدری",
		"ملوک",
		"اللَہ",
		"شنواری",
		"حسین",
		"الحق"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameFirstName() {
		auto data = [
		"منایل",
		"عایشہ",
		"آمنہ",
		"عمائم",
		"خدیجہ",
		"حفصہ",
		"رابعہ",
		"اقدس",
		"حسنہ",
		"مریم",
		"حمیرہ",
		"وردہ",
		"شہناز",
		"نوشین",
		"مشال",
		"روبینہ",
		"روزینہ",
		"حدید",
		"عمیر",
		"ابراہیم",
		"احسن",
		"عبداللہ",
		"عثمان",
		"حمزہ",
		"سیف",
		"ولید",
		"وسیم",
		"محسن",
		"یاسین",
		"کمال",
		"عادل",
		"اویس",
		"مسود",
		"شفیع",
		"فرہان",
		"ممتاز"
		];
		return choice(data, this.rnd);
	}


	override string nameName() {
		final switch(uniform(0, 8, this.rnd)) {
			case 0: return namePrefix() ~ " " ~ nameFirstName() ~ " " ~ nameLastName();
			case 1: return nameFirstName() ~ " " ~ nameLastName() ~ " " ~ nameSuffix();
			case 2: return nameFirstName() ~ " " ~ nameLastName();
			case 3: return nameFirstName() ~ " " ~ nameLastName();
			case 4: return nameMaleFirstName() ~ " " ~ nameLastName();
			case 5: return nameFemaleFirstName() ~ " " ~ nameLastName();
			case 6: return nameMaleFirstName() ~ " بن " ~ nameMaleFirstName();
			case 7: return nameFemaleFirstName() ~ " بنت " ~ nameMaleFirstName();
		}
	}

	///
	override string nameFemaleFirstName() {
		auto data = [
		"منایل",
		"عایشہ",
		"آمنہ",
		"عمائم",
		"خدیجہ",
		"حفصہ",
		"رابعہ",
		"اقدس",
		"حسنہ",
		"مریم",
		"حمیرہ",
		"وردہ",
		"شہناز",
		"نوشین",
		"مشال",
		"روبینہ",
		"روزینہ",
		"حدید"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameBinaryGender() {
		auto data = [
		"عورت",
		"مرد'"
		];
		return choice(data, this.rnd);
	}

	///
	override string namePrefix() {
		auto data = [
		"محترم.",
		"محترمہ.",
		"ڈاکٹر'"
		];
		return choice(data, this.rnd);
	}

	///
	override string musicGenre() {
		auto data = [
		"پاپ",
		"فلک",
		"دنیایٰ",
		"جاز",
		"فنک",
		"کلاسکی",
		"لاطینی",
		"پرانی",
		"ریپ"
		];
		return choice(data, this.rnd);
	}

	///
	override string commerceDepartment() {
		auto data = [
		"کتابیہ",
		"فلم",
		"گانی",
		"کھیل",
		"بجلی",
		"کمپیوٹر",
		"گھر",
		"باغ",
		"اوزار",
		"اشیاء",
		"صحر",
		"خوبصورتی",
		"کھلونہ",
		"بچے",
		"کپڑے",
		"جوتے",
		"گاڑیاں",
		"کارغانے"
		];
		return choice(data, this.rnd);
	}

	///
	override string colorHuman() {
		auto data = [
		"سرخ",
		"ہرا",
		"نیلا",
		"پیلا",
		"ہلکا ہرا",
		"سفہد",
		"کالا",
		"نارنجی",
		"پیکا",
		"مہندی",
		"آسمانی",
		"سنہری",
		"چاندنی"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressStateAbbr() {
		auto data = [
		"KP",
		"ICT",
		"J&K",
		"GB",
		"PB",
		"SD",
		"BA'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressState() {
		auto data = [
		"خیبر پختونخواہ",
		"اسلام آباد",
		"پنجاب",
		"سندھ",
		"آزاد کشمیر",
		"بلوچستان",
		"گلگت بلتستان"
		];
		return choice(data, this.rnd);
	}


	override string addressStreetAddress() {
		final switch(uniform(0, 2, this.rnd)) {
			case 0: return "normal: '" ~ addressBuildingNumber() ~ " " ~ addressStreet();
			case 1: return "full: '" ~ addressBuildingNumber() ~ " " ~ addressStreet() ~ " " ~ addressSecondaryAddress();
		}
	}

	///
	override string addressDefaultCountry() {
		auto data = [
		"اسلامی جمہوریہ پاکستان'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDirection() {
		auto data = [
		"شمال",
		"مشرق",
		"جنوب",
		"مغرب",
		"شمال مشرق",
		"سمال مغرب",
		"جنوب مشرق",
		"جنوب مغرب"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCitySuffix() {
		auto data = [
		"ٹاوْن'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCountry() {
		auto data = [
		"افغانستان",
		"البانیا",
		"الجزایر",
		"امریکی سموا",
		"اندورہ",
		"انگولا",
		"انگویلیا",
		"انتارتیکا",
		"انتیگا اور باربئدا",
		"ارجنٹاینا",
		"ارمینیا",
		"اروبا",
		"آسٹریلیلا",
		"آسٹریا",
		"آزربایجان",
		"بہامس",
		"بہرین",
		"بنگلہ دیش",
		"باربادوس",
		"بیلاروس",
		"بیلجیم",
		"بیلیز",
		"بینن",
		"برمودہ",
		"بھوٹان",
		"بولویا",
		"بوسنیا و ہرزگووینیا",
		"بوسٹوانا",
		"برازیل",
		"برونوئ داراسلام",
		"بلغاریہ",
		"برونڈی",
		"کمبوڈیا",
		"کمروین",
		"کینیڈا",
		"سینٹرل افریقی ریاست",
		"چاڈ",
		"چلے",
		"چائنا",
		"کولمبیا",
		"کومورس",
		"کانگو",
		"کوسٹا ریکا",
		"کروایشیا",
		"کوبا",
		"چک ریاست",
		"ڈینمارک",
		"جبوتی",
		"ڈومینک ریاست",
		"اکواڈور",
		"مصر",
		"ال سلوادور",
		"ایرٹریا",
		"استونیا",
		"اتھوپیا",
		"فی جی",
		"فن لینڈ",
		"فرانس",
		"گابون",
		"گامبیہ",
		"جیورجیہ",
		"جرمنی",
		"گانا",
		"جبرالٹر",
		"یونان",
		"گام",
		"واتیکن",
		"ہونڈورس",
		"ہانگ کانگ",
		"ہنگری",
		"بھارت",
		"انڈونیشیا",
		"ایران",
		"عراق",
		"آئر لینڈ",
		"اٹلی",
		"جمائکہ",
		"جاپان",
		"اْردن",
		"کازخستان",
		"کینیا",
		"کریباتی",
		"شمالی ریاست کوریا",
		"جنوبی ریاست کوریا",
		"کویت",
		"لبنان",
		"مسیڈون",
		"مدگاسکر",
		"ملاوی",
		"ملائشیا",
		"مالدیپ",
		"مالی",
		"مالٹا",
		"میکسیکو",
		"منگولیہ",
		"مراکژ",
		"میانمار",
		"نیپال",
		"نیدرلینڈ",
		"نیوزیلینڈ",
		"نیکاراگوا",
		"نائجر",
		"نییجیریا",
		"ناروے",
		"اومان",
		"اسلامی جمہوریہ پاکستان",
		"پلاوؑ",
		"فلسطین",
		"پاناما",
		"پرو",
		"فلپائن",
		"پولینڈ",
		"پرتگال",
		"پورتو ریکو",
		"قطر",
		"رومانیہ",
		"روس",
		"روانڈا",
		"سموہ",
		"سان مرینو",
		"سعودیہ عربیہ",
		"سنیگال",
		"سربیا",
		"سے شیل",
		"سنگاپور",
		"سومالیہ",
		"جنوبی افرقہ",
		"ہسپانیہ",
		"سری لنکا",
		"سوڈان",
		"سری نامپ",
		"سوازی لینڈ",
		"سویڈن",
		"سوٹزرلینڈ",
		"شام",
		"تائوان",
		"تاجکستان",
		"تنزانیہ",
		"تھائ لینڈ",
		"ٹوگو",
		"ٹونگا",
		"ٹونیسیا",
		"ترکی",
		"ترکمانستان",
		"یوگانڈا",
		"یوکرین",
		"متحدہ عرب امارات",
		"متحدہ سلطنت",
		"متحدہ ریاست امریکا",
		"یوراگوائے",
		"اْزبکستان",
		"ونیزویلا",
		"وتنام",
		"یمن",
		"زمبیا",
		"زمبابوے"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCityPrefix() {
		auto data = [
		"مشرق",
		"مغرب",
		"شمال",
		"جنوب",
		"نیا",
		"جھیل",
		"بندرگاہ'"
		];
		return choice(data, this.rnd);
	}


	override string addressStreet() {
		final switch(uniform(0, 2, this.rnd)) {
			case 0: return nameFirstName() ~ " " ~ addressStreetSuffix();
			case 1: return nameLastName() ~ " " ~ addressStreetSuffix();
		}
	}


	override string addressCity() {
		final switch(uniform(0, 4, this.rnd)) {
			case 0: return addressCityPrefix() ~ " " ~ nameFirstName() ~ addressCitySuffix();
			case 1: return addressCityPrefix() ~ " " ~ nameFirstName();
			case 2: return nameFirstName() ~ addressCitySuffix();
			case 3: return nameLastName() ~ addressCitySuffix();
		}
	}

	///
	override string addressBuildingNumber() {
		auto data = [
		"#####",
		"####",
		"###'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressSecondaryAddress() {
		auto data = [
		"گھر. ###",
		"گلی ###'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressPostcode() {
		auto data = [
		"#####'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressStreetSuffix() {
		auto data = [
		"گاوْں",
		"گلی",
		"آباد",
		"کالونی",
		"گھڑی'"
		];
		return choice(data, this.rnd);
	}

	///
	override string teamCreature() {
		auto data = [
		"چیونٹیاں",
		"چمگادڑ",
		"بھالو",
		"مکیاں",
		"پرندے",
		"بیل",
		"بلیاں",
		"مرغیاں",
		"مویشی",
		"کتے",
		"مچھلیاں",
		"بطخیں",
		"ہاتھی",
		"لومڑیاں",
		"مینڈک",
		"بکریاں",
		"گھوڑے",
		"شیر",
		"بندر",
		"الو",
		"لوگ",
		"سور",
		"خرگوش",
		"بھیڑ",
		"بھیڑیں",
		"زیبرا",
		"کویں",
		"کالی بلیاں",
		"بھوت",
		"جادوگر",
		"بیٹیں",
		"دشمن",
		"پیغمبر",
		"روح",
		"عبادت گزار"
		];
		return choice(data, this.rnd);
	}


	override string teamName() {
		final switch(uniform(0, 1, this.rnd)) {
			case 0: return addressState() ~ " " ~ teamCreature() ~ "'";
		}
	}

	///
	override string cellPhoneFormats() {
		auto data = [
		"+92 ###-###-####",
		"03## ### ####",
		"03#########'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string vehicleFuel() {
		auto data = [
		"ڈیزل",
		"بجلی",
		"پیٹرول",
		"شمسی'"
		];
		return choice(data, this.rnd);
	}

	///
	override string vehicleType() {
		auto data = [
		"ہیچ بیک",
		"سواری'"
		];
		return choice(data, this.rnd);
	}

	///
	override string vehicleManufacturer() {
		auto data = [
		"آستن مارٹن",
		"بینٹلے",
		"بی ایم ڈبلیو",
		"فراری",
		"ہنڈا",
		"جیپ",
		"مزدا",
		"مرسیڈیز"
		];
		return choice(data, this.rnd);
	}

	///
	override string vehicleBicycleType() {
		auto data = [
		"سہراب سائکل",
		"چائنہ سائکل'"
		];
		return choice(data, this.rnd);
	}

	///
	override string vehicleModel() {
		auto data = [
		"کرولا",
		"اکورڈ",
		"سوک'"
		];
		return choice(data, this.rnd);
	}

	///
	override string businessCreditCardTypes() {
		auto data = [
		"visa",
		"mastercard",
		"link one",
		"paypak'"
		];
		return choice(data, this.rnd);
	}

}
