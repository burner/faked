// generated by fakerjsgenerator
///
module faked.faker_nb_no;

import faked.base;


///
class Faker_nb_no : Faker {
@safe:
	import std.random;
	import std.array;
	import std.format;
	import std.conv : to;

	///
	this(int seed) {
        super(seed);
	}

	///
	override string companySuffix() {
		auto data = [
		"Gruppen",
		"AS",
		"ASA",
		"BA",
		"RFH",
		"og Sønner'"
		];
		return choice(data, this.rnd);
	}


	override string companyName() {
		final switch(uniform(0, 4, this.rnd)) {
			case 0: return nameLastName() ~ " " ~ companySuffix();
			case 1: return nameLastName() ~ "-" ~ nameLastName();
			case 2: return nameLastName();
			case 3: return nameLastName() ~ " og " ~ nameLastName();
		}
	}

	///
	override string scienceUnit() {
		auto data = [
		"{",
		"name: 'meter",
		"symbol: 'm",
		"}",
		"{",
		"name: 'sekund",
		"symbol: 's",
		"}",
		"{",
		"name: 'mole",
		"symbol: 'mol",
		"}",
		"{",
		"name: 'ampere",
		"symbol: 'A",
		"}",
		"{",
		"name: 'kelvin",
		"symbol: 'K",
		"}",
		"{",
		"name: 'candela",
		"symbol: 'cd",
		"}",
		"{",
		"name: 'kilogram",
		"symbol: 'kg",
		"}",
		"{",
		"name: 'radian",
		"symbol: 'rad",
		"}",
		"{",
		"name: 'hertz",
		"symbol: 'Hz",
		"}",
		"{",
		"name: 'newton",
		"symbol: 'N",
		"}",
		"{",
		"name: 'pascal",
		"symbol: 'Pa",
		"}",
		"{",
		"name: 'joule",
		"symbol: 'J",
		"}",
		"{",
		"name: 'watt",
		"symbol: 'W",
		"}",
		"{",
		"name: 'coulomb",
		"symbol: 'C",
		"}",
		"{",
		"name: 'volt",
		"symbol: 'V",
		"}",
		"{",
		"name: 'ohm",
		"symbol: 'Ω",
		"}",
		"{",
		"name: 'tesla",
		"symbol: 'T",
		"}",
		"{",
		"name: 'grad celsius",
		"symbol: '°C",
		"}",
		"{",
		"name: 'lumen",
		"symbol: 'lm",
		"}",
		"{",
		"name: 'becquerel",
		"symbol: 'Bq",
		"}",
		"{",
		"name: 'gray",
		"symbol: 'Gy",
		"}",
		"{",
		"name: 'sievert",
		"symbol: 'Sv",
		"}"
		];
		return choice(data, this.rnd);
	}

	///
	override string scienceChemicalelement() {
		auto data = [
		"{",
		"symbol: 'H",
		"name: 'Hydrogen",
		"atomicNumber: 1",
		"}",
		"{",
		"symbol: 'He",
		"name: 'Helium",
		"atomicNumber: 2",
		"}",
		"{",
		"symbol: 'Li",
		"name: 'Litium",
		"atomicNumber: 3",
		"}",
		"{",
		"symbol: 'Be",
		"name: 'Beryllium",
		"atomicNumber: 4",
		"}",
		"{",
		"symbol: 'B",
		"name: 'Bor",
		"atomicNumber: 5",
		"}",
		"{",
		"symbol: 'C",
		"name: 'Karbon",
		"atomicNumber: 6",
		"}",
		"{",
		"symbol: 'N",
		"name: 'Nitrogen",
		"atomicNumber: 7",
		"}",
		"{",
		"symbol: 'O",
		"name: 'Oksygen",
		"atomicNumber: 8",
		"}",
		"{",
		"symbol: 'F",
		"name: 'Fluor",
		"atomicNumber: 9",
		"}",
		"{",
		"symbol: 'Ne",
		"name: 'Neon",
		"atomicNumber: 10",
		"}",
		"{",
		"symbol: 'Na",
		"name: 'Natrium",
		"atomicNumber: 11",
		"}",
		"{",
		"symbol: 'Mg",
		"name: 'Magnesium",
		"atomicNumber: 12",
		"}",
		"{",
		"symbol: 'Al",
		"name: 'Aluminium",
		"atomicNumber: 13",
		"}",
		"{",
		"symbol: 'Si",
		"name: 'Silisium",
		"atomicNumber: 14",
		"}",
		"{",
		"symbol: 'P",
		"name: 'Fosfor",
		"atomicNumber: 15",
		"}",
		"{",
		"symbol: 'S",
		"name: 'Svovel",
		"atomicNumber: 16",
		"}",
		"{",
		"symbol: 'Cl",
		"name: 'Klor",
		"atomicNumber: 17",
		"}",
		"{",
		"symbol: 'Ar",
		"name: 'Argon",
		"atomicNumber: 18",
		"}",
		"{",
		"symbol: 'K",
		"name: 'Kalium",
		"atomicNumber: 19",
		"}",
		"{",
		"symbol: 'Ca",
		"name: 'Kalsium",
		"atomicNumber: 20",
		"}",
		"{",
		"symbol: 'Sc",
		"name: 'Scandium",
		"atomicNumber: 21",
		"}",
		"{",
		"symbol: 'Ti",
		"name: 'Titan",
		"atomicNumber: 22",
		"}",
		"{",
		"symbol: 'V",
		"name: 'Vanadium",
		"atomicNumber: 23",
		"}",
		"{",
		"symbol: 'Cr",
		"name: 'Krom",
		"atomicNumber: 24",
		"}",
		"{",
		"symbol: 'Mn",
		"name: 'Mangan",
		"atomicNumber: 25",
		"}",
		"{",
		"symbol: 'Fe",
		"name: 'Jern",
		"atomicNumber: 26",
		"}",
		"{",
		"symbol: 'Co",
		"name: 'Kobolt",
		"atomicNumber: 27",
		"}",
		"{",
		"symbol: 'Ni",
		"name: 'Nikkel",
		"atomicNumber: 28",
		"}",
		"{",
		"symbol: 'Cu",
		"name: 'Kobber",
		"atomicNumber: 29",
		"}",
		"{",
		"symbol: 'Zn",
		"name: 'Sink",
		"atomicNumber: 30",
		"}",
		"{",
		"symbol: 'Ga",
		"name: 'Gallium",
		"atomicNumber: 31",
		"}",
		"{",
		"symbol: 'Ge",
		"name: 'Germanium",
		"atomicNumber: 32",
		"}",
		"{",
		"symbol: 'As",
		"name: 'Arsen",
		"atomicNumber: 33",
		"}",
		"{",
		"symbol: 'Se",
		"name: 'Selen",
		"atomicNumber: 34",
		"}",
		"{",
		"symbol: 'Br",
		"name: 'Brom",
		"atomicNumber: 35",
		"}",
		"{",
		"symbol: 'Kr",
		"name: 'Krypton",
		"atomicNumber: 36",
		"}",
		"{",
		"symbol: 'Rb",
		"name: 'Rubidium",
		"atomicNumber: 37",
		"}",
		"{",
		"symbol: 'Sr",
		"name: 'Strontium",
		"atomicNumber: 38",
		"}",
		"{",
		"symbol: 'Y",
		"name: 'Yttrium",
		"atomicNumber: 39",
		"}",
		"{",
		"symbol: 'Zr",
		"name: 'Zirkonium",
		"atomicNumber: 40",
		"}",
		"{",
		"symbol: 'Nb",
		"name: 'Niob",
		"atomicNumber: 41",
		"}",
		"{",
		"symbol: 'Mo",
		"name: 'Molybden",
		"atomicNumber: 42",
		"}",
		"{",
		"symbol: 'Tc",
		"name: 'Technetium",
		"atomicNumber: 43",
		"}",
		"{",
		"symbol: 'Ru",
		"name: 'Ruthenium",
		"atomicNumber: 44",
		"}",
		"{",
		"symbol: 'Rh",
		"name: 'Rhodium",
		"atomicNumber: 45",
		"}",
		"{",
		"symbol: 'Pd",
		"name: 'Palladium",
		"atomicNumber: 46",
		"}",
		"{",
		"symbol: 'Ag",
		"name: 'Sølv",
		"atomicNumber: 47",
		"}",
		"{",
		"symbol: 'Cd",
		"name: 'Kadmium",
		"atomicNumber: 48",
		"}",
		"{",
		"symbol: 'In",
		"name: 'Indium",
		"atomicNumber: 49",
		"}",
		"{",
		"symbol: 'Sn",
		"name: 'Tinn",
		"atomicNumber: 50",
		"}",
		"{",
		"symbol: 'Sb",
		"name: 'Antimon",
		"atomicNumber: 51",
		"}",
		"{",
		"symbol: 'Te",
		"name: 'Tellur",
		"atomicNumber: 52",
		"}",
		"{",
		"symbol: 'I",
		"name: 'Jod",
		"atomicNumber: 53",
		"}",
		"{",
		"symbol: 'Xe",
		"name: 'Xenon",
		"atomicNumber: 54",
		"}",
		"{",
		"symbol: 'Cs",
		"name: 'Cesium",
		"atomicNumber: 55",
		"}",
		"{",
		"symbol: 'Ba",
		"name: 'Barium",
		"atomicNumber: 56",
		"}",
		"{",
		"symbol: 'La",
		"name: 'Lantan",
		"atomicNumber: 57",
		"}",
		"{",
		"symbol: 'Ce",
		"name: 'Cerium",
		"atomicNumber: 58",
		"}",
		"{",
		"symbol: 'Pr",
		"name: 'Praseodym",
		"atomicNumber: 59",
		"}",
		"{",
		"symbol: 'Nd",
		"name: 'Neodym",
		"atomicNumber: 60",
		"}",
		"{",
		"symbol: 'Pm",
		"name: 'Promethium",
		"atomicNumber: 61",
		"}",
		"{",
		"symbol: 'Sm",
		"name: 'Samarium",
		"atomicNumber: 62",
		"}",
		"{",
		"symbol: 'Eu",
		"name: 'Europium",
		"atomicNumber: 63",
		"}",
		"{",
		"symbol: 'Gd",
		"name: 'Gadolinium",
		"atomicNumber: 64",
		"}",
		"{",
		"symbol: 'Tb",
		"name: 'Terbium",
		"atomicNumber: 65",
		"}",
		"{",
		"symbol: 'Dy",
		"name: 'Dysprosium",
		"atomicNumber: 66",
		"}",
		"{",
		"symbol: 'Ho",
		"name: 'Holmium",
		"atomicNumber: 67",
		"}",
		"{",
		"symbol: 'Er",
		"name: 'Erbium",
		"atomicNumber: 68",
		"}",
		"{",
		"symbol: 'Tm",
		"name: 'Thulium",
		"atomicNumber: 69",
		"}",
		"{",
		"symbol: 'Yb",
		"name: 'Ytterbium",
		"atomicNumber: 70",
		"}",
		"{",
		"symbol: 'Lu",
		"name: 'Lutetium",
		"atomicNumber: 71",
		"}",
		"{",
		"symbol: 'Hf",
		"name: 'Hafnium",
		"atomicNumber: 72",
		"}",
		"{",
		"symbol: 'Ta",
		"name: 'Tantal",
		"atomicNumber: 73",
		"}",
		"{",
		"symbol: 'W",
		"name: 'Wolfram",
		"atomicNumber: 74",
		"}",
		"{",
		"symbol: 'Re",
		"name: 'Rhenium",
		"atomicNumber: 75",
		"}",
		"{",
		"symbol: 'Os",
		"name: 'Osmium",
		"atomicNumber: 76",
		"}",
		"{",
		"symbol: 'Ir",
		"name: 'Iridium",
		"atomicNumber: 77",
		"}",
		"{",
		"symbol: 'Pt",
		"name: 'Platina",
		"atomicNumber: 78",
		"}",
		"{",
		"symbol: 'Au",
		"name: 'Gull",
		"atomicNumber: 79",
		"}",
		"{",
		"symbol: 'Hg",
		"name: 'Kvikksølv",
		"atomicNumber: 80",
		"}",
		"{",
		"symbol: 'Tl",
		"name: 'Thallium",
		"atomicNumber: 81",
		"}",
		"{",
		"symbol: 'Pb",
		"name: 'Bly",
		"atomicNumber: 82",
		"}",
		"{",
		"symbol: 'Bi",
		"name: 'Vismut",
		"atomicNumber: 83",
		"}",
		"{",
		"symbol: 'Po",
		"name: 'Polonium",
		"atomicNumber: 84",
		"}",
		"{",
		"symbol: 'At",
		"name: 'Astat",
		"atomicNumber: 85",
		"}",
		"{",
		"symbol: 'Rn",
		"name: 'Radon",
		"atomicNumber: 86",
		"}",
		"{",
		"symbol: 'Fr",
		"name: 'Francium",
		"atomicNumber: 87",
		"}",
		"{",
		"symbol: 'Ra",
		"name: 'Radium",
		"atomicNumber: 88",
		"}",
		"{",
		"symbol: 'Ac",
		"name: 'Actinium",
		"atomicNumber: 89",
		"}",
		"{",
		"symbol: 'Th",
		"name: 'Thorium",
		"atomicNumber: 90",
		"}",
		"{",
		"symbol: 'Pa",
		"name: 'Protactinium",
		"atomicNumber: 91",
		"}",
		"{",
		"symbol: 'U",
		"name: 'Uran",
		"atomicNumber: 92",
		"}",
		"{",
		"symbol: 'Np",
		"name: 'Neptunium",
		"atomicNumber: 93",
		"}",
		"{",
		"symbol: 'Pu",
		"name: 'Plutonium",
		"atomicNumber: 94",
		"}",
		"{",
		"symbol: 'Am",
		"name: 'Americium",
		"atomicNumber: 95",
		"}",
		"{",
		"symbol: 'Cm",
		"name: 'Curium",
		"atomicNumber: 96",
		"}",
		"{",
		"symbol: 'Bk",
		"name: 'Berkelium",
		"atomicNumber: 97",
		"}",
		"{",
		"symbol: 'Cf",
		"name: 'Californium",
		"atomicNumber: 98",
		"}",
		"{",
		"symbol: 'Es",
		"name: 'Einsteinium",
		"atomicNumber: 99",
		"}",
		"{",
		"symbol: 'Fm",
		"name: 'Fermium",
		"atomicNumber: 100",
		"}",
		"{",
		"symbol: 'Md",
		"name: 'Mendelevium",
		"atomicNumber: 101",
		"}",
		"{",
		"symbol: 'No",
		"name: 'Nobelium",
		"atomicNumber: 102",
		"}",
		"{",
		"symbol: 'Lr",
		"name: 'Lawrencium",
		"atomicNumber: 103",
		"}",
		"{",
		"symbol: 'Rf",
		"name: 'Rutherfordium",
		"atomicNumber: 104",
		"}",
		"{",
		"symbol: 'Db",
		"name: 'Dubnium",
		"atomicNumber: 105",
		"}",
		"{",
		"symbol: 'Sg",
		"name: 'Seaborgium",
		"atomicNumber: 106",
		"}",
		"{",
		"symbol: 'Bh",
		"name: 'Bohrium",
		"atomicNumber: 107",
		"}",
		"{",
		"symbol: 'Hs",
		"name: 'Hassium",
		"atomicNumber: 108",
		"}",
		"{",
		"symbol: 'Mt",
		"name: 'Meitnerium",
		"atomicNumber: 109",
		"}",
		"{",
		"symbol: 'Ds",
		"name: 'Darmstadtium",
		"atomicNumber: 110",
		"}",
		"{",
		"symbol: 'Rg",
		"name: 'Røntgenium",
		"atomicNumber: 111",
		"}",
		"{",
		"symbol: 'Cn",
		"name: 'Copernicium",
		"atomicNumber: 112",
		"}",
		"{",
		"symbol: 'Nh",
		"name: 'Nihonium",
		"atomicNumber: 113",
		"}",
		"{",
		"symbol: 'Fl",
		"name: 'Flerovium",
		"atomicNumber: 114",
		"}",
		"{",
		"symbol: 'Mc",
		"name: 'Moscovium",
		"atomicNumber: 115",
		"}",
		"{",
		"symbol: 'Lv",
		"name: 'Livermorium",
		"atomicNumber: 116",
		"}",
		"{",
		"symbol: 'Ts",
		"name: 'Tenness",
		"atomicNumber: 117",
		"}",
		"{",
		"symbol: 'Og",
		"name: 'Oganesson",
		"atomicNumber: 118",
		"}"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameMaleFirstName() {
		auto data = [
		"Markus",
		"Mathias",
		"Kristian",
		"Jonas",
		"Andreas",
		"Alexander",
		"Martin",
		"Sander",
		"Daniel",
		"Magnus",
		"Henrik",
		"Tobias",
		"Kristoffer",
		"Emil",
		"Adrian",
		"Sebastian",
		"Marius",
		"Elias",
		"Fredrik",
		"Thomas",
		"Sondre",
		"Benjamin",
		"Jakob",
		"Oliver",
		"Lucas",
		"Oskar",
		"Nikolai",
		"Filip",
		"Mats",
		"William",
		"Erik",
		"Simen",
		"Ole",
		"Eirik",
		"Isak",
		"Kasper",
		"Noah",
		"Lars",
		"Joakim",
		"Johannes",
		"Håkon",
		"Sindre",
		"Jørgen",
		"Herman",
		"Anders",
		"Jonathan",
		"Even",
		"Theodor",
		"Mikkel",
		"Aksel"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameSuffix() {
		auto data = [
		"Jr.",
		"Sr.",
		"I",
		"II",
		"III",
		"IV",
		"V'"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameLastName() {
		auto data = [
		"Johansen",
		"Hansen",
		"Andersen",
		"Kristiansen",
		"Larsen",
		"Olsen",
		"Solberg",
		"Andresen",
		"Pedersen",
		"Nilsen",
		"Berg",
		"Halvorsen",
		"Karlsen",
		"Svendsen",
		"Jensen",
		"Haugen",
		"Martinsen",
		"Eriksen",
		"Sørensen",
		"Johnsen",
		"Myhrer",
		"Johannessen",
		"Nielsen",
		"Hagen",
		"Pettersen",
		"Bakke",
		"Skuterud",
		"Løken",
		"Gundersen",
		"Strand",
		"Jørgensen",
		"Kvarme",
		"Røed",
		"Sæther",
		"Stensrud",
		"Moe",
		"Kristoffersen",
		"Jakobsen",
		"Holm",
		"Aas",
		"Lie",
		"Moen",
		"Andreassen",
		"Vedvik",
		"Nguyen",
		"Jacobsen",
		"Torgersen",
		"Ruud",
		"Krogh",
		"Christiansen",
		"Bjerke",
		"Aalerud",
		"Borge",
		"Sørlie",
		"Berge",
		"Østli",
		"Ødegård",
		"Torp",
		"Henriksen",
		"Haukelidsæter",
		"Fjeld",
		"Danielsen",
		"Aasen",
		"Fredriksen",
		"Dahl",
		"Berntsen",
		"Arnesen",
		"Wold",
		"Thoresen",
		"Solheim",
		"Skoglund",
		"Bakken",
		"Amundsen",
		"Solli",
		"Smogeli",
		"Kristensen",
		"Glosli",
		"Fossum",
		"Evensen",
		"Eide",
		"Carlsen",
		"Østby",
		"Vegge",
		"Tangen",
		"Smedsrud",
		"Olstad",
		"Lunde",
		"Kleven",
		"Huseby",
		"Bjørnstad",
		"Ryan",
		"Rasmussen",
		"Nygård",
		"Nordskaug",
		"Nordby",
		"Mathisen",
		"Hopland",
		"Gran",
		"Finstad",
		"Edvardsen"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameFirstName() {
		auto data = [
		"Emma",
		"Sara",
		"Thea",
		"Ida",
		"Julie",
		"Nora",
		"Emilie",
		"Ingrid",
		"Hanna",
		"Maria",
		"Sofie",
		"Anna",
		"Malin",
		"Amalie",
		"Vilde",
		"Frida",
		"Andrea",
		"Tuva",
		"Victoria",
		"Mia",
		"Karoline",
		"Mathilde",
		"Martine",
		"Linnea",
		"Marte",
		"Hedda",
		"Marie",
		"Helene",
		"Silje",
		"Leah",
		"Maja",
		"Elise",
		"Oda",
		"Kristine",
		"Aurora",
		"Kaja",
		"Camilla",
		"Mari",
		"Maren",
		"Mina",
		"Selma",
		"Jenny",
		"Celine",
		"Eline",
		"Sunniva",
		"Natalie",
		"Tiril",
		"Synne",
		"Sandra",
		"Madeleine",
		"Markus",
		"Mathias",
		"Kristian",
		"Jonas",
		"Andreas",
		"Alexander",
		"Martin",
		"Sander",
		"Daniel",
		"Magnus",
		"Henrik",
		"Tobias",
		"Kristoffer",
		"Emil",
		"Adrian",
		"Sebastian",
		"Marius",
		"Elias",
		"Fredrik",
		"Thomas",
		"Sondre",
		"Benjamin",
		"Jakob",
		"Oliver",
		"Lucas",
		"Oskar",
		"Nikolai",
		"Filip",
		"Mats",
		"William",
		"Erik",
		"Simen",
		"Ole",
		"Eirik",
		"Isak",
		"Kasper",
		"Noah",
		"Lars",
		"Joakim",
		"Johannes",
		"Håkon",
		"Sindre",
		"Jørgen",
		"Herman",
		"Anders",
		"Jonathan",
		"Even",
		"Theodor",
		"Mikkel",
		"Aksel"
		];
		return choice(data, this.rnd);
	}


	override string nameName() {
		final switch(uniform(0, 6, this.rnd)) {
			case 0: return namePrefix() ~ " " ~ nameFirstName() ~ " " ~ nameLastName();
			case 1: return nameFirstName() ~ " " ~ nameLastName() ~ " " ~ nameSuffix();
			case 2: return nameFemaleFirstName() ~ " " ~ nameFemaleFirstName() ~ " " ~ nameLastName();
			case 3: return nameMaleFirstName() ~ " " ~ nameMaleFirstName() ~ " " ~ nameLastName();
			case 4: return nameFirstName() ~ " " ~ nameLastName() ~ " " ~ nameLastName();
			case 5: return nameFirstName() ~ " " ~ nameLastName();
		}
	}

	///
	override string nameFemaleFirstName() {
		auto data = [
		"Emma",
		"Sara",
		"Thea",
		"Ida",
		"Julie",
		"Nora",
		"Emilie",
		"Ingrid",
		"Hanna",
		"Maria",
		"Sofie",
		"Anna",
		"Malin",
		"Amalie",
		"Vilde",
		"Frida",
		"Andrea",
		"Tuva",
		"Victoria",
		"Mia",
		"Karoline",
		"Mathilde",
		"Martine",
		"Linnea",
		"Marte",
		"Hedda",
		"Marie",
		"Helene",
		"Silje",
		"Leah",
		"Maja",
		"Elise",
		"Oda",
		"Kristine",
		"Aurora",
		"Kaja",
		"Camilla",
		"Mari",
		"Maren",
		"Mina",
		"Selma",
		"Jenny",
		"Celine",
		"Eline",
		"Sunniva",
		"Natalie",
		"Tiril",
		"Synne",
		"Sandra",
		"Madeleine"
		];
		return choice(data, this.rnd);
	}

	///
	override string namePrefix() {
		auto data = [
		"Dr.",
		"Prof.'"
		];
		return choice(data, this.rnd);
	}

	///
	override string wordInterjection() {
		auto data = [
		"aha",
		"au",
		"bravo",
		"bø",
		"fy",
		"fysj",
		"huff",
		"hurra",
		"hæ",
		"jippi",
		"nam",
		"oi",
		"ops",
		"pytt",
		"pøh",
		"å",
		"æsj"
		];
		return choice(data, this.rnd);
	}

	///
	override string wordConjunction() {
		auto data = [
		"eller",
		"for",
		"men",
		"og",
		"så'"
		];
		return choice(data, this.rnd);
	}

	///
	override string wordAdjective() {
		auto data = [
		"aktuell",
		"alvorlig",
		"ansvarlig",
		"berømt",
		"betydelig",
		"bevisst",
		"bred",
		"dum",
		"dyp",
		"ekkel",
		"eksisterende",
		"ekte",
		"enkel",
		"ensom",
		"falsk",
		"fast",
		"felles",
		"fersk",
		"fjern",
		"flau",
		"følsom",
		"forsiktig",
		"fremmed",
		"fryktelig",
		"glatt",
		"gravid",
		"grunnleggende",
		"heldig",
		"hemmelig",
		"hjelpsom",
		"hyppig",
		"imponerende",
		"kjedelig",
		"kul",
		"langsom",
		"lat",
		"lav",
		"lignende",
		"løs",
		"lovlig",
		"lykkelig",
		"lys",
		"menneskelig",
		"merkelig",
		"midlertidig",
		"mistenkelig",
		"modig",
		"mørk",
		"morsom",
		"motsatt",
		"mulig",
		"naturlig",
		"nåværende",
		"nødvendig",
		"nøyaktig",
		"nysgjerrig",
		"nyttig",
		"offentlig",
		"opprinnelig",
		"ordentlig",
		"plutselig",
		"rå",
		"rask",
		"regelmessig",
		"ren",
		"rettferdig",
		"rimelig",
		"rund",
		"ryddig",
		"sannsynlig",
		"selvsikker",
		"sint",
		"skarp",
		"skikkelig",
		"skyldig",
		"smal",
		"søt",
		"spennende",
		"stille",
		"stolt",
		"stram",
		"streng",
		"stygg",
		"sulten",
		"sunn",
		"synlig",
		"tilgjengelig",
		"tilstrekkelig",
		"tung",
		"tynn",
		"uavhengig",
		"ujevn",
		"ulovlig",
		"ulykkelig",
		"umiddelbar",
		"urettferdig",
		"vellykket",
		"vennlig",
		"verdifull",
		"vill",
		"villig",
		"voksen",
		"ærlig",
		"åpen",
		"åpenbar"
		];
		return choice(data, this.rnd);
	}

	///
	override string commerceDepartment() {
		auto data = [
		"Barn",
		"Bøker",
		"Dagligvarer",
		"Datamaskiner",
		"Elektronikk",
		"Filmer",
		"Hage og utemiljø",
		"Helse",
		"Hjem",
		"Klær",
		"Leker",
		"Musikk",
		"Sko",
		"Skjønnhet",
		"Spill",
		"Smykker",
		"Sport",
		"Verktøy"
		];
		return choice(data, this.rnd);
	}

	///
	string addressCommonStreetSuffix() {
		auto data = [
		"sgate",
		"svei",
		"s Gate",
		"s Vei",
		"gata",
		"veien'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCityName() {
		auto data = [
		"Fet",
		"Gjes",
		"Høy",
		"Inn",
		"Fager",
		"Lille",
		"Lo",
		"Mal",
		"Nord",
		"Nær",
		"Sand",
		"Sme",
		"Stav",
		"Stor",
		"Tand",
		"Ut",
		"Vest"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressState() {
		auto data = [
		"'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDefaultCountry() {
		auto data = [
		"Norge'"
		];
		return choice(data, this.rnd);
	}


	override string addressStreetAddress() {
		final switch(uniform(0, 2, this.rnd)) {
			case 0: return "normal: '" ~ addressStreet() ~ " " ~ addressBuildingNumber();
			case 1: return "full: '" ~ addressStreet() ~ " " ~ addressBuildingNumber() ~ " " ~ addressSecondaryAddress();
		}
	}

	///
	string addressStreetPrefix() {
		auto data = [
		"Øvre",
		"Nedre",
		"Søndre",
		"Gamle",
		"Østre",
		"Vestre'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCitySuffix() {
		auto data = [
		"berg",
		"borg",
		"by",
		"bø",
		"dal",
		"eid",
		"fjell",
		"fjord",
		"foss",
		"grunn",
		"hamn",
		"havn",
		"helle",
		"mark",
		"nes",
		"odden",
		"sand",
		"sjøen",
		"stad",
		"strand",
		"strøm",
		"sund",
		"vik",
		"vær",
		"våg",
		"ø",
		"øy",
		"ås"
		];
		return choice(data, this.rnd);
	}


	override string addressStreet() {
		final switch(uniform(0, 4, this.rnd)) {
			case 0: return addressStreetName() ~ addressStreetSuffix();
			case 1: return addressStreetPrefix() ~ " " ~ addressStreetName() ~ addressStreetSuffix();
			case 2: return nameFirstName() ~ addressCommonStreetSuffix();
			case 3: return nameLastName() ~ addressCommonStreetSuffix();
		}
	}

	///
	string addressStreetName() {
		auto data = [
		"Eike",
		"Bjørke",
		"Gran",
		"Vass",
		"Furu",
		"Litj",
		"Lille",
		"Høy",
		"Fosse",
		"Elve",
		"Ku",
		"Konvall",
		"Soldugg",
		"Hestemyr",
		"Granitt",
		"Hegge",
		"Rogne",
		"Fiol",
		"Sol",
		"Ting",
		"Malm",
		"Klokker",
		"Preste",
		"Dam",
		"Geiterygg",
		"Bekke",
		"Berg",
		"Kirke",
		"Kors",
		"Bru",
		"Blåveis",
		"Torg",
		"Sjø"
		];
		return choice(data, this.rnd);
	}


	override string addressCity() {
		final switch(uniform(0, 1, this.rnd)) {
			case 0: return addressCityName() ~ addressCitySuffix() ~ "'";
		}
	}

	///
	override string addressBuildingNumber() {
		auto data = [
		"#",
		"##'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressPostcode() {
		auto data = [
		"####",
		"####",
		"####",
		"0###'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}


	override string addressSecondaryAddress() {
		final switch(uniform(0, 3, this.rnd)) {
			case 0: return "Leil. ###";
			case 1: return "Oppgang A";
			case 2: return "Oppgang B'";
		}
	}

	///
	override string addressStreetSuffix() {
		auto data = [
		"alléen",
		"bakken",
		"berget",
		"bråten",
		"eggen",
		"engen",
		"ekra",
		"faret",
		"flata",
		"gata",
		"gjerdet",
		"grenda",
		"gropa",
		"hagen",
		"haugen",
		"havna",
		"holtet",
		"høgda",
		"jordet",
		"kollen",
		"kroken",
		"lia",
		"lunden",
		"lyngen",
		"løkka",
		"marka",
		"moen",
		"myra",
		"plassen",
		"ringen",
		"roa",
		"røa",
		"skogen",
		"skrenten",
		"spranget",
		"stien",
		"stranda",
		"stubben",
		"stykket",
		"svingen",
		"tjernet",
		"toppen",
		"tunet",
		"vollen",
		"vika",
		"åsen"
		];
		return choice(data, this.rnd);
	}

	///
	override string colorHuman() {
		auto data = [
		"beige",
		"grønn",
		"grå",
		"gul",
		"hvit",
		"indigo",
		"karmin",
		"blå",
		"lilla",
		"limegrønn",
		"magenta",
		"oransje",
		"rosa",
		"rød",
		"smaragdgrønn",
		"svart",
		"turkis"
		];
		return choice(data, this.rnd);
	}

	///
	override string phoneNumberFormats() {
		auto data = [
		"########",
		"## ## ## ##",
		"### ## ###",
		"+47 ## ## ## ##'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string internetDomainSuffix() {
		auto data = [
		"no",
		"com",
		"net",
		"org'"
		];
		return choice(data, this.rnd);
	}

}
