// generated by fakerjsgenerator
module faked.test;

import std.array : empty;
import std.stdio;
import std.format : format;


struct ToIgnore {
	string lang;
	string[] methods;
}

const allowedToFail =
	[ ToIgnore("az"
		, ["addressState", "companySuffix", "namePrefix", "nameSuffix"])
	, ToIgnore("cz" , ["addressState", "addressStateAbbr"])
	, ToIgnore("id_ID", ["namePrefix"])
	, ToIgnore("it", ["nameSuffix"])
	, ToIgnore("mk", ["nameSuffix"])
	, ToIgnore("pt_BR", ["addressCityPrefix"])
	, ToIgnore("pt_PT", ["addressCityPrefix", "addressCitySuffix", "nameSuffix"])
	, ToIgnore("ru", ["nameSuffix", "namePrefix"])
	, ToIgnore("sk", ["addressState", "addressStateAbbr"])
	];

void fakedAssert(D)(D fakeData, const string lang, const string method, const long round) {
	foreach(ref l; allowedToFail) {
		if(l.lang == lang) {
			foreach(m; l.methods) {
				if(m == method) {
					if(fakeData.empty) {
						//writefln("%5s %20s %3d gives no data as expected", lang, method, round);
						return;
					} else {
						assert(false, format("%5s %20s %3d was expected to give no data", lang, method, round));
					}
				}
			}
		}
	}
	assert(!fakeData.empty, format("%5s %20s %3d failed to give data", lang
				, method, round));
}

unittest {
	import faked.faker_af_za;
    auto faker = new Faker_af_za(1);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "af_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "af_ZA", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "af_ZA", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "af_ZA", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "af_ZA", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "af_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "af_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "af_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "af_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "af_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "af_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "af_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "af_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "af_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "af_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "af_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "af_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "af_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "af_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "af_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "af_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "af_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "af_ZA", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "af_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "af_ZA", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "af_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "af_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "af_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "af_ZA", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "af_ZA", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "af_ZA", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "af_ZA", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "af_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "af_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "af_ZA", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "af_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "af_ZA", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "af_ZA", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "af_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "af_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "af_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "af_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "af_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "af_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "af_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "af_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "af_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "af_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "af_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "af_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "af_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "af_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "af_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "af_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "af_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "af_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "af_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "af_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "af_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "af_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "af_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "af_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "af_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "af_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "af_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "af_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "af_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "af_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "af_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "af_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "af_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "af_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "af_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "af_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "af_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "af_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "af_ZA", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "af_ZA", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "af_ZA", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "af_ZA", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "af_ZA", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "af_ZA", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "af_ZA", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "af_ZA", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "af_ZA", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "af_ZA", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "af_ZA", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "af_ZA", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "af_ZA", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "af_ZA", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "af_ZA", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "af_ZA", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "af_ZA", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "af_ZA", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "af_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "af_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "af_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "af_ZA", "loremSentances", i);
		fakedAssert(faker.loremText(), "af_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "af_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "af_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "af_ZA", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "af_ZA", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "af_ZA", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "af_ZA", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "af_ZA", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "af_ZA", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "af_ZA", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "af_ZA", "personFirstName", i);
		fakedAssert(faker.personGender(), "af_ZA", "personGender", i);
		fakedAssert(faker.personLastName(), "af_ZA", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "af_ZA", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "af_ZA", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "af_ZA", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "af_ZA", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "af_ZA", "personMiddleName", i);
		fakedAssert(faker.personName(), "af_ZA", "personName", i);
		fakedAssert(faker.personSex(), "af_ZA", "personSex", i);
		fakedAssert(faker.personSuffix(), "af_ZA", "personSuffix", i);
		fakedAssert(faker.personTitle(), "af_ZA", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "af_ZA", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "af_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "af_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "af_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "af_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "af_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "af_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "af_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "af_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "af_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "af_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "af_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "af_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "af_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "af_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "af_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "af_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "af_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "af_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "af_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "af_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ar;
    auto faker = new Faker_ar(2);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ar", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ar", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ar", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ar", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ar", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ar", "animalBear", i);
		fakedAssert(faker.animalBird(), "ar", "animalBird", i);
		fakedAssert(faker.animalCat(), "ar", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ar", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ar", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ar", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ar", "animalDog", i);
		fakedAssert(faker.animalFish(), "ar", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ar", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ar", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ar", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ar", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ar", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ar", "animalSnake", i);
		fakedAssert(faker.animalType(), "ar", "animalType", i);
		fakedAssert(faker.appAuthor(), "ar", "appAuthor", i);
		fakedAssert(faker.appName(), "ar", "appName", i);
		fakedAssert(faker.appVersion(), "ar", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ar", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ar", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ar", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ar", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ar", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ar", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ar", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ar", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ar", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ar", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ar", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ar", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ar", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ar", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ar", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ar", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ar", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ar", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ar", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ar", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ar", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ar", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ar", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ar", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ar", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ar", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ar", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ar", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ar", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ar", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ar", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ar", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ar", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ar", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ar", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ar", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ar", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ar", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ar", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ar", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ar", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ar", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ar", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ar", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ar", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ar", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ar", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ar", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ar", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ar", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ar", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ar", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ar", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ar", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ar", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ar", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ar", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ar", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ar", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ar", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ar", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ar", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ar", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ar", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ar", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ar", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ar", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ar", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ar", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ar", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ar", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ar", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ar", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ar", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ar", "loremSentances", i);
		fakedAssert(faker.loremText(), "ar", "loremText", i);
		fakedAssert(faker.loremWords(), "ar", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ar", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ar", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ar", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ar", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ar", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ar", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ar", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ar", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ar", "personFirstName", i);
		fakedAssert(faker.personGender(), "ar", "personGender", i);
		fakedAssert(faker.personLastName(), "ar", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ar", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ar", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ar", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ar", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ar", "personMiddleName", i);
		fakedAssert(faker.personName(), "ar", "personName", i);
		fakedAssert(faker.personSex(), "ar", "personSex", i);
		fakedAssert(faker.personSuffix(), "ar", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ar", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ar", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ar", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ar", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ar", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ar", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ar", "teamCreature", i);
		fakedAssert(faker.teamName(), "ar", "teamName", i);
		fakedAssert(faker.vehicle(), "ar", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ar", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ar", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ar", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ar", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ar", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ar", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ar", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ar", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ar", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ar", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ar", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ar", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ar", "wordVerb", i);

	}
}

unittest {
	import faked.faker_az;
    auto faker = new Faker_az(3);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "az", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "az", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "az", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "az", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "az", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "az", "animalBear", i);
		fakedAssert(faker.animalBird(), "az", "animalBird", i);
		fakedAssert(faker.animalCat(), "az", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "az", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "az", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "az", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "az", "animalDog", i);
		fakedAssert(faker.animalFish(), "az", "animalFish", i);
		fakedAssert(faker.animalHorse(), "az", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "az", "animalInsect", i);
		fakedAssert(faker.animalLion(), "az", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "az", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "az", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "az", "animalSnake", i);
		fakedAssert(faker.animalType(), "az", "animalType", i);
		fakedAssert(faker.appAuthor(), "az", "appAuthor", i);
		fakedAssert(faker.appName(), "az", "appName", i);
		fakedAssert(faker.appVersion(), "az", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "az", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "az", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "az", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "az", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "az", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "az", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "az", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "az", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "az", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "az", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "az", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "az", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "az", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "az", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "az", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "az", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "az", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "az", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "az", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "az", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "az", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "az", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "az", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "az", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "az", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "az", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "az", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "az", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "az", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "az", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "az", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "az", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "az", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "az", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "az", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "az", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "az", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "az", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "az", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "az", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "az", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "az", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "az", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "az", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "az", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "az", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "az", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "az", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "az", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "az", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "az", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "az", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "az", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "az", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "az", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "az", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "az", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "az", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "az", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "az", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "az", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "az", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "az", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "az", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "az", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "az", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "az", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "az", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "az", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "az", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "az", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "az", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "az", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "az", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "az", "loremSentances", i);
		fakedAssert(faker.loremText(), "az", "loremText", i);
		fakedAssert(faker.loremWords(), "az", "loremWords", i);
		fakedAssert(faker.musicGenre(), "az", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "az", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "az", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "az", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "az", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "az", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "az", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "az", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "az", "personFirstName", i);
		fakedAssert(faker.personGender(), "az", "personGender", i);
		fakedAssert(faker.personLastName(), "az", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "az", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "az", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "az", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "az", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "az", "personMiddleName", i);
		fakedAssert(faker.personName(), "az", "personName", i);
		fakedAssert(faker.personSex(), "az", "personSex", i);
		fakedAssert(faker.personSuffix(), "az", "personSuffix", i);
		fakedAssert(faker.personTitle(), "az", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "az", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "az", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "az", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "az", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "az", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "az", "teamCreature", i);
		fakedAssert(faker.teamName(), "az", "teamName", i);
		fakedAssert(faker.vehicle(), "az", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "az", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "az", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "az", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "az", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "az", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "az", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "az", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "az", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "az", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "az", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "az", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "az", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "az", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de;
    auto faker = new Faker_de(4);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "de", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "de", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "de", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "de", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "de", "animalBear", i);
		fakedAssert(faker.animalBird(), "de", "animalBird", i);
		fakedAssert(faker.animalCat(), "de", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de", "animalDog", i);
		fakedAssert(faker.animalFish(), "de", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de", "animalSnake", i);
		fakedAssert(faker.animalType(), "de", "animalType", i);
		fakedAssert(faker.appAuthor(), "de", "appAuthor", i);
		fakedAssert(faker.appName(), "de", "appName", i);
		fakedAssert(faker.appVersion(), "de", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "de", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "de", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "de", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "de", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "de", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "de", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "de", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "de", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "de", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "de", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "de", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "de", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "de", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "de", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "de", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "de", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "de", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "de", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "de", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "de", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "de", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "de", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "de", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "de", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "de", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "de", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "de", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "de", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "de", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "de", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "de", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "de", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "de", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de", "loremSentances", i);
		fakedAssert(faker.loremText(), "de", "loremText", i);
		fakedAssert(faker.loremWords(), "de", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "de", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "de", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "de", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "de", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "de", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "de", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "de", "personFirstName", i);
		fakedAssert(faker.personGender(), "de", "personGender", i);
		fakedAssert(faker.personLastName(), "de", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "de", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "de", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "de", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "de", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "de", "personMiddleName", i);
		fakedAssert(faker.personName(), "de", "personName", i);
		fakedAssert(faker.personSex(), "de", "personSex", i);
		fakedAssert(faker.personSuffix(), "de", "personSuffix", i);
		fakedAssert(faker.personTitle(), "de", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "de", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "de", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de", "teamCreature", i);
		fakedAssert(faker.teamName(), "de", "teamName", i);
		fakedAssert(faker.vehicle(), "de", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de_at;
    auto faker = new Faker_de_at(5);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "de_AT", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de_AT", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "de_AT", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "de_AT", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "de_AT", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "de_AT", "animalBear", i);
		fakedAssert(faker.animalBird(), "de_AT", "animalBird", i);
		fakedAssert(faker.animalCat(), "de_AT", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de_AT", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de_AT", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de_AT", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de_AT", "animalDog", i);
		fakedAssert(faker.animalFish(), "de_AT", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de_AT", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de_AT", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de_AT", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de_AT", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de_AT", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de_AT", "animalSnake", i);
		fakedAssert(faker.animalType(), "de_AT", "animalType", i);
		fakedAssert(faker.appAuthor(), "de_AT", "appAuthor", i);
		fakedAssert(faker.appName(), "de_AT", "appName", i);
		fakedAssert(faker.appVersion(), "de_AT", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "de_AT", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de_AT", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "de_AT", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de_AT", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de_AT", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de_AT", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "de_AT", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "de_AT", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "de_AT", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de_AT", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de_AT", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "de_AT", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "de_AT", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de_AT", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "de_AT", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "de_AT", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de_AT", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de_AT", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de_AT", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de_AT", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de_AT", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de_AT", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de_AT", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de_AT", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de_AT", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de_AT", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "de_AT", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de_AT", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "de_AT", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de_AT", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de_AT", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de_AT", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de_AT", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de_AT", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "de_AT", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de_AT", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de_AT", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de_AT", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de_AT", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de_AT", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de_AT", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de_AT", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "de_AT", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de_AT", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de_AT", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de_AT", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "de_AT", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de_AT", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "de_AT", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de_AT", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de_AT", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de_AT", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de_AT", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de_AT", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "de_AT", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "de_AT", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "de_AT", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "de_AT", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "de_AT", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "de_AT", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "de_AT", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "de_AT", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "de_AT", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "de_AT", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "de_AT", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "de_AT", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "de_AT", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "de_AT", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "de_AT", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "de_AT", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "de_AT", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "de_AT", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de_AT", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de_AT", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de_AT", "loremSentances", i);
		fakedAssert(faker.loremText(), "de_AT", "loremText", i);
		fakedAssert(faker.loremWords(), "de_AT", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de_AT", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de_AT", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "de_AT", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "de_AT", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "de_AT", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "de_AT", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "de_AT", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "de_AT", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "de_AT", "personFirstName", i);
		fakedAssert(faker.personGender(), "de_AT", "personGender", i);
		fakedAssert(faker.personLastName(), "de_AT", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "de_AT", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "de_AT", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "de_AT", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "de_AT", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "de_AT", "personMiddleName", i);
		fakedAssert(faker.personName(), "de_AT", "personName", i);
		fakedAssert(faker.personSex(), "de_AT", "personSex", i);
		fakedAssert(faker.personSuffix(), "de_AT", "personSuffix", i);
		fakedAssert(faker.personTitle(), "de_AT", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "de_AT", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "de_AT", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de_AT", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de_AT", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de_AT", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de_AT", "teamCreature", i);
		fakedAssert(faker.teamName(), "de_AT", "teamName", i);
		fakedAssert(faker.vehicle(), "de_AT", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de_AT", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de_AT", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de_AT", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de_AT", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de_AT", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de_AT", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de_AT", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de_AT", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de_AT", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de_AT", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de_AT", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de_AT", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de_AT", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de_ch;
    auto faker = new Faker_de_ch(6);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "de_CH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de_CH", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "de_CH", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "de_CH", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "de_CH", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "de_CH", "animalBear", i);
		fakedAssert(faker.animalBird(), "de_CH", "animalBird", i);
		fakedAssert(faker.animalCat(), "de_CH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de_CH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de_CH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de_CH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de_CH", "animalDog", i);
		fakedAssert(faker.animalFish(), "de_CH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de_CH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de_CH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de_CH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de_CH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de_CH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de_CH", "animalSnake", i);
		fakedAssert(faker.animalType(), "de_CH", "animalType", i);
		fakedAssert(faker.appAuthor(), "de_CH", "appAuthor", i);
		fakedAssert(faker.appName(), "de_CH", "appName", i);
		fakedAssert(faker.appVersion(), "de_CH", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "de_CH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de_CH", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "de_CH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de_CH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de_CH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de_CH", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "de_CH", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "de_CH", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "de_CH", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de_CH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de_CH", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "de_CH", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "de_CH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de_CH", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "de_CH", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "de_CH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de_CH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de_CH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de_CH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de_CH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de_CH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de_CH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de_CH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de_CH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de_CH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de_CH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "de_CH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de_CH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "de_CH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de_CH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de_CH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de_CH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de_CH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de_CH", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "de_CH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de_CH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de_CH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de_CH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de_CH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de_CH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de_CH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de_CH", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "de_CH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de_CH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de_CH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de_CH", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "de_CH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de_CH", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "de_CH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de_CH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de_CH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de_CH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de_CH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de_CH", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "de_CH", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "de_CH", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "de_CH", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "de_CH", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "de_CH", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "de_CH", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "de_CH", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "de_CH", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "de_CH", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "de_CH", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "de_CH", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "de_CH", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "de_CH", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "de_CH", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "de_CH", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "de_CH", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "de_CH", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "de_CH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de_CH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de_CH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de_CH", "loremSentances", i);
		fakedAssert(faker.loremText(), "de_CH", "loremText", i);
		fakedAssert(faker.loremWords(), "de_CH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de_CH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de_CH", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "de_CH", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "de_CH", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "de_CH", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "de_CH", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "de_CH", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "de_CH", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "de_CH", "personFirstName", i);
		fakedAssert(faker.personGender(), "de_CH", "personGender", i);
		fakedAssert(faker.personLastName(), "de_CH", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "de_CH", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "de_CH", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "de_CH", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "de_CH", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "de_CH", "personMiddleName", i);
		fakedAssert(faker.personName(), "de_CH", "personName", i);
		fakedAssert(faker.personSex(), "de_CH", "personSex", i);
		fakedAssert(faker.personSuffix(), "de_CH", "personSuffix", i);
		fakedAssert(faker.personTitle(), "de_CH", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "de_CH", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "de_CH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de_CH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de_CH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de_CH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de_CH", "teamCreature", i);
		fakedAssert(faker.teamName(), "de_CH", "teamName", i);
		fakedAssert(faker.vehicle(), "de_CH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de_CH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de_CH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de_CH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de_CH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de_CH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de_CH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de_CH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de_CH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de_CH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de_CH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de_CH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de_CH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de_CH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_el;
    auto faker = new Faker_el(7);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "el", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "el", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "el", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "el", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "el", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "el", "animalBear", i);
		fakedAssert(faker.animalBird(), "el", "animalBird", i);
		fakedAssert(faker.animalCat(), "el", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "el", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "el", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "el", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "el", "animalDog", i);
		fakedAssert(faker.animalFish(), "el", "animalFish", i);
		fakedAssert(faker.animalHorse(), "el", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "el", "animalInsect", i);
		fakedAssert(faker.animalLion(), "el", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "el", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "el", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "el", "animalSnake", i);
		fakedAssert(faker.animalType(), "el", "animalType", i);
		fakedAssert(faker.appAuthor(), "el", "appAuthor", i);
		fakedAssert(faker.appName(), "el", "appName", i);
		fakedAssert(faker.appVersion(), "el", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "el", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "el", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "el", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "el", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "el", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "el", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "el", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "el", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "el", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "el", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "el", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "el", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "el", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "el", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "el", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "el", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "el", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "el", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "el", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "el", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "el", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "el", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "el", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "el", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "el", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "el", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "el", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "el", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "el", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "el", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "el", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "el", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "el", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "el", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "el", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "el", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "el", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "el", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "el", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "el", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "el", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "el", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "el", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "el", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "el", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "el", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "el", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "el", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "el", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "el", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "el", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "el", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "el", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "el", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "el", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "el", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "el", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "el", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "el", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "el", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "el", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "el", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "el", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "el", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "el", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "el", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "el", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "el", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "el", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "el", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "el", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "el", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "el", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "el", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "el", "loremSentances", i);
		fakedAssert(faker.loremText(), "el", "loremText", i);
		fakedAssert(faker.loremWords(), "el", "loremWords", i);
		fakedAssert(faker.musicGenre(), "el", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "el", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "el", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "el", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "el", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "el", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "el", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "el", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "el", "personFirstName", i);
		fakedAssert(faker.personGender(), "el", "personGender", i);
		fakedAssert(faker.personLastName(), "el", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "el", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "el", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "el", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "el", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "el", "personMiddleName", i);
		fakedAssert(faker.personName(), "el", "personName", i);
		fakedAssert(faker.personSex(), "el", "personSex", i);
		fakedAssert(faker.personSuffix(), "el", "personSuffix", i);
		fakedAssert(faker.personTitle(), "el", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "el", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "el", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "el", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "el", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "el", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "el", "teamCreature", i);
		fakedAssert(faker.teamName(), "el", "teamName", i);
		fakedAssert(faker.vehicle(), "el", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "el", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "el", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "el", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "el", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "el", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "el", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "el", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "el", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "el", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "el", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "el", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "el", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "el", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_au;
    auto faker = new Faker_en_au(8);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_AU", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_AU", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_AU", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_AU", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_AU", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_AU", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_AU", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_AU", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_AU", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_AU", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_AU", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_AU", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_AU", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_AU", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_AU", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_AU", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_AU", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_AU", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_AU", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_AU", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_AU", "appAuthor", i);
		fakedAssert(faker.appName(), "en_AU", "appName", i);
		fakedAssert(faker.appVersion(), "en_AU", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_AU", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_AU", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_AU", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_AU", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_AU", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_AU", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_AU", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_AU", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_AU", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_AU", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_AU", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_AU", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_AU", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_AU", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_AU", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_AU", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_AU", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_AU", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_AU", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_AU", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_AU", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_AU", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_AU", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_AU", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_AU", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_AU", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_AU", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_AU", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_AU", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_AU", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_AU", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_AU", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_AU", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_AU", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_AU", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_AU", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_AU", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_AU", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_AU", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_AU", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_AU", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_AU", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_AU", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_AU", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_AU", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_AU", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_AU", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_AU", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_AU", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_AU", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_AU", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_AU", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_AU", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_AU", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_AU", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_AU", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_AU", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_AU", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_AU", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_AU", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_AU", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_AU", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_AU", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_AU", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_AU", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_AU", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_AU", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_AU", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_AU", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_AU", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_AU", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_AU", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_AU", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_AU", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_AU", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_AU", "loremText", i);
		fakedAssert(faker.loremWords(), "en_AU", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_AU", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_AU", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_AU", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_AU", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_AU", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_AU", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_AU", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_AU", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_AU", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_AU", "personGender", i);
		fakedAssert(faker.personLastName(), "en_AU", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_AU", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_AU", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_AU", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_AU", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_AU", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_AU", "personName", i);
		fakedAssert(faker.personSex(), "en_AU", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_AU", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_AU", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_AU", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_AU", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_AU", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_AU", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_AU", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_AU", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_AU", "teamName", i);
		fakedAssert(faker.vehicle(), "en_AU", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_AU", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_AU", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_AU", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_AU", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_AU", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_AU", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_AU", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_AU", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_AU", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_AU", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_AU", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_AU", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_AU", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_au_ocker;
    auto faker = new Faker_en_au_ocker(9);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_AU_ocker", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_AU_ocker", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_AU_ocker", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_AU_ocker", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_AU_ocker", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_AU_ocker", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_AU_ocker", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_AU_ocker", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_AU_ocker", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_AU_ocker", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_AU_ocker", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_AU_ocker", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_AU_ocker", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_AU_ocker", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_AU_ocker", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_AU_ocker", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_AU_ocker", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_AU_ocker", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_AU_ocker", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_AU_ocker", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_AU_ocker", "appAuthor", i);
		fakedAssert(faker.appName(), "en_AU_ocker", "appName", i);
		fakedAssert(faker.appVersion(), "en_AU_ocker", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_AU_ocker", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_AU_ocker", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_AU_ocker", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_AU_ocker", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_AU_ocker", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_AU_ocker", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_AU_ocker", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_AU_ocker", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_AU_ocker", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_AU_ocker", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_AU_ocker", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_AU_ocker", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_AU_ocker", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_AU_ocker", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_AU_ocker", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_AU_ocker", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_AU_ocker", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_AU_ocker", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_AU_ocker", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_AU_ocker", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_AU_ocker", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_AU_ocker", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_AU_ocker", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_AU_ocker", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_AU_ocker", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_AU_ocker", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_AU_ocker", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_AU_ocker", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_AU_ocker", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_AU_ocker", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_AU_ocker", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_AU_ocker", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_AU_ocker", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_AU_ocker", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_AU_ocker", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_AU_ocker", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_AU_ocker", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_AU_ocker", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_AU_ocker", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_AU_ocker", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_AU_ocker", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_AU_ocker", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_AU_ocker", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_AU_ocker", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_AU_ocker", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_AU_ocker", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_AU_ocker", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_AU_ocker", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_AU_ocker", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_AU_ocker", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_AU_ocker", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_AU_ocker", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_AU_ocker", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_AU_ocker", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_AU_ocker", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_AU_ocker", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_AU_ocker", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_AU_ocker", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_AU_ocker", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_AU_ocker", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_AU_ocker", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_AU_ocker", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_AU_ocker", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_AU_ocker", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_AU_ocker", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_AU_ocker", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_AU_ocker", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_AU_ocker", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_AU_ocker", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_AU_ocker", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_AU_ocker", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_AU_ocker", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_AU_ocker", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_AU_ocker", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_AU_ocker", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_AU_ocker", "loremText", i);
		fakedAssert(faker.loremWords(), "en_AU_ocker", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_AU_ocker", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_AU_ocker", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_AU_ocker", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_AU_ocker", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_AU_ocker", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_AU_ocker", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_AU_ocker", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_AU_ocker", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_AU_ocker", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_AU_ocker", "personGender", i);
		fakedAssert(faker.personLastName(), "en_AU_ocker", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_AU_ocker", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_AU_ocker", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_AU_ocker", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_AU_ocker", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_AU_ocker", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_AU_ocker", "personName", i);
		fakedAssert(faker.personSex(), "en_AU_ocker", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_AU_ocker", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_AU_ocker", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_AU_ocker", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_AU_ocker", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_AU_ocker", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_AU_ocker", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_AU_ocker", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_AU_ocker", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_AU_ocker", "teamName", i);
		fakedAssert(faker.vehicle(), "en_AU_ocker", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_AU_ocker", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_AU_ocker", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_AU_ocker", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_AU_ocker", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_AU_ocker", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_AU_ocker", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_AU_ocker", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_AU_ocker", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_AU_ocker", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_AU_ocker", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_AU_ocker", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_AU_ocker", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_AU_ocker", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_bork;
    auto faker = new Faker_en_bork(10);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_BORK", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_BORK", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_BORK", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_BORK", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_BORK", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_BORK", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_BORK", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_BORK", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_BORK", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_BORK", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_BORK", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_BORK", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_BORK", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_BORK", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_BORK", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_BORK", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_BORK", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_BORK", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_BORK", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_BORK", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_BORK", "appAuthor", i);
		fakedAssert(faker.appName(), "en_BORK", "appName", i);
		fakedAssert(faker.appVersion(), "en_BORK", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_BORK", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_BORK", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_BORK", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_BORK", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_BORK", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_BORK", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_BORK", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_BORK", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_BORK", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_BORK", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_BORK", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_BORK", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_BORK", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_BORK", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_BORK", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_BORK", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_BORK", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_BORK", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_BORK", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_BORK", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_BORK", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_BORK", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_BORK", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_BORK", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_BORK", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_BORK", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_BORK", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_BORK", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_BORK", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_BORK", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_BORK", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_BORK", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_BORK", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_BORK", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_BORK", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_BORK", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_BORK", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_BORK", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_BORK", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_BORK", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_BORK", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_BORK", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_BORK", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_BORK", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_BORK", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_BORK", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_BORK", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_BORK", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_BORK", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_BORK", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_BORK", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_BORK", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_BORK", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_BORK", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_BORK", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_BORK", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_BORK", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_BORK", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_BORK", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_BORK", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_BORK", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_BORK", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_BORK", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_BORK", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_BORK", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_BORK", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_BORK", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_BORK", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_BORK", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_BORK", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_BORK", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_BORK", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_BORK", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_BORK", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_BORK", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_BORK", "loremText", i);
		fakedAssert(faker.loremWords(), "en_BORK", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_BORK", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_BORK", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_BORK", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_BORK", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_BORK", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_BORK", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_BORK", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_BORK", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_BORK", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_BORK", "personGender", i);
		fakedAssert(faker.personLastName(), "en_BORK", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_BORK", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_BORK", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_BORK", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_BORK", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_BORK", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_BORK", "personName", i);
		fakedAssert(faker.personSex(), "en_BORK", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_BORK", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_BORK", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_BORK", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_BORK", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_BORK", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_BORK", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_BORK", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_BORK", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_BORK", "teamName", i);
		fakedAssert(faker.vehicle(), "en_BORK", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_BORK", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_BORK", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_BORK", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_BORK", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_BORK", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_BORK", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_BORK", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_BORK", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_BORK", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_BORK", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_BORK", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_BORK", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_BORK", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ca;
    auto faker = new Faker_en_ca(11);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_CA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_CA", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_CA", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_CA", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_CA", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_CA", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_CA", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_CA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_CA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_CA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_CA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_CA", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_CA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_CA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_CA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_CA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_CA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_CA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_CA", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_CA", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_CA", "appAuthor", i);
		fakedAssert(faker.appName(), "en_CA", "appName", i);
		fakedAssert(faker.appVersion(), "en_CA", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_CA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_CA", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_CA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_CA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_CA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_CA", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_CA", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_CA", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_CA", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_CA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_CA", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_CA", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_CA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_CA", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_CA", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_CA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_CA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_CA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_CA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_CA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_CA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_CA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_CA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_CA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_CA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_CA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_CA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_CA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_CA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_CA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_CA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_CA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_CA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_CA", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_CA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_CA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_CA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_CA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_CA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_CA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_CA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_CA", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_CA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_CA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_CA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_CA", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_CA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_CA", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_CA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_CA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_CA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_CA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_CA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_CA", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_CA", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_CA", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_CA", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_CA", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_CA", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_CA", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_CA", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_CA", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_CA", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_CA", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_CA", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_CA", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_CA", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_CA", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_CA", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_CA", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_CA", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_CA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_CA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_CA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_CA", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_CA", "loremText", i);
		fakedAssert(faker.loremWords(), "en_CA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_CA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_CA", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_CA", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_CA", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_CA", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_CA", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_CA", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_CA", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_CA", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_CA", "personGender", i);
		fakedAssert(faker.personLastName(), "en_CA", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_CA", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_CA", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_CA", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_CA", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_CA", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_CA", "personName", i);
		fakedAssert(faker.personSex(), "en_CA", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_CA", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_CA", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_CA", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_CA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_CA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_CA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_CA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_CA", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_CA", "teamName", i);
		fakedAssert(faker.vehicle(), "en_CA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_CA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_CA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_CA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_CA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_CA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_CA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_CA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_CA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_CA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_CA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_CA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_CA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_CA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_gb;
    auto faker = new Faker_en_gb(12);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_GB", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_GB", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_GB", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_GB", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_GB", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_GB", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_GB", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_GB", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_GB", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_GB", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_GB", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_GB", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_GB", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_GB", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_GB", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_GB", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_GB", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_GB", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_GB", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_GB", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_GB", "appAuthor", i);
		fakedAssert(faker.appName(), "en_GB", "appName", i);
		fakedAssert(faker.appVersion(), "en_GB", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_GB", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_GB", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_GB", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_GB", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_GB", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_GB", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_GB", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_GB", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_GB", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_GB", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_GB", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_GB", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_GB", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_GB", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_GB", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_GB", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_GB", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_GB", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_GB", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_GB", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_GB", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_GB", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_GB", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_GB", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_GB", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_GB", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_GB", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_GB", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_GB", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_GB", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_GB", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_GB", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_GB", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_GB", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_GB", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_GB", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_GB", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_GB", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_GB", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_GB", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_GB", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_GB", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_GB", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_GB", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_GB", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_GB", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_GB", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_GB", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_GB", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_GB", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_GB", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_GB", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_GB", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_GB", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_GB", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_GB", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_GB", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_GB", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_GB", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_GB", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_GB", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_GB", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_GB", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_GB", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_GB", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_GB", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_GB", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_GB", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_GB", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_GB", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_GB", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_GB", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_GB", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_GB", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_GB", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_GB", "loremText", i);
		fakedAssert(faker.loremWords(), "en_GB", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_GB", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_GB", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_GB", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_GB", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_GB", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_GB", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_GB", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_GB", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_GB", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_GB", "personGender", i);
		fakedAssert(faker.personLastName(), "en_GB", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_GB", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_GB", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_GB", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_GB", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_GB", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_GB", "personName", i);
		fakedAssert(faker.personSex(), "en_GB", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_GB", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_GB", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_GB", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_GB", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_GB", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_GB", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_GB", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_GB", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_GB", "teamName", i);
		fakedAssert(faker.vehicle(), "en_GB", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_GB", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_GB", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_GB", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_GB", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_GB", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_GB", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_GB", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_GB", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_GB", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_GB", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_GB", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_GB", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_GB", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_gh;
    auto faker = new Faker_en_gh(13);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_GH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_GH", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_GH", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_GH", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_GH", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_GH", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_GH", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_GH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_GH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_GH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_GH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_GH", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_GH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_GH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_GH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_GH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_GH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_GH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_GH", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_GH", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_GH", "appAuthor", i);
		fakedAssert(faker.appName(), "en_GH", "appName", i);
		fakedAssert(faker.appVersion(), "en_GH", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_GH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_GH", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_GH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_GH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_GH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_GH", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_GH", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_GH", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_GH", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_GH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_GH", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_GH", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_GH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_GH", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_GH", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_GH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_GH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_GH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_GH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_GH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_GH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_GH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_GH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_GH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_GH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_GH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_GH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_GH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_GH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_GH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_GH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_GH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_GH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_GH", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_GH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_GH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_GH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_GH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_GH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_GH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_GH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_GH", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_GH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_GH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_GH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_GH", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_GH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_GH", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_GH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_GH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_GH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_GH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_GH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_GH", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_GH", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_GH", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_GH", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_GH", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_GH", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_GH", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_GH", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_GH", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_GH", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_GH", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_GH", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_GH", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_GH", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_GH", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_GH", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_GH", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_GH", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_GH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_GH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_GH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_GH", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_GH", "loremText", i);
		fakedAssert(faker.loremWords(), "en_GH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_GH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_GH", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_GH", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_GH", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_GH", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_GH", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_GH", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_GH", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_GH", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_GH", "personGender", i);
		fakedAssert(faker.personLastName(), "en_GH", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_GH", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_GH", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_GH", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_GH", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_GH", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_GH", "personName", i);
		fakedAssert(faker.personSex(), "en_GH", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_GH", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_GH", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_GH", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_GH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_GH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_GH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_GH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_GH", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_GH", "teamName", i);
		fakedAssert(faker.vehicle(), "en_GH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_GH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_GH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_GH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_GH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_GH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_GH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_GH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_GH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_GH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_GH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_GH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_GH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_GH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ie;
    auto faker = new Faker_en_ie(14);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_IE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_IE", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_IE", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_IE", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_IE", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_IE", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_IE", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_IE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_IE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_IE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_IE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_IE", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_IE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_IE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_IE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_IE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_IE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_IE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_IE", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_IE", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_IE", "appAuthor", i);
		fakedAssert(faker.appName(), "en_IE", "appName", i);
		fakedAssert(faker.appVersion(), "en_IE", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_IE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_IE", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_IE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_IE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_IE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_IE", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_IE", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_IE", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_IE", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_IE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_IE", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_IE", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_IE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_IE", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_IE", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_IE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_IE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_IE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_IE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_IE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_IE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_IE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_IE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_IE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_IE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_IE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_IE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_IE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_IE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_IE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_IE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_IE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_IE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_IE", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_IE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_IE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_IE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_IE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_IE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_IE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_IE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_IE", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_IE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_IE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_IE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_IE", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_IE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_IE", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_IE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_IE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_IE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_IE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_IE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_IE", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_IE", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_IE", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_IE", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_IE", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_IE", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_IE", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_IE", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_IE", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_IE", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_IE", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_IE", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_IE", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_IE", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_IE", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_IE", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_IE", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_IE", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_IE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_IE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_IE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_IE", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_IE", "loremText", i);
		fakedAssert(faker.loremWords(), "en_IE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_IE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_IE", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_IE", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_IE", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_IE", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_IE", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_IE", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_IE", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_IE", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_IE", "personGender", i);
		fakedAssert(faker.personLastName(), "en_IE", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_IE", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_IE", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_IE", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_IE", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_IE", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_IE", "personName", i);
		fakedAssert(faker.personSex(), "en_IE", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_IE", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_IE", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_IE", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_IE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_IE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_IE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_IE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_IE", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_IE", "teamName", i);
		fakedAssert(faker.vehicle(), "en_IE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_IE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_IE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_IE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_IE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_IE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_IE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_IE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_IE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_IE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_IE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_IE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_IE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_IE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ng;
    auto faker = new Faker_en_ng(15);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_NG", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_NG", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_NG", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_NG", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_NG", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_NG", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_NG", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_NG", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_NG", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_NG", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_NG", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_NG", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_NG", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_NG", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_NG", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_NG", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_NG", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_NG", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_NG", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_NG", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_NG", "appAuthor", i);
		fakedAssert(faker.appName(), "en_NG", "appName", i);
		fakedAssert(faker.appVersion(), "en_NG", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_NG", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_NG", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_NG", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_NG", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_NG", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_NG", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_NG", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_NG", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_NG", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_NG", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_NG", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_NG", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_NG", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_NG", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_NG", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_NG", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_NG", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_NG", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_NG", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_NG", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_NG", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_NG", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_NG", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_NG", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_NG", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_NG", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_NG", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_NG", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_NG", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_NG", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_NG", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_NG", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_NG", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_NG", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_NG", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_NG", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_NG", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_NG", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_NG", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_NG", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_NG", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_NG", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_NG", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_NG", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_NG", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_NG", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_NG", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_NG", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_NG", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_NG", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_NG", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_NG", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_NG", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_NG", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_NG", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_NG", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_NG", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_NG", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_NG", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_NG", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_NG", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_NG", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_NG", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_NG", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_NG", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_NG", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_NG", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_NG", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_NG", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_NG", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_NG", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_NG", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_NG", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_NG", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_NG", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_NG", "loremText", i);
		fakedAssert(faker.loremWords(), "en_NG", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_NG", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_NG", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_NG", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_NG", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_NG", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_NG", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_NG", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_NG", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_NG", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_NG", "personGender", i);
		fakedAssert(faker.personLastName(), "en_NG", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_NG", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_NG", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_NG", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_NG", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_NG", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_NG", "personName", i);
		fakedAssert(faker.personSex(), "en_NG", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_NG", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_NG", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_NG", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_NG", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_NG", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_NG", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_NG", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_NG", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_NG", "teamName", i);
		fakedAssert(faker.vehicle(), "en_NG", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_NG", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_NG", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_NG", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_NG", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_NG", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_NG", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_NG", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_NG", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_NG", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_NG", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_NG", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_NG", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_NG", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_us;
    auto faker = new Faker_en_us(16);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_US", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_US", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_US", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_US", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_US", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_US", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_US", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_US", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_US", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_US", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_US", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_US", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_US", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_US", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_US", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_US", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_US", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_US", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_US", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_US", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_US", "appAuthor", i);
		fakedAssert(faker.appName(), "en_US", "appName", i);
		fakedAssert(faker.appVersion(), "en_US", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_US", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_US", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_US", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_US", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_US", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_US", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_US", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_US", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_US", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_US", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_US", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_US", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_US", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_US", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_US", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_US", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_US", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_US", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_US", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_US", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_US", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_US", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_US", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_US", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_US", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_US", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_US", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_US", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_US", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_US", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_US", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_US", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_US", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_US", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_US", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_US", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_US", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_US", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_US", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_US", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_US", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_US", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_US", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_US", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_US", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_US", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_US", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_US", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_US", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_US", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_US", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_US", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_US", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_US", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_US", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_US", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_US", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_US", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_US", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_US", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_US", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_US", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_US", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_US", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_US", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_US", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_US", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_US", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_US", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_US", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_US", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_US", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_US", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_US", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_US", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_US", "loremText", i);
		fakedAssert(faker.loremWords(), "en_US", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_US", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_US", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_US", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_US", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_US", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_US", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_US", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_US", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_US", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_US", "personGender", i);
		fakedAssert(faker.personLastName(), "en_US", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_US", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_US", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_US", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_US", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_US", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_US", "personName", i);
		fakedAssert(faker.personSex(), "en_US", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_US", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_US", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_US", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_US", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_US", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_US", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_US", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_US", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_US", "teamName", i);
		fakedAssert(faker.vehicle(), "en_US", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_US", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_US", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_US", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_US", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_US", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_US", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_US", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_US", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_US", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_US", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_US", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_US", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_US", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_za;
    auto faker = new Faker_en_za(17);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_ZA", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en_ZA", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en_ZA", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en_ZA", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "en_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "en_ZA", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_ZA", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_ZA", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en_ZA", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en_ZA", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en_ZA", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en_ZA", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_ZA", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en_ZA", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_ZA", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en_ZA", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en_ZA", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en_ZA", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en_ZA", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en_ZA", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en_ZA", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en_ZA", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en_ZA", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en_ZA", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en_ZA", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en_ZA", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en_ZA", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en_ZA", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en_ZA", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en_ZA", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en_ZA", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en_ZA", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_ZA", "loremSentances", i);
		fakedAssert(faker.loremText(), "en_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "en_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_ZA", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en_ZA", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en_ZA", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en_ZA", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en_ZA", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en_ZA", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en_ZA", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en_ZA", "personFirstName", i);
		fakedAssert(faker.personGender(), "en_ZA", "personGender", i);
		fakedAssert(faker.personLastName(), "en_ZA", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en_ZA", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en_ZA", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en_ZA", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en_ZA", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en_ZA", "personMiddleName", i);
		fakedAssert(faker.personName(), "en_ZA", "personName", i);
		fakedAssert(faker.personSex(), "en_ZA", "personSex", i);
		fakedAssert(faker.personSuffix(), "en_ZA", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en_ZA", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en_ZA", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "en_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_es;
    auto faker = new Faker_es(18);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "es", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "es", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "es", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "es", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "es", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "es", "animalBear", i);
		fakedAssert(faker.animalBird(), "es", "animalBird", i);
		fakedAssert(faker.animalCat(), "es", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "es", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "es", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "es", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "es", "animalDog", i);
		fakedAssert(faker.animalFish(), "es", "animalFish", i);
		fakedAssert(faker.animalHorse(), "es", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "es", "animalInsect", i);
		fakedAssert(faker.animalLion(), "es", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "es", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "es", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "es", "animalSnake", i);
		fakedAssert(faker.animalType(), "es", "animalType", i);
		fakedAssert(faker.appAuthor(), "es", "appAuthor", i);
		fakedAssert(faker.appName(), "es", "appName", i);
		fakedAssert(faker.appVersion(), "es", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "es", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "es", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "es", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "es", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "es", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "es", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "es", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "es", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "es", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "es", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "es", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "es", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "es", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "es", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "es", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "es", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "es", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "es", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "es", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "es", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "es", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "es", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "es", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "es", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "es", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "es", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "es", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "es", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "es", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "es", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "es", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "es", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "es", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "es", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "es", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "es", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "es", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "es", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "es", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "es", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "es", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "es", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "es", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "es", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "es", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "es", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "es", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "es", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "es", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "es", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "es", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "es", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "es", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "es", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "es", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "es", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "es", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "es", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "es", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "es", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "es", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "es", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "es", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "es", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "es", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "es", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "es", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "es", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "es", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "es", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "es", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "es", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "es", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "es", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "es", "loremSentances", i);
		fakedAssert(faker.loremText(), "es", "loremText", i);
		fakedAssert(faker.loremWords(), "es", "loremWords", i);
		fakedAssert(faker.musicGenre(), "es", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "es", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "es", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "es", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "es", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "es", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "es", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "es", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "es", "personFirstName", i);
		fakedAssert(faker.personGender(), "es", "personGender", i);
		fakedAssert(faker.personLastName(), "es", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "es", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "es", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "es", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "es", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "es", "personMiddleName", i);
		fakedAssert(faker.personName(), "es", "personName", i);
		fakedAssert(faker.personSex(), "es", "personSex", i);
		fakedAssert(faker.personSuffix(), "es", "personSuffix", i);
		fakedAssert(faker.personTitle(), "es", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "es", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "es", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "es", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "es", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "es", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "es", "teamCreature", i);
		fakedAssert(faker.teamName(), "es", "teamName", i);
		fakedAssert(faker.vehicle(), "es", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "es", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "es", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "es", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "es", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "es", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "es", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "es", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "es", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "es", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "es", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "es", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "es", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "es", "wordVerb", i);

	}
}

unittest {
	import faked.faker_es_mx;
    auto faker = new Faker_es_mx(19);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "es_MX", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "es_MX", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "es_MX", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "es_MX", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "es_MX", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "es_MX", "animalBear", i);
		fakedAssert(faker.animalBird(), "es_MX", "animalBird", i);
		fakedAssert(faker.animalCat(), "es_MX", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "es_MX", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "es_MX", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "es_MX", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "es_MX", "animalDog", i);
		fakedAssert(faker.animalFish(), "es_MX", "animalFish", i);
		fakedAssert(faker.animalHorse(), "es_MX", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "es_MX", "animalInsect", i);
		fakedAssert(faker.animalLion(), "es_MX", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "es_MX", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "es_MX", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "es_MX", "animalSnake", i);
		fakedAssert(faker.animalType(), "es_MX", "animalType", i);
		fakedAssert(faker.appAuthor(), "es_MX", "appAuthor", i);
		fakedAssert(faker.appName(), "es_MX", "appName", i);
		fakedAssert(faker.appVersion(), "es_MX", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "es_MX", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "es_MX", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "es_MX", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "es_MX", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "es_MX", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "es_MX", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "es_MX", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "es_MX", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "es_MX", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "es_MX", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "es_MX", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "es_MX", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "es_MX", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "es_MX", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "es_MX", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "es_MX", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "es_MX", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "es_MX", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "es_MX", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "es_MX", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "es_MX", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "es_MX", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "es_MX", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "es_MX", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "es_MX", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "es_MX", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "es_MX", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "es_MX", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "es_MX", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "es_MX", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "es_MX", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "es_MX", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "es_MX", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "es_MX", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "es_MX", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "es_MX", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "es_MX", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "es_MX", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "es_MX", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "es_MX", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "es_MX", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "es_MX", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "es_MX", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "es_MX", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "es_MX", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "es_MX", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "es_MX", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "es_MX", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "es_MX", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "es_MX", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "es_MX", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "es_MX", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "es_MX", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "es_MX", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "es_MX", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "es_MX", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "es_MX", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "es_MX", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "es_MX", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "es_MX", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "es_MX", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "es_MX", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "es_MX", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "es_MX", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "es_MX", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "es_MX", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "es_MX", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "es_MX", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "es_MX", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "es_MX", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "es_MX", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "es_MX", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "es_MX", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "es_MX", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "es_MX", "loremSentances", i);
		fakedAssert(faker.loremText(), "es_MX", "loremText", i);
		fakedAssert(faker.loremWords(), "es_MX", "loremWords", i);
		fakedAssert(faker.musicGenre(), "es_MX", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "es_MX", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "es_MX", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "es_MX", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "es_MX", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "es_MX", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "es_MX", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "es_MX", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "es_MX", "personFirstName", i);
		fakedAssert(faker.personGender(), "es_MX", "personGender", i);
		fakedAssert(faker.personLastName(), "es_MX", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "es_MX", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "es_MX", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "es_MX", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "es_MX", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "es_MX", "personMiddleName", i);
		fakedAssert(faker.personName(), "es_MX", "personName", i);
		fakedAssert(faker.personSex(), "es_MX", "personSex", i);
		fakedAssert(faker.personSuffix(), "es_MX", "personSuffix", i);
		fakedAssert(faker.personTitle(), "es_MX", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "es_MX", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "es_MX", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "es_MX", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "es_MX", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "es_MX", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "es_MX", "teamCreature", i);
		fakedAssert(faker.teamName(), "es_MX", "teamName", i);
		fakedAssert(faker.vehicle(), "es_MX", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "es_MX", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "es_MX", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "es_MX", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "es_MX", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "es_MX", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "es_MX", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "es_MX", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "es_MX", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "es_MX", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "es_MX", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "es_MX", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "es_MX", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "es_MX", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fa;
    auto faker = new Faker_fa(20);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fa", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fa", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fa", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fa", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fa", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fa", "animalBear", i);
		fakedAssert(faker.animalBird(), "fa", "animalBird", i);
		fakedAssert(faker.animalCat(), "fa", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fa", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fa", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fa", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fa", "animalDog", i);
		fakedAssert(faker.animalFish(), "fa", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fa", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fa", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fa", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fa", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fa", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fa", "animalSnake", i);
		fakedAssert(faker.animalType(), "fa", "animalType", i);
		fakedAssert(faker.appAuthor(), "fa", "appAuthor", i);
		fakedAssert(faker.appName(), "fa", "appName", i);
		fakedAssert(faker.appVersion(), "fa", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fa", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fa", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fa", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fa", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fa", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fa", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fa", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fa", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fa", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fa", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fa", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fa", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fa", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fa", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fa", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fa", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fa", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fa", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fa", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fa", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fa", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fa", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fa", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fa", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fa", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fa", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fa", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fa", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fa", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fa", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fa", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fa", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fa", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fa", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fa", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fa", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fa", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fa", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fa", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fa", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fa", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fa", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fa", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fa", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fa", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fa", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fa", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fa", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fa", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fa", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fa", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fa", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fa", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fa", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fa", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fa", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fa", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fa", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fa", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fa", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fa", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fa", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fa", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fa", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fa", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fa", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fa", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fa", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fa", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fa", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fa", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fa", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fa", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fa", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fa", "loremSentances", i);
		fakedAssert(faker.loremText(), "fa", "loremText", i);
		fakedAssert(faker.loremWords(), "fa", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fa", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fa", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fa", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fa", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fa", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fa", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fa", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fa", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fa", "personFirstName", i);
		fakedAssert(faker.personGender(), "fa", "personGender", i);
		fakedAssert(faker.personLastName(), "fa", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fa", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fa", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fa", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fa", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fa", "personMiddleName", i);
		fakedAssert(faker.personName(), "fa", "personName", i);
		fakedAssert(faker.personSex(), "fa", "personSex", i);
		fakedAssert(faker.personSuffix(), "fa", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fa", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fa", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fa", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fa", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fa", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fa", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fa", "teamCreature", i);
		fakedAssert(faker.teamName(), "fa", "teamName", i);
		fakedAssert(faker.vehicle(), "fa", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fa", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fa", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fa", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fa", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fa", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fa", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fa", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fa", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fa", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fa", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fa", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fa", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fa", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fi;
    auto faker = new Faker_fi(21);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fi", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fi", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fi", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fi", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fi", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fi", "animalBear", i);
		fakedAssert(faker.animalBird(), "fi", "animalBird", i);
		fakedAssert(faker.animalCat(), "fi", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fi", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fi", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fi", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fi", "animalDog", i);
		fakedAssert(faker.animalFish(), "fi", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fi", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fi", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fi", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fi", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fi", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fi", "animalSnake", i);
		fakedAssert(faker.animalType(), "fi", "animalType", i);
		fakedAssert(faker.appAuthor(), "fi", "appAuthor", i);
		fakedAssert(faker.appName(), "fi", "appName", i);
		fakedAssert(faker.appVersion(), "fi", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fi", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fi", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fi", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fi", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fi", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fi", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fi", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fi", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fi", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fi", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fi", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fi", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fi", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fi", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fi", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fi", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fi", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fi", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fi", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fi", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fi", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fi", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fi", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fi", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fi", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fi", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fi", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fi", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fi", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fi", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fi", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fi", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fi", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fi", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fi", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fi", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fi", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fi", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fi", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fi", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fi", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fi", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fi", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fi", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fi", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fi", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fi", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fi", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fi", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fi", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fi", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fi", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fi", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fi", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fi", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fi", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fi", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fi", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fi", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fi", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fi", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fi", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fi", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fi", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fi", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fi", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fi", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fi", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fi", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fi", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fi", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fi", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fi", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fi", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fi", "loremSentances", i);
		fakedAssert(faker.loremText(), "fi", "loremText", i);
		fakedAssert(faker.loremWords(), "fi", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fi", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fi", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fi", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fi", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fi", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fi", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fi", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fi", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fi", "personFirstName", i);
		fakedAssert(faker.personGender(), "fi", "personGender", i);
		fakedAssert(faker.personLastName(), "fi", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fi", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fi", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fi", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fi", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fi", "personMiddleName", i);
		fakedAssert(faker.personName(), "fi", "personName", i);
		fakedAssert(faker.personSex(), "fi", "personSex", i);
		fakedAssert(faker.personSuffix(), "fi", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fi", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fi", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fi", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fi", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fi", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fi", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fi", "teamCreature", i);
		fakedAssert(faker.teamName(), "fi", "teamName", i);
		fakedAssert(faker.vehicle(), "fi", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fi", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fi", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fi", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fi", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fi", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fi", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fi", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fi", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fi", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fi", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fi", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fi", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fi", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr;
    auto faker = new Faker_fr(22);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fr", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fr", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fr", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fr", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr", "appAuthor", i);
		fakedAssert(faker.appName(), "fr", "appName", i);
		fakedAssert(faker.appVersion(), "fr", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fr", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fr", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fr", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fr", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fr", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fr", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fr", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fr", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fr", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fr", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fr", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fr", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fr", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fr", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fr", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fr", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fr", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fr", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fr", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fr", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fr", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fr", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr", "loremSentances", i);
		fakedAssert(faker.loremText(), "fr", "loremText", i);
		fakedAssert(faker.loremWords(), "fr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fr", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fr", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fr", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fr", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fr", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fr", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fr", "personFirstName", i);
		fakedAssert(faker.personGender(), "fr", "personGender", i);
		fakedAssert(faker.personLastName(), "fr", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fr", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fr", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fr", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fr", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fr", "personMiddleName", i);
		fakedAssert(faker.personName(), "fr", "personName", i);
		fakedAssert(faker.personSex(), "fr", "personSex", i);
		fakedAssert(faker.personSuffix(), "fr", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fr", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fr", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr", "teamName", i);
		fakedAssert(faker.vehicle(), "fr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_be;
    auto faker = new Faker_fr_be(23);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fr_BE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_BE", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fr_BE", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fr_BE", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fr_BE", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fr_BE", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_BE", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_BE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_BE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_BE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_BE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_BE", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_BE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_BE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_BE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_BE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_BE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_BE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_BE", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_BE", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_BE", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_BE", "appName", i);
		fakedAssert(faker.appVersion(), "fr_BE", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_BE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_BE", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fr_BE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_BE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_BE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_BE", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fr_BE", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fr_BE", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fr_BE", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_BE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_BE", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fr_BE", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fr_BE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_BE", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fr_BE", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fr_BE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_BE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_BE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_BE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_BE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_BE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_BE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_BE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_BE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_BE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_BE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_BE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_BE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_BE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_BE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_BE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_BE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_BE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_BE", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fr_BE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_BE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_BE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_BE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_BE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_BE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_BE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_BE", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fr_BE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_BE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_BE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_BE", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fr_BE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_BE", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fr_BE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_BE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_BE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_BE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_BE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_BE", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fr_BE", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fr_BE", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fr_BE", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fr_BE", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fr_BE", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fr_BE", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fr_BE", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fr_BE", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fr_BE", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fr_BE", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fr_BE", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fr_BE", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fr_BE", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fr_BE", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fr_BE", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fr_BE", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fr_BE", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fr_BE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_BE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_BE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_BE", "loremSentances", i);
		fakedAssert(faker.loremText(), "fr_BE", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_BE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_BE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_BE", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fr_BE", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fr_BE", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fr_BE", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fr_BE", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fr_BE", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fr_BE", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fr_BE", "personFirstName", i);
		fakedAssert(faker.personGender(), "fr_BE", "personGender", i);
		fakedAssert(faker.personLastName(), "fr_BE", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fr_BE", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fr_BE", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fr_BE", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fr_BE", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fr_BE", "personMiddleName", i);
		fakedAssert(faker.personName(), "fr_BE", "personName", i);
		fakedAssert(faker.personSex(), "fr_BE", "personSex", i);
		fakedAssert(faker.personSuffix(), "fr_BE", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fr_BE", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fr_BE", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fr_BE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_BE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_BE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_BE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_BE", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_BE", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_BE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_BE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_BE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_BE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_BE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_BE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_BE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_BE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_BE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_BE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_BE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_BE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_BE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_BE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_ca;
    auto faker = new Faker_fr_ca(24);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fr_CA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_CA", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fr_CA", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fr_CA", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fr_CA", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fr_CA", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_CA", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_CA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_CA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_CA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_CA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_CA", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_CA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_CA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_CA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_CA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_CA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_CA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_CA", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_CA", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_CA", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_CA", "appName", i);
		fakedAssert(faker.appVersion(), "fr_CA", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_CA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_CA", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fr_CA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_CA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_CA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_CA", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fr_CA", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fr_CA", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fr_CA", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_CA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_CA", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fr_CA", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fr_CA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_CA", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fr_CA", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fr_CA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_CA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_CA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_CA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_CA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_CA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_CA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_CA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_CA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_CA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_CA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_CA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_CA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_CA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_CA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_CA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_CA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_CA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_CA", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fr_CA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_CA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_CA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_CA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_CA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_CA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_CA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_CA", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fr_CA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_CA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_CA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_CA", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fr_CA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_CA", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fr_CA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_CA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_CA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_CA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_CA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_CA", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fr_CA", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fr_CA", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fr_CA", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fr_CA", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fr_CA", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fr_CA", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fr_CA", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fr_CA", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fr_CA", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fr_CA", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fr_CA", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fr_CA", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fr_CA", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fr_CA", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fr_CA", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fr_CA", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fr_CA", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fr_CA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_CA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_CA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_CA", "loremSentances", i);
		fakedAssert(faker.loremText(), "fr_CA", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_CA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_CA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_CA", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fr_CA", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fr_CA", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fr_CA", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fr_CA", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fr_CA", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fr_CA", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fr_CA", "personFirstName", i);
		fakedAssert(faker.personGender(), "fr_CA", "personGender", i);
		fakedAssert(faker.personLastName(), "fr_CA", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fr_CA", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fr_CA", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fr_CA", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fr_CA", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fr_CA", "personMiddleName", i);
		fakedAssert(faker.personName(), "fr_CA", "personName", i);
		fakedAssert(faker.personSex(), "fr_CA", "personSex", i);
		fakedAssert(faker.personSuffix(), "fr_CA", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fr_CA", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fr_CA", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fr_CA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_CA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_CA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_CA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_CA", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_CA", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_CA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_CA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_CA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_CA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_CA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_CA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_CA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_CA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_CA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_CA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_CA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_CA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_CA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_CA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_ch;
    auto faker = new Faker_fr_ch(25);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "fr_CH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_CH", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "fr_CH", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "fr_CH", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "fr_CH", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "fr_CH", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_CH", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_CH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_CH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_CH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_CH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_CH", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_CH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_CH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_CH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_CH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_CH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_CH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_CH", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_CH", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_CH", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_CH", "appName", i);
		fakedAssert(faker.appVersion(), "fr_CH", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_CH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_CH", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "fr_CH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_CH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_CH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_CH", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "fr_CH", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "fr_CH", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "fr_CH", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_CH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_CH", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "fr_CH", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "fr_CH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_CH", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "fr_CH", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "fr_CH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_CH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_CH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_CH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_CH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_CH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_CH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_CH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_CH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_CH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_CH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_CH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_CH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_CH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_CH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_CH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_CH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_CH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_CH", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "fr_CH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_CH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_CH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_CH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_CH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_CH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_CH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_CH", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "fr_CH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_CH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_CH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_CH", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "fr_CH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_CH", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "fr_CH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_CH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_CH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_CH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_CH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_CH", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "fr_CH", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "fr_CH", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "fr_CH", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "fr_CH", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "fr_CH", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "fr_CH", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "fr_CH", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "fr_CH", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "fr_CH", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "fr_CH", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "fr_CH", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "fr_CH", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "fr_CH", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "fr_CH", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "fr_CH", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "fr_CH", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "fr_CH", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "fr_CH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_CH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_CH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_CH", "loremSentances", i);
		fakedAssert(faker.loremText(), "fr_CH", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_CH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_CH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_CH", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "fr_CH", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "fr_CH", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "fr_CH", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "fr_CH", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "fr_CH", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "fr_CH", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "fr_CH", "personFirstName", i);
		fakedAssert(faker.personGender(), "fr_CH", "personGender", i);
		fakedAssert(faker.personLastName(), "fr_CH", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "fr_CH", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "fr_CH", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "fr_CH", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "fr_CH", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "fr_CH", "personMiddleName", i);
		fakedAssert(faker.personName(), "fr_CH", "personName", i);
		fakedAssert(faker.personSex(), "fr_CH", "personSex", i);
		fakedAssert(faker.personSuffix(), "fr_CH", "personSuffix", i);
		fakedAssert(faker.personTitle(), "fr_CH", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "fr_CH", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "fr_CH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_CH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_CH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_CH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_CH", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_CH", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_CH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_CH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_CH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_CH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_CH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_CH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_CH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_CH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_CH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_CH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_CH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_CH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_CH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_CH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_he;
    auto faker = new Faker_he(26);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "he", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "he", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "he", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "he", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "he", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "he", "animalBear", i);
		fakedAssert(faker.animalBird(), "he", "animalBird", i);
		fakedAssert(faker.animalCat(), "he", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "he", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "he", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "he", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "he", "animalDog", i);
		fakedAssert(faker.animalFish(), "he", "animalFish", i);
		fakedAssert(faker.animalHorse(), "he", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "he", "animalInsect", i);
		fakedAssert(faker.animalLion(), "he", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "he", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "he", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "he", "animalSnake", i);
		fakedAssert(faker.animalType(), "he", "animalType", i);
		fakedAssert(faker.appAuthor(), "he", "appAuthor", i);
		fakedAssert(faker.appName(), "he", "appName", i);
		fakedAssert(faker.appVersion(), "he", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "he", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "he", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "he", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "he", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "he", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "he", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "he", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "he", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "he", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "he", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "he", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "he", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "he", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "he", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "he", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "he", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "he", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "he", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "he", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "he", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "he", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "he", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "he", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "he", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "he", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "he", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "he", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "he", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "he", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "he", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "he", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "he", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "he", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "he", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "he", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "he", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "he", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "he", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "he", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "he", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "he", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "he", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "he", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "he", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "he", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "he", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "he", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "he", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "he", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "he", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "he", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "he", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "he", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "he", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "he", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "he", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "he", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "he", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "he", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "he", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "he", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "he", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "he", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "he", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "he", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "he", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "he", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "he", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "he", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "he", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "he", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "he", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "he", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "he", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "he", "loremSentances", i);
		fakedAssert(faker.loremText(), "he", "loremText", i);
		fakedAssert(faker.loremWords(), "he", "loremWords", i);
		fakedAssert(faker.musicGenre(), "he", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "he", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "he", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "he", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "he", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "he", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "he", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "he", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "he", "personFirstName", i);
		fakedAssert(faker.personGender(), "he", "personGender", i);
		fakedAssert(faker.personLastName(), "he", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "he", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "he", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "he", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "he", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "he", "personMiddleName", i);
		fakedAssert(faker.personName(), "he", "personName", i);
		fakedAssert(faker.personSex(), "he", "personSex", i);
		fakedAssert(faker.personSuffix(), "he", "personSuffix", i);
		fakedAssert(faker.personTitle(), "he", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "he", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "he", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "he", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "he", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "he", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "he", "teamCreature", i);
		fakedAssert(faker.teamName(), "he", "teamName", i);
		fakedAssert(faker.vehicle(), "he", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "he", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "he", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "he", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "he", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "he", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "he", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "he", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "he", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "he", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "he", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "he", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "he", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "he", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hr;
    auto faker = new Faker_hr(27);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "hr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hr", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "hr", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "hr", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "hr", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "hr", "animalBear", i);
		fakedAssert(faker.animalBird(), "hr", "animalBird", i);
		fakedAssert(faker.animalCat(), "hr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hr", "animalDog", i);
		fakedAssert(faker.animalFish(), "hr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hr", "animalSnake", i);
		fakedAssert(faker.animalType(), "hr", "animalType", i);
		fakedAssert(faker.appAuthor(), "hr", "appAuthor", i);
		fakedAssert(faker.appName(), "hr", "appName", i);
		fakedAssert(faker.appVersion(), "hr", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "hr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hr", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "hr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hr", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "hr", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "hr", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "hr", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hr", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "hr", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "hr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hr", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "hr", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "hr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "hr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "hr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hr", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "hr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hr", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "hr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hr", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "hr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hr", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "hr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hr", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "hr", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "hr", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "hr", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "hr", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "hr", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "hr", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "hr", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "hr", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "hr", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "hr", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "hr", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "hr", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "hr", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "hr", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "hr", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "hr", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "hr", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "hr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hr", "loremSentances", i);
		fakedAssert(faker.loremText(), "hr", "loremText", i);
		fakedAssert(faker.loremWords(), "hr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hr", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "hr", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "hr", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "hr", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "hr", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "hr", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "hr", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "hr", "personFirstName", i);
		fakedAssert(faker.personGender(), "hr", "personGender", i);
		fakedAssert(faker.personLastName(), "hr", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "hr", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "hr", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "hr", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "hr", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "hr", "personMiddleName", i);
		fakedAssert(faker.personName(), "hr", "personName", i);
		fakedAssert(faker.personSex(), "hr", "personSex", i);
		fakedAssert(faker.personSuffix(), "hr", "personSuffix", i);
		fakedAssert(faker.personTitle(), "hr", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "hr", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "hr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hr", "teamCreature", i);
		fakedAssert(faker.teamName(), "hr", "teamName", i);
		fakedAssert(faker.vehicle(), "hr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hu;
    auto faker = new Faker_hu(28);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "hu", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hu", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "hu", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "hu", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "hu", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "hu", "animalBear", i);
		fakedAssert(faker.animalBird(), "hu", "animalBird", i);
		fakedAssert(faker.animalCat(), "hu", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hu", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hu", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hu", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hu", "animalDog", i);
		fakedAssert(faker.animalFish(), "hu", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hu", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hu", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hu", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hu", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hu", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hu", "animalSnake", i);
		fakedAssert(faker.animalType(), "hu", "animalType", i);
		fakedAssert(faker.appAuthor(), "hu", "appAuthor", i);
		fakedAssert(faker.appName(), "hu", "appName", i);
		fakedAssert(faker.appVersion(), "hu", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "hu", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hu", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "hu", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hu", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hu", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hu", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "hu", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "hu", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "hu", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hu", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hu", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "hu", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "hu", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hu", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "hu", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "hu", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hu", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hu", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hu", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hu", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hu", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hu", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hu", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hu", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hu", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hu", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "hu", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hu", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "hu", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hu", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hu", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hu", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hu", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hu", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "hu", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hu", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hu", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hu", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hu", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hu", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hu", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hu", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "hu", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hu", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hu", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hu", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "hu", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hu", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "hu", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hu", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hu", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hu", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hu", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hu", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "hu", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "hu", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "hu", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "hu", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "hu", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "hu", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "hu", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "hu", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "hu", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "hu", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "hu", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "hu", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "hu", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "hu", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "hu", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "hu", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "hu", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "hu", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hu", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hu", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hu", "loremSentances", i);
		fakedAssert(faker.loremText(), "hu", "loremText", i);
		fakedAssert(faker.loremWords(), "hu", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hu", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hu", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "hu", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "hu", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "hu", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "hu", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "hu", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "hu", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "hu", "personFirstName", i);
		fakedAssert(faker.personGender(), "hu", "personGender", i);
		fakedAssert(faker.personLastName(), "hu", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "hu", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "hu", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "hu", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "hu", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "hu", "personMiddleName", i);
		fakedAssert(faker.personName(), "hu", "personName", i);
		fakedAssert(faker.personSex(), "hu", "personSex", i);
		fakedAssert(faker.personSuffix(), "hu", "personSuffix", i);
		fakedAssert(faker.personTitle(), "hu", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "hu", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "hu", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hu", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hu", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hu", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hu", "teamCreature", i);
		fakedAssert(faker.teamName(), "hu", "teamName", i);
		fakedAssert(faker.vehicle(), "hu", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hu", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hu", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hu", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hu", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hu", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hu", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hu", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hu", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hu", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hu", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hu", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hu", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hu", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hy;
    auto faker = new Faker_hy(29);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "hy", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hy", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "hy", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "hy", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "hy", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "hy", "animalBear", i);
		fakedAssert(faker.animalBird(), "hy", "animalBird", i);
		fakedAssert(faker.animalCat(), "hy", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hy", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hy", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hy", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hy", "animalDog", i);
		fakedAssert(faker.animalFish(), "hy", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hy", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hy", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hy", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hy", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hy", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hy", "animalSnake", i);
		fakedAssert(faker.animalType(), "hy", "animalType", i);
		fakedAssert(faker.appAuthor(), "hy", "appAuthor", i);
		fakedAssert(faker.appName(), "hy", "appName", i);
		fakedAssert(faker.appVersion(), "hy", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "hy", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hy", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "hy", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hy", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hy", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hy", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "hy", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "hy", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "hy", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hy", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hy", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "hy", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "hy", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hy", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "hy", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "hy", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hy", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hy", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hy", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hy", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hy", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hy", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hy", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hy", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hy", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hy", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "hy", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hy", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "hy", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hy", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hy", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hy", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hy", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hy", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "hy", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hy", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hy", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hy", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hy", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hy", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hy", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hy", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "hy", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hy", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hy", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hy", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "hy", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hy", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "hy", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hy", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hy", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hy", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hy", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hy", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "hy", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "hy", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "hy", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "hy", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "hy", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "hy", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "hy", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "hy", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "hy", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "hy", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "hy", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "hy", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "hy", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "hy", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "hy", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "hy", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "hy", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "hy", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hy", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hy", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hy", "loremSentances", i);
		fakedAssert(faker.loremText(), "hy", "loremText", i);
		fakedAssert(faker.loremWords(), "hy", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hy", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hy", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "hy", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "hy", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "hy", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "hy", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "hy", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "hy", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "hy", "personFirstName", i);
		fakedAssert(faker.personGender(), "hy", "personGender", i);
		fakedAssert(faker.personLastName(), "hy", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "hy", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "hy", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "hy", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "hy", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "hy", "personMiddleName", i);
		fakedAssert(faker.personName(), "hy", "personName", i);
		fakedAssert(faker.personSex(), "hy", "personSex", i);
		fakedAssert(faker.personSuffix(), "hy", "personSuffix", i);
		fakedAssert(faker.personTitle(), "hy", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "hy", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "hy", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hy", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hy", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hy", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hy", "teamCreature", i);
		fakedAssert(faker.teamName(), "hy", "teamName", i);
		fakedAssert(faker.vehicle(), "hy", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hy", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hy", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hy", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hy", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hy", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hy", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hy", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hy", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hy", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hy", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hy", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hy", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hy", "wordVerb", i);

	}
}

unittest {
	import faked.faker_id_id;
    auto faker = new Faker_id_id(30);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "id_ID", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "id_ID", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "id_ID", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "id_ID", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "id_ID", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "id_ID", "animalBear", i);
		fakedAssert(faker.animalBird(), "id_ID", "animalBird", i);
		fakedAssert(faker.animalCat(), "id_ID", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "id_ID", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "id_ID", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "id_ID", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "id_ID", "animalDog", i);
		fakedAssert(faker.animalFish(), "id_ID", "animalFish", i);
		fakedAssert(faker.animalHorse(), "id_ID", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "id_ID", "animalInsect", i);
		fakedAssert(faker.animalLion(), "id_ID", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "id_ID", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "id_ID", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "id_ID", "animalSnake", i);
		fakedAssert(faker.animalType(), "id_ID", "animalType", i);
		fakedAssert(faker.appAuthor(), "id_ID", "appAuthor", i);
		fakedAssert(faker.appName(), "id_ID", "appName", i);
		fakedAssert(faker.appVersion(), "id_ID", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "id_ID", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "id_ID", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "id_ID", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "id_ID", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "id_ID", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "id_ID", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "id_ID", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "id_ID", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "id_ID", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "id_ID", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "id_ID", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "id_ID", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "id_ID", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "id_ID", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "id_ID", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "id_ID", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "id_ID", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "id_ID", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "id_ID", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "id_ID", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "id_ID", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "id_ID", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "id_ID", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "id_ID", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "id_ID", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "id_ID", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "id_ID", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "id_ID", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "id_ID", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "id_ID", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "id_ID", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "id_ID", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "id_ID", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "id_ID", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "id_ID", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "id_ID", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "id_ID", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "id_ID", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "id_ID", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "id_ID", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "id_ID", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "id_ID", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "id_ID", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "id_ID", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "id_ID", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "id_ID", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "id_ID", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "id_ID", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "id_ID", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "id_ID", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "id_ID", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "id_ID", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "id_ID", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "id_ID", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "id_ID", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "id_ID", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "id_ID", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "id_ID", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "id_ID", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "id_ID", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "id_ID", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "id_ID", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "id_ID", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "id_ID", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "id_ID", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "id_ID", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "id_ID", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "id_ID", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "id_ID", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "id_ID", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "id_ID", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "id_ID", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "id_ID", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "id_ID", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "id_ID", "loremSentances", i);
		fakedAssert(faker.loremText(), "id_ID", "loremText", i);
		fakedAssert(faker.loremWords(), "id_ID", "loremWords", i);
		fakedAssert(faker.musicGenre(), "id_ID", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "id_ID", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "id_ID", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "id_ID", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "id_ID", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "id_ID", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "id_ID", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "id_ID", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "id_ID", "personFirstName", i);
		fakedAssert(faker.personGender(), "id_ID", "personGender", i);
		fakedAssert(faker.personLastName(), "id_ID", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "id_ID", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "id_ID", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "id_ID", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "id_ID", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "id_ID", "personMiddleName", i);
		fakedAssert(faker.personName(), "id_ID", "personName", i);
		fakedAssert(faker.personSex(), "id_ID", "personSex", i);
		fakedAssert(faker.personSuffix(), "id_ID", "personSuffix", i);
		fakedAssert(faker.personTitle(), "id_ID", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "id_ID", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "id_ID", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "id_ID", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "id_ID", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "id_ID", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "id_ID", "teamCreature", i);
		fakedAssert(faker.teamName(), "id_ID", "teamName", i);
		fakedAssert(faker.vehicle(), "id_ID", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "id_ID", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "id_ID", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "id_ID", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "id_ID", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "id_ID", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "id_ID", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "id_ID", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "id_ID", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "id_ID", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "id_ID", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "id_ID", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "id_ID", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "id_ID", "wordVerb", i);

	}
}

unittest {
	import faked.faker_it;
    auto faker = new Faker_it(31);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "it", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "it", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "it", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "it", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "it", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "it", "animalBear", i);
		fakedAssert(faker.animalBird(), "it", "animalBird", i);
		fakedAssert(faker.animalCat(), "it", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "it", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "it", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "it", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "it", "animalDog", i);
		fakedAssert(faker.animalFish(), "it", "animalFish", i);
		fakedAssert(faker.animalHorse(), "it", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "it", "animalInsect", i);
		fakedAssert(faker.animalLion(), "it", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "it", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "it", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "it", "animalSnake", i);
		fakedAssert(faker.animalType(), "it", "animalType", i);
		fakedAssert(faker.appAuthor(), "it", "appAuthor", i);
		fakedAssert(faker.appName(), "it", "appName", i);
		fakedAssert(faker.appVersion(), "it", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "it", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "it", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "it", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "it", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "it", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "it", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "it", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "it", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "it", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "it", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "it", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "it", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "it", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "it", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "it", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "it", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "it", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "it", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "it", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "it", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "it", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "it", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "it", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "it", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "it", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "it", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "it", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "it", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "it", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "it", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "it", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "it", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "it", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "it", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "it", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "it", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "it", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "it", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "it", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "it", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "it", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "it", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "it", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "it", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "it", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "it", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "it", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "it", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "it", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "it", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "it", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "it", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "it", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "it", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "it", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "it", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "it", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "it", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "it", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "it", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "it", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "it", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "it", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "it", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "it", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "it", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "it", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "it", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "it", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "it", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "it", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "it", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "it", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "it", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "it", "loremSentances", i);
		fakedAssert(faker.loremText(), "it", "loremText", i);
		fakedAssert(faker.loremWords(), "it", "loremWords", i);
		fakedAssert(faker.musicGenre(), "it", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "it", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "it", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "it", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "it", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "it", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "it", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "it", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "it", "personFirstName", i);
		fakedAssert(faker.personGender(), "it", "personGender", i);
		fakedAssert(faker.personLastName(), "it", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "it", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "it", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "it", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "it", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "it", "personMiddleName", i);
		fakedAssert(faker.personName(), "it", "personName", i);
		fakedAssert(faker.personSex(), "it", "personSex", i);
		fakedAssert(faker.personSuffix(), "it", "personSuffix", i);
		fakedAssert(faker.personTitle(), "it", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "it", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "it", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "it", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "it", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "it", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "it", "teamCreature", i);
		fakedAssert(faker.teamName(), "it", "teamName", i);
		fakedAssert(faker.vehicle(), "it", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "it", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "it", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "it", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "it", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "it", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "it", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "it", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "it", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "it", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "it", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "it", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "it", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "it", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ja;
    auto faker = new Faker_ja(32);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ja", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ja", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ja", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ja", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ja", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ja", "animalBear", i);
		fakedAssert(faker.animalBird(), "ja", "animalBird", i);
		fakedAssert(faker.animalCat(), "ja", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ja", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ja", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ja", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ja", "animalDog", i);
		fakedAssert(faker.animalFish(), "ja", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ja", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ja", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ja", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ja", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ja", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ja", "animalSnake", i);
		fakedAssert(faker.animalType(), "ja", "animalType", i);
		fakedAssert(faker.appAuthor(), "ja", "appAuthor", i);
		fakedAssert(faker.appName(), "ja", "appName", i);
		fakedAssert(faker.appVersion(), "ja", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ja", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ja", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ja", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ja", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ja", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ja", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ja", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ja", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ja", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ja", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ja", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ja", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ja", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ja", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ja", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ja", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ja", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ja", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ja", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ja", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ja", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ja", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ja", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ja", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ja", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ja", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ja", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ja", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ja", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ja", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ja", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ja", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ja", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ja", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ja", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ja", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ja", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ja", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ja", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ja", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ja", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ja", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ja", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ja", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ja", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ja", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ja", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ja", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ja", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ja", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ja", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ja", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ja", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ja", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ja", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ja", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ja", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ja", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ja", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ja", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ja", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ja", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ja", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ja", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ja", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ja", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ja", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ja", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ja", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ja", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ja", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ja", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ja", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ja", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ja", "loremSentances", i);
		fakedAssert(faker.loremText(), "ja", "loremText", i);
		fakedAssert(faker.loremWords(), "ja", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ja", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ja", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ja", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ja", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ja", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ja", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ja", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ja", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ja", "personFirstName", i);
		fakedAssert(faker.personGender(), "ja", "personGender", i);
		fakedAssert(faker.personLastName(), "ja", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ja", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ja", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ja", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ja", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ja", "personMiddleName", i);
		fakedAssert(faker.personName(), "ja", "personName", i);
		fakedAssert(faker.personSex(), "ja", "personSex", i);
		fakedAssert(faker.personSuffix(), "ja", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ja", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ja", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ja", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ja", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ja", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ja", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ja", "teamCreature", i);
		fakedAssert(faker.teamName(), "ja", "teamName", i);
		fakedAssert(faker.vehicle(), "ja", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ja", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ja", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ja", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ja", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ja", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ja", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ja", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ja", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ja", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ja", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ja", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ja", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ja", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ko;
    auto faker = new Faker_ko(33);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ko", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ko", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ko", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ko", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ko", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ko", "animalBear", i);
		fakedAssert(faker.animalBird(), "ko", "animalBird", i);
		fakedAssert(faker.animalCat(), "ko", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ko", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ko", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ko", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ko", "animalDog", i);
		fakedAssert(faker.animalFish(), "ko", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ko", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ko", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ko", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ko", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ko", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ko", "animalSnake", i);
		fakedAssert(faker.animalType(), "ko", "animalType", i);
		fakedAssert(faker.appAuthor(), "ko", "appAuthor", i);
		fakedAssert(faker.appName(), "ko", "appName", i);
		fakedAssert(faker.appVersion(), "ko", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ko", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ko", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ko", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ko", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ko", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ko", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ko", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ko", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ko", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ko", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ko", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ko", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ko", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ko", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ko", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ko", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ko", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ko", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ko", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ko", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ko", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ko", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ko", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ko", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ko", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ko", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ko", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ko", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ko", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ko", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ko", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ko", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ko", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ko", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ko", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ko", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ko", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ko", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ko", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ko", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ko", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ko", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ko", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ko", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ko", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ko", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ko", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ko", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ko", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ko", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ko", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ko", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ko", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ko", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ko", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ko", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ko", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ko", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ko", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ko", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ko", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ko", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ko", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ko", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ko", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ko", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ko", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ko", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ko", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ko", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ko", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ko", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ko", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ko", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ko", "loremSentances", i);
		fakedAssert(faker.loremText(), "ko", "loremText", i);
		fakedAssert(faker.loremWords(), "ko", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ko", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ko", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ko", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ko", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ko", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ko", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ko", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ko", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ko", "personFirstName", i);
		fakedAssert(faker.personGender(), "ko", "personGender", i);
		fakedAssert(faker.personLastName(), "ko", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ko", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ko", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ko", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ko", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ko", "personMiddleName", i);
		fakedAssert(faker.personName(), "ko", "personName", i);
		fakedAssert(faker.personSex(), "ko", "personSex", i);
		fakedAssert(faker.personSuffix(), "ko", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ko", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ko", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ko", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ko", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ko", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ko", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ko", "teamCreature", i);
		fakedAssert(faker.teamName(), "ko", "teamName", i);
		fakedAssert(faker.vehicle(), "ko", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ko", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ko", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ko", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ko", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ko", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ko", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ko", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ko", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ko", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ko", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ko", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ko", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ko", "wordVerb", i);

	}
}

unittest {
	import faked.faker_lv;
    auto faker = new Faker_lv(34);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "lv", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "lv", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "lv", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "lv", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "lv", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "lv", "animalBear", i);
		fakedAssert(faker.animalBird(), "lv", "animalBird", i);
		fakedAssert(faker.animalCat(), "lv", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "lv", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "lv", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "lv", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "lv", "animalDog", i);
		fakedAssert(faker.animalFish(), "lv", "animalFish", i);
		fakedAssert(faker.animalHorse(), "lv", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "lv", "animalInsect", i);
		fakedAssert(faker.animalLion(), "lv", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "lv", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "lv", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "lv", "animalSnake", i);
		fakedAssert(faker.animalType(), "lv", "animalType", i);
		fakedAssert(faker.appAuthor(), "lv", "appAuthor", i);
		fakedAssert(faker.appName(), "lv", "appName", i);
		fakedAssert(faker.appVersion(), "lv", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "lv", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "lv", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "lv", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "lv", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "lv", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "lv", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "lv", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "lv", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "lv", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "lv", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "lv", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "lv", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "lv", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "lv", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "lv", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "lv", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "lv", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "lv", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "lv", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "lv", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "lv", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "lv", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "lv", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "lv", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "lv", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "lv", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "lv", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "lv", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "lv", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "lv", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "lv", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "lv", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "lv", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "lv", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "lv", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "lv", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "lv", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "lv", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "lv", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "lv", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "lv", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "lv", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "lv", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "lv", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "lv", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "lv", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "lv", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "lv", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "lv", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "lv", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "lv", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "lv", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "lv", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "lv", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "lv", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "lv", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "lv", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "lv", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "lv", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "lv", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "lv", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "lv", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "lv", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "lv", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "lv", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "lv", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "lv", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "lv", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "lv", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "lv", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "lv", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "lv", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "lv", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "lv", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "lv", "loremSentances", i);
		fakedAssert(faker.loremText(), "lv", "loremText", i);
		fakedAssert(faker.loremWords(), "lv", "loremWords", i);
		fakedAssert(faker.musicGenre(), "lv", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "lv", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "lv", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "lv", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "lv", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "lv", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "lv", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "lv", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "lv", "personFirstName", i);
		fakedAssert(faker.personGender(), "lv", "personGender", i);
		fakedAssert(faker.personLastName(), "lv", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "lv", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "lv", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "lv", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "lv", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "lv", "personMiddleName", i);
		fakedAssert(faker.personName(), "lv", "personName", i);
		fakedAssert(faker.personSex(), "lv", "personSex", i);
		fakedAssert(faker.personSuffix(), "lv", "personSuffix", i);
		fakedAssert(faker.personTitle(), "lv", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "lv", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "lv", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "lv", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "lv", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "lv", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "lv", "teamCreature", i);
		fakedAssert(faker.teamName(), "lv", "teamName", i);
		fakedAssert(faker.vehicle(), "lv", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "lv", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "lv", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "lv", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "lv", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "lv", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "lv", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "lv", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "lv", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "lv", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "lv", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "lv", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "lv", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "lv", "wordVerb", i);

	}
}

unittest {
	import faked.faker_mk;
    auto faker = new Faker_mk(35);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "mk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "mk", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "mk", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "mk", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "mk", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "mk", "animalBear", i);
		fakedAssert(faker.animalBird(), "mk", "animalBird", i);
		fakedAssert(faker.animalCat(), "mk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "mk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "mk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "mk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "mk", "animalDog", i);
		fakedAssert(faker.animalFish(), "mk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "mk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "mk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "mk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "mk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "mk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "mk", "animalSnake", i);
		fakedAssert(faker.animalType(), "mk", "animalType", i);
		fakedAssert(faker.appAuthor(), "mk", "appAuthor", i);
		fakedAssert(faker.appName(), "mk", "appName", i);
		fakedAssert(faker.appVersion(), "mk", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "mk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "mk", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "mk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "mk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "mk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "mk", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "mk", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "mk", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "mk", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "mk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "mk", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "mk", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "mk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "mk", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "mk", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "mk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "mk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "mk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "mk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "mk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "mk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "mk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "mk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "mk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "mk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "mk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "mk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "mk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "mk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "mk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "mk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "mk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "mk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "mk", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "mk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "mk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "mk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "mk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "mk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "mk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "mk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "mk", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "mk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "mk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "mk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "mk", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "mk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "mk", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "mk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "mk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "mk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "mk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "mk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "mk", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "mk", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "mk", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "mk", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "mk", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "mk", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "mk", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "mk", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "mk", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "mk", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "mk", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "mk", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "mk", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "mk", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "mk", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "mk", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "mk", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "mk", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "mk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "mk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "mk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "mk", "loremSentances", i);
		fakedAssert(faker.loremText(), "mk", "loremText", i);
		fakedAssert(faker.loremWords(), "mk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "mk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "mk", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "mk", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "mk", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "mk", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "mk", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "mk", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "mk", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "mk", "personFirstName", i);
		fakedAssert(faker.personGender(), "mk", "personGender", i);
		fakedAssert(faker.personLastName(), "mk", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "mk", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "mk", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "mk", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "mk", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "mk", "personMiddleName", i);
		fakedAssert(faker.personName(), "mk", "personName", i);
		fakedAssert(faker.personSex(), "mk", "personSex", i);
		fakedAssert(faker.personSuffix(), "mk", "personSuffix", i);
		fakedAssert(faker.personTitle(), "mk", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "mk", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "mk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "mk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "mk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "mk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "mk", "teamCreature", i);
		fakedAssert(faker.teamName(), "mk", "teamName", i);
		fakedAssert(faker.vehicle(), "mk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "mk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "mk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "mk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "mk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "mk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "mk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "mk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "mk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "mk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "mk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "mk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "mk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "mk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nb_no;
    auto faker = new Faker_nb_no(36);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "nb_NO", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nb_NO", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "nb_NO", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "nb_NO", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "nb_NO", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "nb_NO", "animalBear", i);
		fakedAssert(faker.animalBird(), "nb_NO", "animalBird", i);
		fakedAssert(faker.animalCat(), "nb_NO", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nb_NO", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nb_NO", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nb_NO", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nb_NO", "animalDog", i);
		fakedAssert(faker.animalFish(), "nb_NO", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nb_NO", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nb_NO", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nb_NO", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nb_NO", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nb_NO", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nb_NO", "animalSnake", i);
		fakedAssert(faker.animalType(), "nb_NO", "animalType", i);
		fakedAssert(faker.appAuthor(), "nb_NO", "appAuthor", i);
		fakedAssert(faker.appName(), "nb_NO", "appName", i);
		fakedAssert(faker.appVersion(), "nb_NO", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "nb_NO", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nb_NO", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "nb_NO", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nb_NO", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nb_NO", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nb_NO", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "nb_NO", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "nb_NO", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "nb_NO", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nb_NO", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nb_NO", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "nb_NO", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "nb_NO", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nb_NO", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "nb_NO", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "nb_NO", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nb_NO", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nb_NO", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nb_NO", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nb_NO", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nb_NO", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nb_NO", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nb_NO", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nb_NO", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nb_NO", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nb_NO", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "nb_NO", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nb_NO", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "nb_NO", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nb_NO", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nb_NO", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nb_NO", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nb_NO", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nb_NO", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "nb_NO", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nb_NO", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nb_NO", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nb_NO", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nb_NO", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nb_NO", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nb_NO", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nb_NO", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "nb_NO", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nb_NO", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nb_NO", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nb_NO", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "nb_NO", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nb_NO", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "nb_NO", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nb_NO", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nb_NO", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nb_NO", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nb_NO", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nb_NO", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "nb_NO", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "nb_NO", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "nb_NO", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "nb_NO", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "nb_NO", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "nb_NO", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "nb_NO", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "nb_NO", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "nb_NO", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "nb_NO", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "nb_NO", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "nb_NO", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "nb_NO", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "nb_NO", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "nb_NO", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "nb_NO", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "nb_NO", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "nb_NO", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nb_NO", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nb_NO", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nb_NO", "loremSentances", i);
		fakedAssert(faker.loremText(), "nb_NO", "loremText", i);
		fakedAssert(faker.loremWords(), "nb_NO", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nb_NO", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nb_NO", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "nb_NO", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "nb_NO", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "nb_NO", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "nb_NO", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "nb_NO", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "nb_NO", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "nb_NO", "personFirstName", i);
		fakedAssert(faker.personGender(), "nb_NO", "personGender", i);
		fakedAssert(faker.personLastName(), "nb_NO", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "nb_NO", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "nb_NO", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "nb_NO", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "nb_NO", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "nb_NO", "personMiddleName", i);
		fakedAssert(faker.personName(), "nb_NO", "personName", i);
		fakedAssert(faker.personSex(), "nb_NO", "personSex", i);
		fakedAssert(faker.personSuffix(), "nb_NO", "personSuffix", i);
		fakedAssert(faker.personTitle(), "nb_NO", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "nb_NO", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "nb_NO", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nb_NO", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nb_NO", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nb_NO", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nb_NO", "teamCreature", i);
		fakedAssert(faker.teamName(), "nb_NO", "teamName", i);
		fakedAssert(faker.vehicle(), "nb_NO", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nb_NO", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nb_NO", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nb_NO", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nb_NO", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nb_NO", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nb_NO", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nb_NO", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nb_NO", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nb_NO", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nb_NO", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nb_NO", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nb_NO", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nb_NO", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ne;
    auto faker = new Faker_ne(37);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ne", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ne", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ne", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ne", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ne", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ne", "animalBear", i);
		fakedAssert(faker.animalBird(), "ne", "animalBird", i);
		fakedAssert(faker.animalCat(), "ne", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ne", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ne", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ne", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ne", "animalDog", i);
		fakedAssert(faker.animalFish(), "ne", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ne", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ne", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ne", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ne", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ne", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ne", "animalSnake", i);
		fakedAssert(faker.animalType(), "ne", "animalType", i);
		fakedAssert(faker.appAuthor(), "ne", "appAuthor", i);
		fakedAssert(faker.appName(), "ne", "appName", i);
		fakedAssert(faker.appVersion(), "ne", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ne", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ne", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ne", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ne", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ne", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ne", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ne", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ne", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ne", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ne", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ne", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ne", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ne", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ne", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ne", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ne", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ne", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ne", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ne", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ne", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ne", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ne", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ne", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ne", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ne", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ne", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ne", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ne", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ne", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ne", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ne", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ne", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ne", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ne", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ne", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ne", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ne", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ne", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ne", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ne", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ne", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ne", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ne", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ne", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ne", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ne", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ne", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ne", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ne", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ne", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ne", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ne", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ne", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ne", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ne", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ne", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ne", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ne", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ne", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ne", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ne", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ne", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ne", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ne", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ne", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ne", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ne", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ne", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ne", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ne", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ne", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ne", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ne", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ne", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ne", "loremSentances", i);
		fakedAssert(faker.loremText(), "ne", "loremText", i);
		fakedAssert(faker.loremWords(), "ne", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ne", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ne", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ne", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ne", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ne", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ne", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ne", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ne", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ne", "personFirstName", i);
		fakedAssert(faker.personGender(), "ne", "personGender", i);
		fakedAssert(faker.personLastName(), "ne", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ne", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ne", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ne", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ne", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ne", "personMiddleName", i);
		fakedAssert(faker.personName(), "ne", "personName", i);
		fakedAssert(faker.personSex(), "ne", "personSex", i);
		fakedAssert(faker.personSuffix(), "ne", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ne", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ne", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ne", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ne", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ne", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ne", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ne", "teamCreature", i);
		fakedAssert(faker.teamName(), "ne", "teamName", i);
		fakedAssert(faker.vehicle(), "ne", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ne", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ne", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ne", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ne", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ne", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ne", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ne", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ne", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ne", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ne", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ne", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ne", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ne", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nl;
    auto faker = new Faker_nl(38);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "nl", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nl", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "nl", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "nl", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "nl", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "nl", "animalBear", i);
		fakedAssert(faker.animalBird(), "nl", "animalBird", i);
		fakedAssert(faker.animalCat(), "nl", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nl", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nl", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nl", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nl", "animalDog", i);
		fakedAssert(faker.animalFish(), "nl", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nl", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nl", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nl", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nl", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nl", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nl", "animalSnake", i);
		fakedAssert(faker.animalType(), "nl", "animalType", i);
		fakedAssert(faker.appAuthor(), "nl", "appAuthor", i);
		fakedAssert(faker.appName(), "nl", "appName", i);
		fakedAssert(faker.appVersion(), "nl", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "nl", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nl", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "nl", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nl", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nl", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nl", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "nl", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "nl", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "nl", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nl", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nl", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "nl", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "nl", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nl", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "nl", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "nl", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nl", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nl", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nl", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nl", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nl", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nl", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nl", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nl", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nl", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nl", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "nl", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nl", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "nl", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nl", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nl", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nl", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nl", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nl", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "nl", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nl", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nl", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nl", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nl", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nl", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nl", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nl", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "nl", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nl", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nl", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nl", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "nl", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nl", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "nl", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nl", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nl", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nl", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nl", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nl", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "nl", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "nl", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "nl", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "nl", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "nl", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "nl", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "nl", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "nl", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "nl", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "nl", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "nl", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "nl", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "nl", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "nl", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "nl", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "nl", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "nl", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "nl", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nl", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nl", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nl", "loremSentances", i);
		fakedAssert(faker.loremText(), "nl", "loremText", i);
		fakedAssert(faker.loremWords(), "nl", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nl", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nl", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "nl", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "nl", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "nl", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "nl", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "nl", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "nl", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "nl", "personFirstName", i);
		fakedAssert(faker.personGender(), "nl", "personGender", i);
		fakedAssert(faker.personLastName(), "nl", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "nl", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "nl", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "nl", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "nl", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "nl", "personMiddleName", i);
		fakedAssert(faker.personName(), "nl", "personName", i);
		fakedAssert(faker.personSex(), "nl", "personSex", i);
		fakedAssert(faker.personSuffix(), "nl", "personSuffix", i);
		fakedAssert(faker.personTitle(), "nl", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "nl", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "nl", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nl", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nl", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nl", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nl", "teamCreature", i);
		fakedAssert(faker.teamName(), "nl", "teamName", i);
		fakedAssert(faker.vehicle(), "nl", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nl", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nl", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nl", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nl", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nl", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nl", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nl", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nl", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nl", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nl", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nl", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nl", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nl", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nl_be;
    auto faker = new Faker_nl_be(39);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "nl_BE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nl_BE", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "nl_BE", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "nl_BE", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "nl_BE", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "nl_BE", "animalBear", i);
		fakedAssert(faker.animalBird(), "nl_BE", "animalBird", i);
		fakedAssert(faker.animalCat(), "nl_BE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nl_BE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nl_BE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nl_BE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nl_BE", "animalDog", i);
		fakedAssert(faker.animalFish(), "nl_BE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nl_BE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nl_BE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nl_BE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nl_BE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nl_BE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nl_BE", "animalSnake", i);
		fakedAssert(faker.animalType(), "nl_BE", "animalType", i);
		fakedAssert(faker.appAuthor(), "nl_BE", "appAuthor", i);
		fakedAssert(faker.appName(), "nl_BE", "appName", i);
		fakedAssert(faker.appVersion(), "nl_BE", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "nl_BE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nl_BE", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "nl_BE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nl_BE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nl_BE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nl_BE", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "nl_BE", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "nl_BE", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "nl_BE", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nl_BE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nl_BE", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "nl_BE", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "nl_BE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nl_BE", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "nl_BE", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "nl_BE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nl_BE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nl_BE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nl_BE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nl_BE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nl_BE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nl_BE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nl_BE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nl_BE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nl_BE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nl_BE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "nl_BE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nl_BE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "nl_BE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nl_BE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nl_BE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nl_BE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nl_BE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nl_BE", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "nl_BE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nl_BE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nl_BE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nl_BE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nl_BE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nl_BE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nl_BE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nl_BE", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "nl_BE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nl_BE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nl_BE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nl_BE", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "nl_BE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nl_BE", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "nl_BE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nl_BE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nl_BE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nl_BE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nl_BE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nl_BE", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "nl_BE", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "nl_BE", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "nl_BE", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "nl_BE", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "nl_BE", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "nl_BE", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "nl_BE", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "nl_BE", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "nl_BE", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "nl_BE", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "nl_BE", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "nl_BE", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "nl_BE", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "nl_BE", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "nl_BE", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "nl_BE", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "nl_BE", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "nl_BE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nl_BE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nl_BE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nl_BE", "loremSentances", i);
		fakedAssert(faker.loremText(), "nl_BE", "loremText", i);
		fakedAssert(faker.loremWords(), "nl_BE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nl_BE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nl_BE", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "nl_BE", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "nl_BE", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "nl_BE", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "nl_BE", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "nl_BE", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "nl_BE", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "nl_BE", "personFirstName", i);
		fakedAssert(faker.personGender(), "nl_BE", "personGender", i);
		fakedAssert(faker.personLastName(), "nl_BE", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "nl_BE", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "nl_BE", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "nl_BE", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "nl_BE", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "nl_BE", "personMiddleName", i);
		fakedAssert(faker.personName(), "nl_BE", "personName", i);
		fakedAssert(faker.personSex(), "nl_BE", "personSex", i);
		fakedAssert(faker.personSuffix(), "nl_BE", "personSuffix", i);
		fakedAssert(faker.personTitle(), "nl_BE", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "nl_BE", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "nl_BE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nl_BE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nl_BE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nl_BE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nl_BE", "teamCreature", i);
		fakedAssert(faker.teamName(), "nl_BE", "teamName", i);
		fakedAssert(faker.vehicle(), "nl_BE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nl_BE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nl_BE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nl_BE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nl_BE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nl_BE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nl_BE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nl_BE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nl_BE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nl_BE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nl_BE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nl_BE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nl_BE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nl_BE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pl;
    auto faker = new Faker_pl(40);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "pl", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pl", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "pl", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "pl", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "pl", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "pl", "animalBear", i);
		fakedAssert(faker.animalBird(), "pl", "animalBird", i);
		fakedAssert(faker.animalCat(), "pl", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pl", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pl", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pl", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pl", "animalDog", i);
		fakedAssert(faker.animalFish(), "pl", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pl", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pl", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pl", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pl", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pl", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pl", "animalSnake", i);
		fakedAssert(faker.animalType(), "pl", "animalType", i);
		fakedAssert(faker.appAuthor(), "pl", "appAuthor", i);
		fakedAssert(faker.appName(), "pl", "appName", i);
		fakedAssert(faker.appVersion(), "pl", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "pl", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pl", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "pl", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pl", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pl", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pl", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "pl", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "pl", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "pl", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pl", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pl", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "pl", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "pl", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pl", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "pl", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "pl", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pl", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pl", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pl", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pl", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pl", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pl", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pl", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pl", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pl", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pl", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "pl", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pl", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "pl", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pl", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pl", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pl", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pl", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pl", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "pl", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pl", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pl", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pl", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pl", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pl", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pl", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pl", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "pl", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pl", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pl", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pl", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "pl", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pl", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "pl", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pl", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pl", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pl", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pl", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pl", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "pl", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "pl", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "pl", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "pl", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "pl", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "pl", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "pl", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "pl", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "pl", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "pl", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "pl", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "pl", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "pl", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "pl", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "pl", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "pl", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "pl", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "pl", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pl", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pl", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pl", "loremSentances", i);
		fakedAssert(faker.loremText(), "pl", "loremText", i);
		fakedAssert(faker.loremWords(), "pl", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pl", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pl", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "pl", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "pl", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "pl", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "pl", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "pl", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "pl", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "pl", "personFirstName", i);
		fakedAssert(faker.personGender(), "pl", "personGender", i);
		fakedAssert(faker.personLastName(), "pl", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "pl", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "pl", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "pl", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "pl", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "pl", "personMiddleName", i);
		fakedAssert(faker.personName(), "pl", "personName", i);
		fakedAssert(faker.personSex(), "pl", "personSex", i);
		fakedAssert(faker.personSuffix(), "pl", "personSuffix", i);
		fakedAssert(faker.personTitle(), "pl", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "pl", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "pl", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pl", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pl", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pl", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pl", "teamCreature", i);
		fakedAssert(faker.teamName(), "pl", "teamName", i);
		fakedAssert(faker.vehicle(), "pl", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pl", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pl", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pl", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pl", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pl", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pl", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pl", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pl", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pl", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pl", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pl", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pl", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pl", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pt_br;
    auto faker = new Faker_pt_br(41);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "pt_BR", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pt_BR", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "pt_BR", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "pt_BR", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "pt_BR", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "pt_BR", "animalBear", i);
		fakedAssert(faker.animalBird(), "pt_BR", "animalBird", i);
		fakedAssert(faker.animalCat(), "pt_BR", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pt_BR", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pt_BR", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pt_BR", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pt_BR", "animalDog", i);
		fakedAssert(faker.animalFish(), "pt_BR", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pt_BR", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pt_BR", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pt_BR", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pt_BR", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pt_BR", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pt_BR", "animalSnake", i);
		fakedAssert(faker.animalType(), "pt_BR", "animalType", i);
		fakedAssert(faker.appAuthor(), "pt_BR", "appAuthor", i);
		fakedAssert(faker.appName(), "pt_BR", "appName", i);
		fakedAssert(faker.appVersion(), "pt_BR", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "pt_BR", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pt_BR", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "pt_BR", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pt_BR", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pt_BR", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pt_BR", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "pt_BR", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "pt_BR", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "pt_BR", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pt_BR", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pt_BR", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "pt_BR", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "pt_BR", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pt_BR", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "pt_BR", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "pt_BR", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pt_BR", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pt_BR", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pt_BR", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pt_BR", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pt_BR", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pt_BR", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pt_BR", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pt_BR", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pt_BR", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pt_BR", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "pt_BR", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pt_BR", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "pt_BR", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pt_BR", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pt_BR", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pt_BR", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pt_BR", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pt_BR", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "pt_BR", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pt_BR", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pt_BR", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pt_BR", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pt_BR", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pt_BR", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pt_BR", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pt_BR", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "pt_BR", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pt_BR", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pt_BR", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pt_BR", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "pt_BR", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pt_BR", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "pt_BR", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pt_BR", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pt_BR", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pt_BR", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pt_BR", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pt_BR", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "pt_BR", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "pt_BR", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "pt_BR", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "pt_BR", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "pt_BR", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "pt_BR", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "pt_BR", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "pt_BR", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "pt_BR", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "pt_BR", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "pt_BR", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "pt_BR", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "pt_BR", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "pt_BR", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "pt_BR", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "pt_BR", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "pt_BR", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "pt_BR", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pt_BR", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pt_BR", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pt_BR", "loremSentances", i);
		fakedAssert(faker.loremText(), "pt_BR", "loremText", i);
		fakedAssert(faker.loremWords(), "pt_BR", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pt_BR", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pt_BR", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "pt_BR", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "pt_BR", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "pt_BR", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "pt_BR", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "pt_BR", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "pt_BR", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "pt_BR", "personFirstName", i);
		fakedAssert(faker.personGender(), "pt_BR", "personGender", i);
		fakedAssert(faker.personLastName(), "pt_BR", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "pt_BR", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "pt_BR", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "pt_BR", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "pt_BR", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "pt_BR", "personMiddleName", i);
		fakedAssert(faker.personName(), "pt_BR", "personName", i);
		fakedAssert(faker.personSex(), "pt_BR", "personSex", i);
		fakedAssert(faker.personSuffix(), "pt_BR", "personSuffix", i);
		fakedAssert(faker.personTitle(), "pt_BR", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "pt_BR", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "pt_BR", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pt_BR", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pt_BR", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pt_BR", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pt_BR", "teamCreature", i);
		fakedAssert(faker.teamName(), "pt_BR", "teamName", i);
		fakedAssert(faker.vehicle(), "pt_BR", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pt_BR", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pt_BR", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pt_BR", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pt_BR", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pt_BR", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pt_BR", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pt_BR", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pt_BR", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pt_BR", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pt_BR", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pt_BR", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pt_BR", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pt_BR", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pt_pt;
    auto faker = new Faker_pt_pt(42);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "pt_PT", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pt_PT", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "pt_PT", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "pt_PT", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "pt_PT", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "pt_PT", "animalBear", i);
		fakedAssert(faker.animalBird(), "pt_PT", "animalBird", i);
		fakedAssert(faker.animalCat(), "pt_PT", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pt_PT", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pt_PT", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pt_PT", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pt_PT", "animalDog", i);
		fakedAssert(faker.animalFish(), "pt_PT", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pt_PT", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pt_PT", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pt_PT", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pt_PT", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pt_PT", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pt_PT", "animalSnake", i);
		fakedAssert(faker.animalType(), "pt_PT", "animalType", i);
		fakedAssert(faker.appAuthor(), "pt_PT", "appAuthor", i);
		fakedAssert(faker.appName(), "pt_PT", "appName", i);
		fakedAssert(faker.appVersion(), "pt_PT", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "pt_PT", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pt_PT", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "pt_PT", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pt_PT", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pt_PT", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pt_PT", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "pt_PT", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "pt_PT", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "pt_PT", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pt_PT", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pt_PT", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "pt_PT", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "pt_PT", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pt_PT", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "pt_PT", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "pt_PT", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pt_PT", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pt_PT", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pt_PT", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pt_PT", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pt_PT", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pt_PT", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pt_PT", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pt_PT", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pt_PT", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pt_PT", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "pt_PT", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pt_PT", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "pt_PT", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pt_PT", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pt_PT", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pt_PT", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pt_PT", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pt_PT", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "pt_PT", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pt_PT", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pt_PT", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pt_PT", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pt_PT", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pt_PT", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pt_PT", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pt_PT", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "pt_PT", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pt_PT", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pt_PT", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pt_PT", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "pt_PT", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pt_PT", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "pt_PT", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pt_PT", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pt_PT", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pt_PT", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pt_PT", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pt_PT", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "pt_PT", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "pt_PT", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "pt_PT", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "pt_PT", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "pt_PT", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "pt_PT", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "pt_PT", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "pt_PT", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "pt_PT", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "pt_PT", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "pt_PT", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "pt_PT", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "pt_PT", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "pt_PT", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "pt_PT", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "pt_PT", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "pt_PT", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "pt_PT", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pt_PT", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pt_PT", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pt_PT", "loremSentances", i);
		fakedAssert(faker.loremText(), "pt_PT", "loremText", i);
		fakedAssert(faker.loremWords(), "pt_PT", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pt_PT", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pt_PT", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "pt_PT", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "pt_PT", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "pt_PT", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "pt_PT", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "pt_PT", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "pt_PT", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "pt_PT", "personFirstName", i);
		fakedAssert(faker.personGender(), "pt_PT", "personGender", i);
		fakedAssert(faker.personLastName(), "pt_PT", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "pt_PT", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "pt_PT", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "pt_PT", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "pt_PT", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "pt_PT", "personMiddleName", i);
		fakedAssert(faker.personName(), "pt_PT", "personName", i);
		fakedAssert(faker.personSex(), "pt_PT", "personSex", i);
		fakedAssert(faker.personSuffix(), "pt_PT", "personSuffix", i);
		fakedAssert(faker.personTitle(), "pt_PT", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "pt_PT", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "pt_PT", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pt_PT", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pt_PT", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pt_PT", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pt_PT", "teamCreature", i);
		fakedAssert(faker.teamName(), "pt_PT", "teamName", i);
		fakedAssert(faker.vehicle(), "pt_PT", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pt_PT", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pt_PT", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pt_PT", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pt_PT", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pt_PT", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pt_PT", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pt_PT", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pt_PT", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pt_PT", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pt_PT", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pt_PT", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pt_PT", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pt_PT", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ro;
    auto faker = new Faker_ro(43);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ro", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ro", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ro", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ro", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ro", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ro", "animalBear", i);
		fakedAssert(faker.animalBird(), "ro", "animalBird", i);
		fakedAssert(faker.animalCat(), "ro", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ro", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ro", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ro", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ro", "animalDog", i);
		fakedAssert(faker.animalFish(), "ro", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ro", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ro", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ro", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ro", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ro", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ro", "animalSnake", i);
		fakedAssert(faker.animalType(), "ro", "animalType", i);
		fakedAssert(faker.appAuthor(), "ro", "appAuthor", i);
		fakedAssert(faker.appName(), "ro", "appName", i);
		fakedAssert(faker.appVersion(), "ro", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ro", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ro", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ro", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ro", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ro", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ro", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ro", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ro", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ro", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ro", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ro", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ro", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ro", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ro", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ro", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ro", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ro", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ro", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ro", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ro", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ro", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ro", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ro", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ro", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ro", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ro", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ro", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ro", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ro", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ro", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ro", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ro", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ro", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ro", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ro", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ro", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ro", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ro", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ro", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ro", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ro", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ro", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ro", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ro", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ro", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ro", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ro", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ro", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ro", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ro", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ro", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ro", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ro", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ro", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ro", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ro", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ro", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ro", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ro", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ro", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ro", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ro", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ro", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ro", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ro", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ro", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ro", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ro", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ro", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ro", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ro", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ro", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ro", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ro", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ro", "loremSentances", i);
		fakedAssert(faker.loremText(), "ro", "loremText", i);
		fakedAssert(faker.loremWords(), "ro", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ro", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ro", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ro", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ro", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ro", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ro", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ro", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ro", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ro", "personFirstName", i);
		fakedAssert(faker.personGender(), "ro", "personGender", i);
		fakedAssert(faker.personLastName(), "ro", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ro", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ro", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ro", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ro", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ro", "personMiddleName", i);
		fakedAssert(faker.personName(), "ro", "personName", i);
		fakedAssert(faker.personSex(), "ro", "personSex", i);
		fakedAssert(faker.personSuffix(), "ro", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ro", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ro", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ro", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ro", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ro", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ro", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ro", "teamCreature", i);
		fakedAssert(faker.teamName(), "ro", "teamName", i);
		fakedAssert(faker.vehicle(), "ro", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ro", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ro", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ro", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ro", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ro", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ro", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ro", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ro", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ro", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ro", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ro", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ro", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ro", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ru;
    auto faker = new Faker_ru(44);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ru", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ru", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ru", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ru", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ru", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ru", "animalBear", i);
		fakedAssert(faker.animalBird(), "ru", "animalBird", i);
		fakedAssert(faker.animalCat(), "ru", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ru", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ru", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ru", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ru", "animalDog", i);
		fakedAssert(faker.animalFish(), "ru", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ru", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ru", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ru", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ru", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ru", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ru", "animalSnake", i);
		fakedAssert(faker.animalType(), "ru", "animalType", i);
		fakedAssert(faker.appAuthor(), "ru", "appAuthor", i);
		fakedAssert(faker.appName(), "ru", "appName", i);
		fakedAssert(faker.appVersion(), "ru", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ru", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ru", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ru", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ru", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ru", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ru", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ru", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ru", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ru", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ru", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ru", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ru", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ru", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ru", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ru", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ru", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ru", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ru", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ru", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ru", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ru", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ru", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ru", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ru", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ru", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ru", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ru", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ru", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ru", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ru", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ru", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ru", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ru", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ru", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ru", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ru", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ru", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ru", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ru", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ru", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ru", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ru", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ru", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ru", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ru", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ru", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ru", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ru", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ru", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ru", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ru", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ru", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ru", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ru", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ru", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ru", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ru", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ru", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ru", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ru", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ru", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ru", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ru", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ru", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ru", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ru", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ru", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ru", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ru", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ru", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ru", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ru", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ru", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ru", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ru", "loremSentances", i);
		fakedAssert(faker.loremText(), "ru", "loremText", i);
		fakedAssert(faker.loremWords(), "ru", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ru", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ru", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ru", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ru", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ru", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ru", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ru", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ru", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ru", "personFirstName", i);
		fakedAssert(faker.personGender(), "ru", "personGender", i);
		fakedAssert(faker.personLastName(), "ru", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ru", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ru", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ru", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ru", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ru", "personMiddleName", i);
		fakedAssert(faker.personName(), "ru", "personName", i);
		fakedAssert(faker.personSex(), "ru", "personSex", i);
		fakedAssert(faker.personSuffix(), "ru", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ru", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ru", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ru", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ru", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ru", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ru", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ru", "teamCreature", i);
		fakedAssert(faker.teamName(), "ru", "teamName", i);
		fakedAssert(faker.vehicle(), "ru", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ru", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ru", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ru", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ru", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ru", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ru", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ru", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ru", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ru", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ru", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ru", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ru", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ru", "wordVerb", i);

	}
}

unittest {
	import faked.faker_sk;
    auto faker = new Faker_sk(45);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "sk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "sk", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "sk", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "sk", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "sk", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "sk", "animalBear", i);
		fakedAssert(faker.animalBird(), "sk", "animalBird", i);
		fakedAssert(faker.animalCat(), "sk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "sk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "sk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "sk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "sk", "animalDog", i);
		fakedAssert(faker.animalFish(), "sk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "sk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "sk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "sk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "sk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "sk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "sk", "animalSnake", i);
		fakedAssert(faker.animalType(), "sk", "animalType", i);
		fakedAssert(faker.appAuthor(), "sk", "appAuthor", i);
		fakedAssert(faker.appName(), "sk", "appName", i);
		fakedAssert(faker.appVersion(), "sk", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "sk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "sk", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "sk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "sk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "sk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "sk", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "sk", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "sk", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "sk", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "sk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "sk", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "sk", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "sk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "sk", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "sk", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "sk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "sk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "sk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "sk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "sk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "sk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "sk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "sk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "sk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "sk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "sk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "sk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "sk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "sk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "sk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "sk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "sk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "sk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "sk", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "sk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "sk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "sk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "sk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "sk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "sk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "sk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "sk", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "sk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "sk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "sk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "sk", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "sk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "sk", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "sk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "sk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "sk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "sk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "sk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "sk", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "sk", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "sk", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "sk", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "sk", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "sk", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "sk", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "sk", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "sk", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "sk", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "sk", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "sk", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "sk", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "sk", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "sk", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "sk", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "sk", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "sk", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "sk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "sk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "sk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "sk", "loremSentances", i);
		fakedAssert(faker.loremText(), "sk", "loremText", i);
		fakedAssert(faker.loremWords(), "sk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "sk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "sk", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "sk", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "sk", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "sk", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "sk", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "sk", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "sk", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "sk", "personFirstName", i);
		fakedAssert(faker.personGender(), "sk", "personGender", i);
		fakedAssert(faker.personLastName(), "sk", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "sk", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "sk", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "sk", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "sk", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "sk", "personMiddleName", i);
		fakedAssert(faker.personName(), "sk", "personName", i);
		fakedAssert(faker.personSex(), "sk", "personSex", i);
		fakedAssert(faker.personSuffix(), "sk", "personSuffix", i);
		fakedAssert(faker.personTitle(), "sk", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "sk", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "sk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "sk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "sk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "sk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "sk", "teamCreature", i);
		fakedAssert(faker.teamName(), "sk", "teamName", i);
		fakedAssert(faker.vehicle(), "sk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "sk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "sk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "sk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "sk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "sk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "sk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "sk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "sk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "sk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "sk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "sk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "sk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "sk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_sv;
    auto faker = new Faker_sv(46);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "sv", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "sv", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "sv", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "sv", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "sv", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "sv", "animalBear", i);
		fakedAssert(faker.animalBird(), "sv", "animalBird", i);
		fakedAssert(faker.animalCat(), "sv", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "sv", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "sv", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "sv", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "sv", "animalDog", i);
		fakedAssert(faker.animalFish(), "sv", "animalFish", i);
		fakedAssert(faker.animalHorse(), "sv", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "sv", "animalInsect", i);
		fakedAssert(faker.animalLion(), "sv", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "sv", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "sv", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "sv", "animalSnake", i);
		fakedAssert(faker.animalType(), "sv", "animalType", i);
		fakedAssert(faker.appAuthor(), "sv", "appAuthor", i);
		fakedAssert(faker.appName(), "sv", "appName", i);
		fakedAssert(faker.appVersion(), "sv", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "sv", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "sv", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "sv", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "sv", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "sv", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "sv", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "sv", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "sv", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "sv", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "sv", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "sv", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "sv", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "sv", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "sv", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "sv", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "sv", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "sv", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "sv", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "sv", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "sv", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "sv", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "sv", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "sv", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "sv", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "sv", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "sv", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "sv", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "sv", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "sv", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "sv", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "sv", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "sv", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "sv", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "sv", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "sv", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "sv", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "sv", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "sv", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "sv", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "sv", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "sv", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "sv", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "sv", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "sv", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "sv", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "sv", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "sv", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "sv", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "sv", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "sv", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "sv", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "sv", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "sv", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "sv", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "sv", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "sv", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "sv", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "sv", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "sv", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "sv", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "sv", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "sv", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "sv", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "sv", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "sv", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "sv", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "sv", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "sv", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "sv", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "sv", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "sv", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "sv", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "sv", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "sv", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "sv", "loremSentances", i);
		fakedAssert(faker.loremText(), "sv", "loremText", i);
		fakedAssert(faker.loremWords(), "sv", "loremWords", i);
		fakedAssert(faker.musicGenre(), "sv", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "sv", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "sv", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "sv", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "sv", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "sv", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "sv", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "sv", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "sv", "personFirstName", i);
		fakedAssert(faker.personGender(), "sv", "personGender", i);
		fakedAssert(faker.personLastName(), "sv", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "sv", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "sv", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "sv", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "sv", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "sv", "personMiddleName", i);
		fakedAssert(faker.personName(), "sv", "personName", i);
		fakedAssert(faker.personSex(), "sv", "personSex", i);
		fakedAssert(faker.personSuffix(), "sv", "personSuffix", i);
		fakedAssert(faker.personTitle(), "sv", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "sv", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "sv", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "sv", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "sv", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "sv", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "sv", "teamCreature", i);
		fakedAssert(faker.teamName(), "sv", "teamName", i);
		fakedAssert(faker.vehicle(), "sv", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "sv", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "sv", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "sv", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "sv", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "sv", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "sv", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "sv", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "sv", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "sv", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "sv", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "sv", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "sv", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "sv", "wordVerb", i);

	}
}

unittest {
	import faked.faker_tr;
    auto faker = new Faker_tr(47);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "tr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "tr", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "tr", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "tr", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "tr", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "tr", "animalBear", i);
		fakedAssert(faker.animalBird(), "tr", "animalBird", i);
		fakedAssert(faker.animalCat(), "tr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "tr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "tr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "tr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "tr", "animalDog", i);
		fakedAssert(faker.animalFish(), "tr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "tr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "tr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "tr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "tr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "tr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "tr", "animalSnake", i);
		fakedAssert(faker.animalType(), "tr", "animalType", i);
		fakedAssert(faker.appAuthor(), "tr", "appAuthor", i);
		fakedAssert(faker.appName(), "tr", "appName", i);
		fakedAssert(faker.appVersion(), "tr", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "tr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "tr", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "tr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "tr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "tr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "tr", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "tr", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "tr", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "tr", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "tr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "tr", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "tr", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "tr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "tr", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "tr", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "tr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "tr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "tr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "tr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "tr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "tr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "tr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "tr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "tr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "tr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "tr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "tr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "tr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "tr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "tr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "tr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "tr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "tr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "tr", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "tr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "tr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "tr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "tr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "tr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "tr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "tr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "tr", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "tr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "tr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "tr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "tr", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "tr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "tr", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "tr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "tr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "tr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "tr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "tr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "tr", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "tr", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "tr", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "tr", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "tr", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "tr", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "tr", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "tr", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "tr", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "tr", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "tr", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "tr", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "tr", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "tr", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "tr", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "tr", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "tr", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "tr", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "tr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "tr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "tr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "tr", "loremSentances", i);
		fakedAssert(faker.loremText(), "tr", "loremText", i);
		fakedAssert(faker.loremWords(), "tr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "tr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "tr", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "tr", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "tr", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "tr", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "tr", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "tr", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "tr", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "tr", "personFirstName", i);
		fakedAssert(faker.personGender(), "tr", "personGender", i);
		fakedAssert(faker.personLastName(), "tr", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "tr", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "tr", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "tr", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "tr", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "tr", "personMiddleName", i);
		fakedAssert(faker.personName(), "tr", "personName", i);
		fakedAssert(faker.personSex(), "tr", "personSex", i);
		fakedAssert(faker.personSuffix(), "tr", "personSuffix", i);
		fakedAssert(faker.personTitle(), "tr", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "tr", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "tr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "tr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "tr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "tr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "tr", "teamCreature", i);
		fakedAssert(faker.teamName(), "tr", "teamName", i);
		fakedAssert(faker.vehicle(), "tr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "tr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "tr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "tr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "tr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "tr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "tr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "tr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "tr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "tr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "tr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "tr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "tr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "tr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_uk;
    auto faker = new Faker_uk(48);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "uk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "uk", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "uk", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "uk", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "uk", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "uk", "animalBear", i);
		fakedAssert(faker.animalBird(), "uk", "animalBird", i);
		fakedAssert(faker.animalCat(), "uk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "uk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "uk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "uk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "uk", "animalDog", i);
		fakedAssert(faker.animalFish(), "uk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "uk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "uk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "uk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "uk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "uk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "uk", "animalSnake", i);
		fakedAssert(faker.animalType(), "uk", "animalType", i);
		fakedAssert(faker.appAuthor(), "uk", "appAuthor", i);
		fakedAssert(faker.appName(), "uk", "appName", i);
		fakedAssert(faker.appVersion(), "uk", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "uk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "uk", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "uk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "uk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "uk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "uk", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "uk", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "uk", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "uk", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "uk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "uk", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "uk", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "uk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "uk", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "uk", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "uk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "uk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "uk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "uk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "uk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "uk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "uk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "uk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "uk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "uk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "uk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "uk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "uk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "uk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "uk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "uk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "uk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "uk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "uk", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "uk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "uk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "uk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "uk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "uk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "uk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "uk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "uk", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "uk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "uk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "uk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "uk", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "uk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "uk", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "uk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "uk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "uk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "uk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "uk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "uk", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "uk", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "uk", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "uk", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "uk", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "uk", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "uk", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "uk", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "uk", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "uk", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "uk", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "uk", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "uk", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "uk", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "uk", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "uk", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "uk", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "uk", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "uk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "uk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "uk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "uk", "loremSentances", i);
		fakedAssert(faker.loremText(), "uk", "loremText", i);
		fakedAssert(faker.loremWords(), "uk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "uk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "uk", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "uk", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "uk", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "uk", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "uk", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "uk", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "uk", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "uk", "personFirstName", i);
		fakedAssert(faker.personGender(), "uk", "personGender", i);
		fakedAssert(faker.personLastName(), "uk", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "uk", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "uk", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "uk", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "uk", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "uk", "personMiddleName", i);
		fakedAssert(faker.personName(), "uk", "personName", i);
		fakedAssert(faker.personSex(), "uk", "personSex", i);
		fakedAssert(faker.personSuffix(), "uk", "personSuffix", i);
		fakedAssert(faker.personTitle(), "uk", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "uk", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "uk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "uk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "uk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "uk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "uk", "teamCreature", i);
		fakedAssert(faker.teamName(), "uk", "teamName", i);
		fakedAssert(faker.vehicle(), "uk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "uk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "uk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "uk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "uk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "uk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "uk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "uk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "uk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "uk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "uk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "uk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "uk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "uk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ur;
    auto faker = new Faker_ur(49);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "ur", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ur", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "ur", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "ur", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "ur", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "ur", "animalBear", i);
		fakedAssert(faker.animalBird(), "ur", "animalBird", i);
		fakedAssert(faker.animalCat(), "ur", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ur", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ur", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ur", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ur", "animalDog", i);
		fakedAssert(faker.animalFish(), "ur", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ur", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ur", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ur", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ur", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ur", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ur", "animalSnake", i);
		fakedAssert(faker.animalType(), "ur", "animalType", i);
		fakedAssert(faker.appAuthor(), "ur", "appAuthor", i);
		fakedAssert(faker.appName(), "ur", "appName", i);
		fakedAssert(faker.appVersion(), "ur", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "ur", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ur", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "ur", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ur", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ur", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ur", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "ur", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "ur", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "ur", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ur", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ur", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "ur", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "ur", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ur", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "ur", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "ur", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ur", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ur", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ur", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ur", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ur", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ur", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ur", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ur", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ur", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ur", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "ur", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ur", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "ur", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ur", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ur", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ur", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ur", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ur", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "ur", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ur", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ur", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ur", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ur", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ur", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ur", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ur", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "ur", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ur", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ur", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ur", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "ur", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ur", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "ur", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ur", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ur", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ur", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ur", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ur", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "ur", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "ur", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "ur", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "ur", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "ur", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "ur", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "ur", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "ur", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "ur", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "ur", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "ur", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "ur", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "ur", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "ur", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "ur", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "ur", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "ur", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "ur", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ur", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ur", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ur", "loremSentances", i);
		fakedAssert(faker.loremText(), "ur", "loremText", i);
		fakedAssert(faker.loremWords(), "ur", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ur", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ur", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "ur", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "ur", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "ur", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "ur", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "ur", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "ur", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "ur", "personFirstName", i);
		fakedAssert(faker.personGender(), "ur", "personGender", i);
		fakedAssert(faker.personLastName(), "ur", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "ur", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "ur", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "ur", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "ur", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "ur", "personMiddleName", i);
		fakedAssert(faker.personName(), "ur", "personName", i);
		fakedAssert(faker.personSex(), "ur", "personSex", i);
		fakedAssert(faker.personSuffix(), "ur", "personSuffix", i);
		fakedAssert(faker.personTitle(), "ur", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "ur", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "ur", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ur", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ur", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ur", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ur", "teamCreature", i);
		fakedAssert(faker.teamName(), "ur", "teamName", i);
		fakedAssert(faker.vehicle(), "ur", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ur", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ur", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ur", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ur", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ur", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ur", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ur", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ur", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ur", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ur", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ur", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ur", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ur", "wordVerb", i);

	}
}

unittest {
	import faked.faker_vi;
    auto faker = new Faker_vi(50);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "vi", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "vi", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "vi", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "vi", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "vi", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "vi", "animalBear", i);
		fakedAssert(faker.animalBird(), "vi", "animalBird", i);
		fakedAssert(faker.animalCat(), "vi", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "vi", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "vi", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "vi", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "vi", "animalDog", i);
		fakedAssert(faker.animalFish(), "vi", "animalFish", i);
		fakedAssert(faker.animalHorse(), "vi", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "vi", "animalInsect", i);
		fakedAssert(faker.animalLion(), "vi", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "vi", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "vi", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "vi", "animalSnake", i);
		fakedAssert(faker.animalType(), "vi", "animalType", i);
		fakedAssert(faker.appAuthor(), "vi", "appAuthor", i);
		fakedAssert(faker.appName(), "vi", "appName", i);
		fakedAssert(faker.appVersion(), "vi", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "vi", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "vi", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "vi", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "vi", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "vi", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "vi", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "vi", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "vi", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "vi", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "vi", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "vi", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "vi", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "vi", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "vi", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "vi", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "vi", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "vi", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "vi", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "vi", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "vi", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "vi", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "vi", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "vi", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "vi", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "vi", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "vi", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "vi", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "vi", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "vi", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "vi", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "vi", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "vi", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "vi", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "vi", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "vi", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "vi", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "vi", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "vi", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "vi", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "vi", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "vi", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "vi", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "vi", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "vi", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "vi", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "vi", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "vi", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "vi", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "vi", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "vi", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "vi", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "vi", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "vi", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "vi", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "vi", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "vi", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "vi", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "vi", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "vi", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "vi", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "vi", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "vi", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "vi", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "vi", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "vi", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "vi", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "vi", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "vi", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "vi", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "vi", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "vi", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "vi", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "vi", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "vi", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "vi", "loremSentances", i);
		fakedAssert(faker.loremText(), "vi", "loremText", i);
		fakedAssert(faker.loremWords(), "vi", "loremWords", i);
		fakedAssert(faker.musicGenre(), "vi", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "vi", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "vi", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "vi", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "vi", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "vi", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "vi", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "vi", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "vi", "personFirstName", i);
		fakedAssert(faker.personGender(), "vi", "personGender", i);
		fakedAssert(faker.personLastName(), "vi", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "vi", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "vi", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "vi", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "vi", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "vi", "personMiddleName", i);
		fakedAssert(faker.personName(), "vi", "personName", i);
		fakedAssert(faker.personSex(), "vi", "personSex", i);
		fakedAssert(faker.personSuffix(), "vi", "personSuffix", i);
		fakedAssert(faker.personTitle(), "vi", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "vi", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "vi", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "vi", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "vi", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "vi", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "vi", "teamCreature", i);
		fakedAssert(faker.teamName(), "vi", "teamName", i);
		fakedAssert(faker.vehicle(), "vi", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "vi", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "vi", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "vi", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "vi", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "vi", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "vi", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "vi", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "vi", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "vi", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "vi", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "vi", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "vi", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "vi", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zh_cn;
    auto faker = new Faker_zh_cn(51);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "zh_CN", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zh_CN", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "zh_CN", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "zh_CN", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "zh_CN", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "zh_CN", "animalBear", i);
		fakedAssert(faker.animalBird(), "zh_CN", "animalBird", i);
		fakedAssert(faker.animalCat(), "zh_CN", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zh_CN", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zh_CN", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zh_CN", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zh_CN", "animalDog", i);
		fakedAssert(faker.animalFish(), "zh_CN", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zh_CN", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zh_CN", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zh_CN", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zh_CN", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zh_CN", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zh_CN", "animalSnake", i);
		fakedAssert(faker.animalType(), "zh_CN", "animalType", i);
		fakedAssert(faker.appAuthor(), "zh_CN", "appAuthor", i);
		fakedAssert(faker.appName(), "zh_CN", "appName", i);
		fakedAssert(faker.appVersion(), "zh_CN", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "zh_CN", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zh_CN", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "zh_CN", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zh_CN", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zh_CN", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zh_CN", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "zh_CN", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "zh_CN", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "zh_CN", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zh_CN", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zh_CN", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "zh_CN", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "zh_CN", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zh_CN", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "zh_CN", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "zh_CN", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zh_CN", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zh_CN", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zh_CN", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zh_CN", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zh_CN", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zh_CN", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zh_CN", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zh_CN", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zh_CN", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zh_CN", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "zh_CN", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zh_CN", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "zh_CN", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zh_CN", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zh_CN", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zh_CN", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zh_CN", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zh_CN", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "zh_CN", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zh_CN", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zh_CN", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zh_CN", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zh_CN", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zh_CN", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zh_CN", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zh_CN", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "zh_CN", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zh_CN", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zh_CN", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zh_CN", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "zh_CN", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zh_CN", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "zh_CN", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zh_CN", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zh_CN", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zh_CN", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zh_CN", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zh_CN", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "zh_CN", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "zh_CN", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "zh_CN", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "zh_CN", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "zh_CN", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "zh_CN", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "zh_CN", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "zh_CN", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "zh_CN", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "zh_CN", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "zh_CN", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "zh_CN", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "zh_CN", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "zh_CN", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "zh_CN", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "zh_CN", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "zh_CN", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "zh_CN", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zh_CN", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zh_CN", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zh_CN", "loremSentances", i);
		fakedAssert(faker.loremText(), "zh_CN", "loremText", i);
		fakedAssert(faker.loremWords(), "zh_CN", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zh_CN", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zh_CN", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "zh_CN", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "zh_CN", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "zh_CN", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "zh_CN", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "zh_CN", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "zh_CN", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "zh_CN", "personFirstName", i);
		fakedAssert(faker.personGender(), "zh_CN", "personGender", i);
		fakedAssert(faker.personLastName(), "zh_CN", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "zh_CN", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "zh_CN", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "zh_CN", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "zh_CN", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "zh_CN", "personMiddleName", i);
		fakedAssert(faker.personName(), "zh_CN", "personName", i);
		fakedAssert(faker.personSex(), "zh_CN", "personSex", i);
		fakedAssert(faker.personSuffix(), "zh_CN", "personSuffix", i);
		fakedAssert(faker.personTitle(), "zh_CN", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "zh_CN", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "zh_CN", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zh_CN", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zh_CN", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zh_CN", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zh_CN", "teamCreature", i);
		fakedAssert(faker.teamName(), "zh_CN", "teamName", i);
		fakedAssert(faker.vehicle(), "zh_CN", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zh_CN", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zh_CN", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zh_CN", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zh_CN", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zh_CN", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zh_CN", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zh_CN", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zh_CN", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zh_CN", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zh_CN", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zh_CN", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zh_CN", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zh_CN", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zh_tw;
    auto faker = new Faker_zh_tw(52);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "zh_TW", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zh_TW", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "zh_TW", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "zh_TW", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "zh_TW", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "zh_TW", "animalBear", i);
		fakedAssert(faker.animalBird(), "zh_TW", "animalBird", i);
		fakedAssert(faker.animalCat(), "zh_TW", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zh_TW", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zh_TW", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zh_TW", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zh_TW", "animalDog", i);
		fakedAssert(faker.animalFish(), "zh_TW", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zh_TW", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zh_TW", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zh_TW", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zh_TW", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zh_TW", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zh_TW", "animalSnake", i);
		fakedAssert(faker.animalType(), "zh_TW", "animalType", i);
		fakedAssert(faker.appAuthor(), "zh_TW", "appAuthor", i);
		fakedAssert(faker.appName(), "zh_TW", "appName", i);
		fakedAssert(faker.appVersion(), "zh_TW", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "zh_TW", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zh_TW", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "zh_TW", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zh_TW", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zh_TW", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zh_TW", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "zh_TW", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "zh_TW", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "zh_TW", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zh_TW", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zh_TW", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "zh_TW", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "zh_TW", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zh_TW", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "zh_TW", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "zh_TW", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zh_TW", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zh_TW", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zh_TW", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zh_TW", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zh_TW", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zh_TW", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zh_TW", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zh_TW", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zh_TW", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zh_TW", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "zh_TW", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zh_TW", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "zh_TW", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zh_TW", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zh_TW", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zh_TW", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zh_TW", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zh_TW", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "zh_TW", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zh_TW", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zh_TW", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zh_TW", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zh_TW", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zh_TW", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zh_TW", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zh_TW", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "zh_TW", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zh_TW", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zh_TW", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zh_TW", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "zh_TW", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zh_TW", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "zh_TW", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zh_TW", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zh_TW", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zh_TW", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zh_TW", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zh_TW", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "zh_TW", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "zh_TW", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "zh_TW", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "zh_TW", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "zh_TW", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "zh_TW", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "zh_TW", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "zh_TW", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "zh_TW", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "zh_TW", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "zh_TW", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "zh_TW", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "zh_TW", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "zh_TW", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "zh_TW", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "zh_TW", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "zh_TW", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "zh_TW", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zh_TW", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zh_TW", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zh_TW", "loremSentances", i);
		fakedAssert(faker.loremText(), "zh_TW", "loremText", i);
		fakedAssert(faker.loremWords(), "zh_TW", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zh_TW", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zh_TW", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "zh_TW", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "zh_TW", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "zh_TW", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "zh_TW", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "zh_TW", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "zh_TW", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "zh_TW", "personFirstName", i);
		fakedAssert(faker.personGender(), "zh_TW", "personGender", i);
		fakedAssert(faker.personLastName(), "zh_TW", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "zh_TW", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "zh_TW", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "zh_TW", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "zh_TW", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "zh_TW", "personMiddleName", i);
		fakedAssert(faker.personName(), "zh_TW", "personName", i);
		fakedAssert(faker.personSex(), "zh_TW", "personSex", i);
		fakedAssert(faker.personSuffix(), "zh_TW", "personSuffix", i);
		fakedAssert(faker.personTitle(), "zh_TW", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "zh_TW", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "zh_TW", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zh_TW", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zh_TW", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zh_TW", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zh_TW", "teamCreature", i);
		fakedAssert(faker.teamName(), "zh_TW", "teamName", i);
		fakedAssert(faker.vehicle(), "zh_TW", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zh_TW", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zh_TW", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zh_TW", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zh_TW", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zh_TW", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zh_TW", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zh_TW", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zh_TW", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zh_TW", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zh_TW", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zh_TW", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zh_TW", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zh_TW", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zu_za;
    auto faker = new Faker_zu_za(53);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "zu_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zu_ZA", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "zu_ZA", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "zu_ZA", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "zu_ZA", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "zu_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "zu_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "zu_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zu_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zu_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zu_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zu_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "zu_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zu_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zu_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zu_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zu_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zu_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zu_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "zu_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "zu_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "zu_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "zu_ZA", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "zu_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zu_ZA", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "zu_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zu_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zu_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zu_ZA", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "zu_ZA", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "zu_ZA", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "zu_ZA", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zu_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zu_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "zu_ZA", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "zu_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zu_ZA", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "zu_ZA", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "zu_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zu_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zu_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zu_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zu_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zu_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zu_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zu_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zu_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zu_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zu_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "zu_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zu_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "zu_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zu_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zu_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zu_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zu_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zu_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "zu_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zu_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zu_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zu_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zu_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zu_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zu_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zu_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "zu_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zu_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zu_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zu_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "zu_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zu_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "zu_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zu_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zu_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zu_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zu_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zu_ZA", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "zu_ZA", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "zu_ZA", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "zu_ZA", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "zu_ZA", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "zu_ZA", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "zu_ZA", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "zu_ZA", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "zu_ZA", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "zu_ZA", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "zu_ZA", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "zu_ZA", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "zu_ZA", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "zu_ZA", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "zu_ZA", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "zu_ZA", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "zu_ZA", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "zu_ZA", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "zu_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zu_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zu_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zu_ZA", "loremSentances", i);
		fakedAssert(faker.loremText(), "zu_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "zu_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zu_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zu_ZA", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "zu_ZA", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "zu_ZA", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "zu_ZA", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "zu_ZA", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "zu_ZA", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "zu_ZA", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "zu_ZA", "personFirstName", i);
		fakedAssert(faker.personGender(), "zu_ZA", "personGender", i);
		fakedAssert(faker.personLastName(), "zu_ZA", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "zu_ZA", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "zu_ZA", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "zu_ZA", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "zu_ZA", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "zu_ZA", "personMiddleName", i);
		fakedAssert(faker.personName(), "zu_ZA", "personName", i);
		fakedAssert(faker.personSex(), "zu_ZA", "personSex", i);
		fakedAssert(faker.personSuffix(), "zu_ZA", "personSuffix", i);
		fakedAssert(faker.personTitle(), "zu_ZA", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "zu_ZA", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "zu_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zu_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zu_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zu_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zu_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "zu_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "zu_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zu_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zu_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zu_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zu_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zu_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zu_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zu_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zu_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zu_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zu_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zu_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zu_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zu_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.base;
    auto faker = new Faker(54);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressLatitude(), "en", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en", "addressLongitude", i);
		fakedAssert(faker.airlineAirline(), "en", "airlineAirline", i);
		fakedAssert(faker.airlineAirplane(), "en", "airlineAirplane", i);
		fakedAssert(faker.airlineAirport(), "en", "airlineAirport", i);
		fakedAssert(faker.animalBear(), "en", "animalBear", i);
		fakedAssert(faker.animalBird(), "en", "animalBird", i);
		fakedAssert(faker.animalCat(), "en", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en", "animalDog", i);
		fakedAssert(faker.animalFish(), "en", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en", "animalSnake", i);
		fakedAssert(faker.animalType(), "en", "animalType", i);
		fakedAssert(faker.appAuthor(), "en", "appAuthor", i);
		fakedAssert(faker.appName(), "en", "appName", i);
		fakedAssert(faker.appVersion(), "en", "appVersion", i);
		fakedAssert(faker.cellPhoneFormats(), "en", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en", "colorHuman", i);
		fakedAssert(faker.commerceDepartment(), "en", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en", "companyBs", i);
		fakedAssert(faker.companyBuzzAdjective(), "en", "companyBuzzAdjective", i);
		fakedAssert(faker.companyBuzzNoun(), "en", "companyBuzzNoun", i);
		fakedAssert(faker.companyBuzzVerb(), "en", "companyBuzzVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en", "companyDescriptor", i);
		fakedAssert(faker.companyNamePattern(), "en", "companyNamePattern", i);
		fakedAssert(faker.companyNoun(), "en", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en", "companySuffix", i);
		fakedAssert(faker.databaseColumn(), "en", "databaseColumn", i);
		fakedAssert(faker.dateMonth(), "en", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardJcb(), "en", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardVisa(), "en", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en", "financeTransactionType", i);
		fakedAssert(faker.hackerAdjective(), "en", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en", "helperHexaDecimal", i);
		fakedAssert(faker.internetColor(), "en", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en", "internetDomainWord", i);
		fakedAssert(faker.internetExampleEmail(), "en", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en", "internetFreeEmail", i);
		fakedAssert(faker.internetIPv4(), "en", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en", "internetUserName", i);
		fakedAssert(faker.locationBuildingNumber(), "en", "locationBuildingNumber", i);
		fakedAssert(faker.locationCityName(), "en", "locationCityName", i);
		fakedAssert(faker.locationCityPattern(), "en", "locationCityPattern", i);
		fakedAssert(faker.locationCityPrefix(), "en", "locationCityPrefix", i);
		fakedAssert(faker.locationCitySuffix(), "en", "locationCitySuffix", i);
		fakedAssert(faker.locationCountry(), "en", "locationCountry", i);
		fakedAssert(faker.locationCounty(), "en", "locationCounty", i);
		fakedAssert(faker.locationDefaultCountry(), "en", "locationDefaultCountry", i);
		fakedAssert(faker.locationDirection(), "en", "locationDirection", i);
		fakedAssert(faker.locationDirectionAbbr(), "en", "locationDirectionAbbr", i);
		fakedAssert(faker.locationPostcode(), "en", "locationPostcode", i);
		fakedAssert(faker.locationSecondaryAddress(), "en", "locationSecondaryAddress", i);
		fakedAssert(faker.locationState(), "en", "locationState", i);
		fakedAssert(faker.locationStateAbbr(), "en", "locationStateAbbr", i);
		fakedAssert(faker.locationStreetAddress(), "en", "locationStreetAddress", i);
		fakedAssert(faker.locationStreetPattern(), "en", "locationStreetPattern", i);
		fakedAssert(faker.locationStreetSuffix(), "en", "locationStreetSuffix", i);
		fakedAssert(faker.loremParagraph(), "en", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en", "loremSentances", i);
		fakedAssert(faker.loremText(), "en", "loremText", i);
		fakedAssert(faker.loremWords(), "en", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en", "musicSongName", i);
		fakedAssert(faker.personBioPart(), "en", "personBioPart", i);
		fakedAssert(faker.personBioPattern(), "en", "personBioPattern", i);
		fakedAssert(faker.personBioSupporter(), "en", "personBioSupporter", i);
		fakedAssert(faker.personFemaleFirstName(), "en", "personFemaleFirstName", i);
		fakedAssert(faker.personFemaleMiddleName(), "en", "personFemaleMiddleName", i);
		fakedAssert(faker.personFemalePrefix(), "en", "personFemalePrefix", i);
		fakedAssert(faker.personFirstName(), "en", "personFirstName", i);
		fakedAssert(faker.personGender(), "en", "personGender", i);
		fakedAssert(faker.personLastName(), "en", "personLastName", i);
		fakedAssert(faker.personLastNamePattern(), "en", "personLastNamePattern", i);
		fakedAssert(faker.personMaleFirstName(), "en", "personMaleFirstName", i);
		fakedAssert(faker.personMaleMiddleName(), "en", "personMaleMiddleName", i);
		fakedAssert(faker.personMalePrefix(), "en", "personMalePrefix", i);
		fakedAssert(faker.personMiddleName(), "en", "personMiddleName", i);
		fakedAssert(faker.personName(), "en", "personName", i);
		fakedAssert(faker.personSex(), "en", "personSex", i);
		fakedAssert(faker.personSuffix(), "en", "personSuffix", i);
		fakedAssert(faker.personTitle(), "en", "personTitle", i);
		fakedAssert(faker.personWesternZodiacSign(), "en", "personWesternZodiacSign", i);
		fakedAssert(faker.phoneNumber(), "en", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en", "teamCreature", i);
		fakedAssert(faker.teamName(), "en", "teamName", i);
		fakedAssert(faker.vehicle(), "en", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en", "wordVerb", i);

	}
}

