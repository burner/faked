// generated by fakerjsgenerator
module faked.test;

import std.array : empty;
import std.stdio;
import std.format : format;


struct ToIgnore {
	string lang;
	string[] methods;
}

const allowedToFail =
	[ ToIgnore("az"
		, ["addressState", "companySuffix", "namePrefix", "nameSuffix"])
	, ToIgnore("cz" , ["addressState", "addressStateAbbr"])
	, ToIgnore("id_ID", ["namePrefix"])
	, ToIgnore("it", ["nameSuffix"])
	, ToIgnore("mk", ["nameSuffix"])
	, ToIgnore("pt_BR", ["addressCityPrefix"])
	, ToIgnore("pt_PT", ["addressCityPrefix", "addressCitySuffix", "nameSuffix"])
	, ToIgnore("ru", ["nameSuffix", "namePrefix"])
	, ToIgnore("sk", ["addressState", "addressStateAbbr"])
	];

void fakedAssert(D)(D fakeData, const string lang, const string method, const long round) {
	foreach(ref l; allowedToFail) {
		if(l.lang == lang) {
			foreach(m; l.methods) {
				if(m == method) {
					if(fakeData.empty) {
						//writefln("%5s %20s %3d gives no data as expected", lang, method, round);
						return;
					} else {
						assert(false, format("%5s %20s %3d was expected to give no data", lang, method, round));
					}
				}
			}
		}
	}
	assert(!fakeData.empty, format("%5s %20s %3d failed to give data", lang
				, method, round));
}

unittest {
	import faked.faker_af_za;
    auto faker = new Faker_af_za(1);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "af_ZA", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "af_ZA", "addressCity", i);
		fakedAssert(faker.addressCityName(), "af_ZA", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "af_ZA", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "af_ZA", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "af_ZA", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "af_ZA", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "af_ZA", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "af_ZA", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "af_ZA", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "af_ZA", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "af_ZA", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "af_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "af_ZA", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "af_ZA", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "af_ZA", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "af_ZA", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "af_ZA", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "af_ZA", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "af_ZA", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "af_ZA", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "af_ZA", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "af_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "af_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "af_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "af_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "af_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "af_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "af_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "af_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "af_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "af_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "af_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "af_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "af_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "af_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "af_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "af_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "af_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "af_ZA", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "af_ZA", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "af_ZA", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "af_ZA", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "af_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "af_ZA", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "af_ZA", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "af_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "af_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "af_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "af_ZA", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "af_ZA", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "af_ZA", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "af_ZA", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "af_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "af_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "af_ZA", "companyName", i);
		fakedAssert(faker.companyNoun(), "af_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "af_ZA", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "af_ZA", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "af_ZA", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "af_ZA", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "af_ZA", "databaseType", i);
		fakedAssert(faker.dateMonth(), "af_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "af_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "af_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "af_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "af_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "af_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "af_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "af_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "af_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "af_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "af_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "af_ZA", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "af_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "af_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "af_ZA", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "af_ZA", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "af_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "af_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "af_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "af_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "af_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "af_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "af_ZA", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "af_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "af_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "af_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "af_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "af_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "af_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "af_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "af_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "af_ZA", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "af_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "af_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "af_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "af_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "af_ZA", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "af_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "af_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "af_ZA", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "af_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "af_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "af_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "af_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "af_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "af_ZA", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "af_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "af_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "af_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "af_ZA", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "af_ZA", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "af_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "af_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "af_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "af_ZA", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "af_ZA", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "af_ZA", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "af_ZA", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "af_ZA", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "af_ZA", "nameGender", i);
		fakedAssert(faker.nameLastName(), "af_ZA", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "af_ZA", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "af_ZA", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "af_ZA", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "af_ZA", "nameName", i);
		fakedAssert(faker.namePrefix(), "af_ZA", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "af_ZA", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "af_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "af_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "af_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "af_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "af_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "af_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "af_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "af_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "af_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "af_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "af_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "af_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "af_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "af_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "af_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "af_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "af_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "af_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "af_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "af_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ar;
    auto faker = new Faker_ar(2);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ar", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ar", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ar", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ar", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ar", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ar", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ar", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ar", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ar", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ar", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ar", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ar", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ar", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ar", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ar", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ar", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ar", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ar", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ar", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ar", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ar", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ar", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ar", "animalBear", i);
		fakedAssert(faker.animalBird(), "ar", "animalBird", i);
		fakedAssert(faker.animalCat(), "ar", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ar", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ar", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ar", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ar", "animalDog", i);
		fakedAssert(faker.animalFish(), "ar", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ar", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ar", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ar", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ar", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ar", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ar", "animalSnake", i);
		fakedAssert(faker.animalType(), "ar", "animalType", i);
		fakedAssert(faker.appAuthor(), "ar", "appAuthor", i);
		fakedAssert(faker.appName(), "ar", "appName", i);
		fakedAssert(faker.appVersion(), "ar", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ar", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ar", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ar", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ar", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ar", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ar", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ar", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ar", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ar", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ar", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ar", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ar", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ar", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ar", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ar", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ar", "companyName", i);
		fakedAssert(faker.companyNoun(), "ar", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ar", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ar", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ar", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ar", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ar", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ar", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ar", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ar", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ar", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ar", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ar", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ar", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ar", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ar", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ar", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ar", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ar", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ar", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ar", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ar", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ar", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ar", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ar", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ar", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ar", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ar", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ar", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ar", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ar", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ar", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ar", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ar", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ar", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ar", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ar", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ar", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ar", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ar", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ar", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ar", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ar", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ar", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ar", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ar", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ar", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ar", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ar", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ar", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ar", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ar", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ar", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ar", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ar", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ar", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ar", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ar", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ar", "loremText", i);
		fakedAssert(faker.loremWords(), "ar", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ar", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ar", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ar", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ar", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ar", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ar", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ar", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ar", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ar", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ar", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ar", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ar", "nameName", i);
		fakedAssert(faker.namePrefix(), "ar", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ar", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ar", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ar", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ar", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ar", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ar", "teamCreature", i);
		fakedAssert(faker.teamName(), "ar", "teamName", i);
		fakedAssert(faker.vehicle(), "ar", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ar", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ar", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ar", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ar", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ar", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ar", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ar", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ar", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ar", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ar", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ar", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ar", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ar", "wordVerb", i);

	}
}

unittest {
	import faked.faker_az;
    auto faker = new Faker_az(3);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "az", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "az", "addressCity", i);
		fakedAssert(faker.addressCityName(), "az", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "az", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "az", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "az", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "az", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "az", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "az", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "az", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "az", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "az", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "az", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "az", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "az", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "az", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "az", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "az", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "az", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "az", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "az", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "az", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "az", "animalBear", i);
		fakedAssert(faker.animalBird(), "az", "animalBird", i);
		fakedAssert(faker.animalCat(), "az", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "az", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "az", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "az", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "az", "animalDog", i);
		fakedAssert(faker.animalFish(), "az", "animalFish", i);
		fakedAssert(faker.animalHorse(), "az", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "az", "animalInsect", i);
		fakedAssert(faker.animalLion(), "az", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "az", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "az", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "az", "animalSnake", i);
		fakedAssert(faker.animalType(), "az", "animalType", i);
		fakedAssert(faker.appAuthor(), "az", "appAuthor", i);
		fakedAssert(faker.appName(), "az", "appName", i);
		fakedAssert(faker.appVersion(), "az", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "az", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "az", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "az", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "az", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "az", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "az", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "az", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "az", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "az", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "az", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "az", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "az", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "az", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "az", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "az", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "az", "companyName", i);
		fakedAssert(faker.companyNoun(), "az", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "az", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "az", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "az", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "az", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "az", "databaseType", i);
		fakedAssert(faker.dateMonth(), "az", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "az", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "az", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "az", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "az", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "az", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "az", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "az", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "az", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "az", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "az", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "az", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "az", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "az", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "az", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "az", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "az", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "az", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "az", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "az", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "az", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "az", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "az", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "az", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "az", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "az", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "az", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "az", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "az", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "az", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "az", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "az", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "az", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "az", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "az", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "az", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "az", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "az", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "az", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "az", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "az", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "az", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "az", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "az", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "az", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "az", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "az", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "az", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "az", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "az", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "az", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "az", "loremText", i);
		fakedAssert(faker.loremWords(), "az", "loremWords", i);
		fakedAssert(faker.musicGenre(), "az", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "az", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "az", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "az", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "az", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "az", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "az", "nameGender", i);
		fakedAssert(faker.nameLastName(), "az", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "az", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "az", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "az", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "az", "nameName", i);
		fakedAssert(faker.namePrefix(), "az", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "az", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "az", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "az", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "az", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "az", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "az", "teamCreature", i);
		fakedAssert(faker.teamName(), "az", "teamName", i);
		fakedAssert(faker.vehicle(), "az", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "az", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "az", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "az", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "az", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "az", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "az", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "az", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "az", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "az", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "az", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "az", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "az", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "az", "wordVerb", i);

	}
}

unittest {
	import faked.faker_cz;
    auto faker = new Faker_cz(4);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "cz", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "cz", "addressCity", i);
		fakedAssert(faker.addressCityName(), "cz", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "cz", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "cz", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "cz", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "cz", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "cz", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "cz", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "cz", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "cz", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "cz", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "cz", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "cz", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "cz", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "cz", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "cz", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "cz", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "cz", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "cz", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "cz", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "cz", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "cz", "animalBear", i);
		fakedAssert(faker.animalBird(), "cz", "animalBird", i);
		fakedAssert(faker.animalCat(), "cz", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "cz", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "cz", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "cz", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "cz", "animalDog", i);
		fakedAssert(faker.animalFish(), "cz", "animalFish", i);
		fakedAssert(faker.animalHorse(), "cz", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "cz", "animalInsect", i);
		fakedAssert(faker.animalLion(), "cz", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "cz", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "cz", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "cz", "animalSnake", i);
		fakedAssert(faker.animalType(), "cz", "animalType", i);
		fakedAssert(faker.appAuthor(), "cz", "appAuthor", i);
		fakedAssert(faker.appName(), "cz", "appName", i);
		fakedAssert(faker.appVersion(), "cz", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "cz", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "cz", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "cz", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "cz", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "cz", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "cz", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "cz", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "cz", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "cz", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "cz", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "cz", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "cz", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "cz", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "cz", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "cz", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "cz", "companyName", i);
		fakedAssert(faker.companyNoun(), "cz", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "cz", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "cz", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "cz", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "cz", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "cz", "databaseType", i);
		fakedAssert(faker.dateMonth(), "cz", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "cz", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "cz", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "cz", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "cz", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "cz", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "cz", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "cz", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "cz", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "cz", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "cz", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "cz", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "cz", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "cz", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "cz", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "cz", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "cz", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "cz", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "cz", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "cz", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "cz", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "cz", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "cz", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "cz", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "cz", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "cz", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "cz", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "cz", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "cz", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "cz", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "cz", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "cz", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "cz", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "cz", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "cz", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "cz", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "cz", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "cz", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "cz", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "cz", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "cz", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "cz", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "cz", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "cz", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "cz", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "cz", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "cz", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "cz", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "cz", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "cz", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "cz", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "cz", "loremText", i);
		fakedAssert(faker.loremWords(), "cz", "loremWords", i);
		fakedAssert(faker.musicGenre(), "cz", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "cz", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "cz", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "cz", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "cz", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "cz", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "cz", "nameGender", i);
		fakedAssert(faker.nameLastName(), "cz", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "cz", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "cz", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "cz", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "cz", "nameName", i);
		fakedAssert(faker.namePrefix(), "cz", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "cz", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "cz", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "cz", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "cz", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "cz", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "cz", "teamCreature", i);
		fakedAssert(faker.teamName(), "cz", "teamName", i);
		fakedAssert(faker.vehicle(), "cz", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "cz", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "cz", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "cz", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "cz", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "cz", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "cz", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "cz", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "cz", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "cz", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "cz", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "cz", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "cz", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "cz", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de;
    auto faker = new Faker_de(5);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "de", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "de", "addressCity", i);
		fakedAssert(faker.addressCityName(), "de", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "de", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "de", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "de", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "de", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "de", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "de", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "de", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "de", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "de", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "de", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "de", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "de", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "de", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "de", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "de", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "de", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "de", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "de", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "de", "animalBear", i);
		fakedAssert(faker.animalBird(), "de", "animalBird", i);
		fakedAssert(faker.animalCat(), "de", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de", "animalDog", i);
		fakedAssert(faker.animalFish(), "de", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de", "animalSnake", i);
		fakedAssert(faker.animalType(), "de", "animalType", i);
		fakedAssert(faker.appAuthor(), "de", "appAuthor", i);
		fakedAssert(faker.appName(), "de", "appName", i);
		fakedAssert(faker.appVersion(), "de", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "de", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "de", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "de", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "de", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "de", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "de", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "de", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "de", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "de", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "de", "companyName", i);
		fakedAssert(faker.companyNoun(), "de", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "de", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "de", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "de", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "de", "databaseType", i);
		fakedAssert(faker.dateMonth(), "de", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "de", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "de", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "de", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "de", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "de", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "de", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "de", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "de", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "de", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "de", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "de", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "de", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "de", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "de", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "de", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "de", "loremText", i);
		fakedAssert(faker.loremWords(), "de", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "de", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "de", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "de", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "de", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "de", "nameGender", i);
		fakedAssert(faker.nameLastName(), "de", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "de", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "de", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "de", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "de", "nameName", i);
		fakedAssert(faker.namePrefix(), "de", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "de", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "de", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de", "teamCreature", i);
		fakedAssert(faker.teamName(), "de", "teamName", i);
		fakedAssert(faker.vehicle(), "de", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de_at;
    auto faker = new Faker_de_at(6);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "de_AT", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "de_AT", "addressCity", i);
		fakedAssert(faker.addressCityName(), "de_AT", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "de_AT", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "de_AT", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "de_AT", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "de_AT", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "de_AT", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "de_AT", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "de_AT", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "de_AT", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "de_AT", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "de_AT", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de_AT", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "de_AT", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "de_AT", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "de_AT", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "de_AT", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "de_AT", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "de_AT", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "de_AT", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "de_AT", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "de_AT", "animalBear", i);
		fakedAssert(faker.animalBird(), "de_AT", "animalBird", i);
		fakedAssert(faker.animalCat(), "de_AT", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de_AT", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de_AT", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de_AT", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de_AT", "animalDog", i);
		fakedAssert(faker.animalFish(), "de_AT", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de_AT", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de_AT", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de_AT", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de_AT", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de_AT", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de_AT", "animalSnake", i);
		fakedAssert(faker.animalType(), "de_AT", "animalType", i);
		fakedAssert(faker.appAuthor(), "de_AT", "appAuthor", i);
		fakedAssert(faker.appName(), "de_AT", "appName", i);
		fakedAssert(faker.appVersion(), "de_AT", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "de_AT", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "de_AT", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "de_AT", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "de_AT", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de_AT", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "de_AT", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "de_AT", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de_AT", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de_AT", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de_AT", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "de_AT", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "de_AT", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "de_AT", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de_AT", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de_AT", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "de_AT", "companyName", i);
		fakedAssert(faker.companyNoun(), "de_AT", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de_AT", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "de_AT", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "de_AT", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "de_AT", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "de_AT", "databaseType", i);
		fakedAssert(faker.dateMonth(), "de_AT", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de_AT", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de_AT", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de_AT", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de_AT", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de_AT", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de_AT", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de_AT", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de_AT", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de_AT", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de_AT", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "de_AT", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "de_AT", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de_AT", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "de_AT", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "de_AT", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "de_AT", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de_AT", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de_AT", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de_AT", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de_AT", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de_AT", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "de_AT", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "de_AT", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de_AT", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de_AT", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de_AT", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de_AT", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de_AT", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de_AT", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de_AT", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "de_AT", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "de_AT", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de_AT", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de_AT", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de_AT", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "de_AT", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "de_AT", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de_AT", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "de_AT", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "de_AT", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de_AT", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de_AT", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de_AT", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de_AT", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de_AT", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "de_AT", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de_AT", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de_AT", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de_AT", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "de_AT", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "de_AT", "loremText", i);
		fakedAssert(faker.loremWords(), "de_AT", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de_AT", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de_AT", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "de_AT", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "de_AT", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "de_AT", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "de_AT", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "de_AT", "nameGender", i);
		fakedAssert(faker.nameLastName(), "de_AT", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "de_AT", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "de_AT", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "de_AT", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "de_AT", "nameName", i);
		fakedAssert(faker.namePrefix(), "de_AT", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "de_AT", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "de_AT", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de_AT", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de_AT", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de_AT", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de_AT", "teamCreature", i);
		fakedAssert(faker.teamName(), "de_AT", "teamName", i);
		fakedAssert(faker.vehicle(), "de_AT", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de_AT", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de_AT", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de_AT", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de_AT", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de_AT", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de_AT", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de_AT", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de_AT", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de_AT", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de_AT", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de_AT", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de_AT", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de_AT", "wordVerb", i);

	}
}

unittest {
	import faked.faker_de_ch;
    auto faker = new Faker_de_ch(7);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "de_CH", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "de_CH", "addressCity", i);
		fakedAssert(faker.addressCityName(), "de_CH", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "de_CH", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "de_CH", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "de_CH", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "de_CH", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "de_CH", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "de_CH", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "de_CH", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "de_CH", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "de_CH", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "de_CH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "de_CH", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "de_CH", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "de_CH", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "de_CH", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "de_CH", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "de_CH", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "de_CH", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "de_CH", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "de_CH", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "de_CH", "animalBear", i);
		fakedAssert(faker.animalBird(), "de_CH", "animalBird", i);
		fakedAssert(faker.animalCat(), "de_CH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "de_CH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "de_CH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "de_CH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "de_CH", "animalDog", i);
		fakedAssert(faker.animalFish(), "de_CH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "de_CH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "de_CH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "de_CH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "de_CH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "de_CH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "de_CH", "animalSnake", i);
		fakedAssert(faker.animalType(), "de_CH", "animalType", i);
		fakedAssert(faker.appAuthor(), "de_CH", "appAuthor", i);
		fakedAssert(faker.appName(), "de_CH", "appName", i);
		fakedAssert(faker.appVersion(), "de_CH", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "de_CH", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "de_CH", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "de_CH", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "de_CH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "de_CH", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "de_CH", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "de_CH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "de_CH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "de_CH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "de_CH", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "de_CH", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "de_CH", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "de_CH", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "de_CH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "de_CH", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "de_CH", "companyName", i);
		fakedAssert(faker.companyNoun(), "de_CH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "de_CH", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "de_CH", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "de_CH", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "de_CH", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "de_CH", "databaseType", i);
		fakedAssert(faker.dateMonth(), "de_CH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "de_CH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "de_CH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "de_CH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "de_CH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "de_CH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "de_CH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "de_CH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "de_CH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "de_CH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "de_CH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "de_CH", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "de_CH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "de_CH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "de_CH", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "de_CH", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "de_CH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "de_CH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "de_CH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "de_CH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "de_CH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "de_CH", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "de_CH", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "de_CH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "de_CH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "de_CH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "de_CH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "de_CH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "de_CH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "de_CH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "de_CH", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "de_CH", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "de_CH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "de_CH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "de_CH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "de_CH", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "de_CH", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "de_CH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "de_CH", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "de_CH", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "de_CH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "de_CH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "de_CH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "de_CH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "de_CH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "de_CH", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "de_CH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "de_CH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "de_CH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "de_CH", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "de_CH", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "de_CH", "loremText", i);
		fakedAssert(faker.loremWords(), "de_CH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "de_CH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "de_CH", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "de_CH", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "de_CH", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "de_CH", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "de_CH", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "de_CH", "nameGender", i);
		fakedAssert(faker.nameLastName(), "de_CH", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "de_CH", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "de_CH", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "de_CH", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "de_CH", "nameName", i);
		fakedAssert(faker.namePrefix(), "de_CH", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "de_CH", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "de_CH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "de_CH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "de_CH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "de_CH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "de_CH", "teamCreature", i);
		fakedAssert(faker.teamName(), "de_CH", "teamName", i);
		fakedAssert(faker.vehicle(), "de_CH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "de_CH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "de_CH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "de_CH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "de_CH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "de_CH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "de_CH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "de_CH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "de_CH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "de_CH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "de_CH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "de_CH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "de_CH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "de_CH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_el;
    auto faker = new Faker_el(8);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "el", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "el", "addressCity", i);
		fakedAssert(faker.addressCityName(), "el", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "el", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "el", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "el", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "el", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "el", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "el", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "el", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "el", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "el", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "el", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "el", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "el", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "el", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "el", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "el", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "el", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "el", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "el", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "el", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "el", "animalBear", i);
		fakedAssert(faker.animalBird(), "el", "animalBird", i);
		fakedAssert(faker.animalCat(), "el", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "el", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "el", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "el", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "el", "animalDog", i);
		fakedAssert(faker.animalFish(), "el", "animalFish", i);
		fakedAssert(faker.animalHorse(), "el", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "el", "animalInsect", i);
		fakedAssert(faker.animalLion(), "el", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "el", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "el", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "el", "animalSnake", i);
		fakedAssert(faker.animalType(), "el", "animalType", i);
		fakedAssert(faker.appAuthor(), "el", "appAuthor", i);
		fakedAssert(faker.appName(), "el", "appName", i);
		fakedAssert(faker.appVersion(), "el", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "el", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "el", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "el", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "el", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "el", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "el", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "el", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "el", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "el", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "el", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "el", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "el", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "el", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "el", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "el", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "el", "companyName", i);
		fakedAssert(faker.companyNoun(), "el", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "el", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "el", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "el", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "el", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "el", "databaseType", i);
		fakedAssert(faker.dateMonth(), "el", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "el", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "el", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "el", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "el", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "el", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "el", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "el", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "el", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "el", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "el", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "el", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "el", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "el", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "el", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "el", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "el", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "el", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "el", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "el", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "el", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "el", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "el", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "el", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "el", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "el", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "el", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "el", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "el", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "el", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "el", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "el", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "el", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "el", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "el", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "el", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "el", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "el", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "el", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "el", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "el", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "el", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "el", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "el", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "el", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "el", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "el", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "el", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "el", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "el", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "el", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "el", "loremText", i);
		fakedAssert(faker.loremWords(), "el", "loremWords", i);
		fakedAssert(faker.musicGenre(), "el", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "el", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "el", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "el", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "el", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "el", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "el", "nameGender", i);
		fakedAssert(faker.nameLastName(), "el", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "el", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "el", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "el", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "el", "nameName", i);
		fakedAssert(faker.namePrefix(), "el", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "el", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "el", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "el", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "el", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "el", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "el", "teamCreature", i);
		fakedAssert(faker.teamName(), "el", "teamName", i);
		fakedAssert(faker.vehicle(), "el", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "el", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "el", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "el", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "el", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "el", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "el", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "el", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "el", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "el", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "el", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "el", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "el", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "el", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_au;
    auto faker = new Faker_en_au(9);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_AU", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_AU", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_AU", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_AU", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_AU", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_AU", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_AU", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_AU", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_AU", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_AU", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_AU", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_AU", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_AU", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_AU", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_AU", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_AU", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_AU", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_AU", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_AU", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_AU", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_AU", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_AU", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_AU", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_AU", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_AU", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_AU", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_AU", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_AU", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_AU", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_AU", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_AU", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_AU", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_AU", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_AU", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_AU", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_AU", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_AU", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_AU", "appAuthor", i);
		fakedAssert(faker.appName(), "en_AU", "appName", i);
		fakedAssert(faker.appVersion(), "en_AU", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_AU", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_AU", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_AU", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_AU", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_AU", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_AU", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_AU", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_AU", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_AU", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_AU", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_AU", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_AU", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_AU", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_AU", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_AU", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_AU", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_AU", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_AU", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_AU", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_AU", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_AU", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_AU", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_AU", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_AU", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_AU", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_AU", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_AU", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_AU", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_AU", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_AU", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_AU", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_AU", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_AU", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_AU", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_AU", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_AU", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_AU", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_AU", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_AU", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_AU", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_AU", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_AU", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_AU", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_AU", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_AU", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_AU", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_AU", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_AU", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_AU", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_AU", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_AU", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_AU", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_AU", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_AU", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_AU", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_AU", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_AU", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_AU", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_AU", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_AU", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_AU", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_AU", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_AU", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_AU", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_AU", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_AU", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_AU", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_AU", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_AU", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_AU", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_AU", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_AU", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_AU", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_AU", "loremText", i);
		fakedAssert(faker.loremWords(), "en_AU", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_AU", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_AU", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_AU", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_AU", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_AU", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_AU", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_AU", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_AU", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_AU", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_AU", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_AU", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_AU", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_AU", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_AU", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_AU", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_AU", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_AU", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_AU", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_AU", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_AU", "teamName", i);
		fakedAssert(faker.vehicle(), "en_AU", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_AU", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_AU", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_AU", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_AU", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_AU", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_AU", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_AU", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_AU", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_AU", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_AU", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_AU", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_AU", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_AU", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_au_ocker;
    auto faker = new Faker_en_au_ocker(10);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_AU_ocker", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_AU_ocker", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_AU_ocker", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_AU_ocker", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_AU_ocker", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_AU_ocker", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_AU_ocker", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_AU_ocker", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_AU_ocker", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_AU_ocker", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_AU_ocker", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_AU_ocker", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_AU_ocker", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_AU_ocker", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_AU_ocker", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_AU_ocker", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_AU_ocker", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_AU_ocker", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_AU_ocker", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_AU_ocker", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_AU_ocker", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_AU_ocker", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_AU_ocker", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_AU_ocker", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_AU_ocker", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_AU_ocker", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_AU_ocker", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_AU_ocker", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_AU_ocker", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_AU_ocker", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_AU_ocker", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_AU_ocker", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_AU_ocker", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_AU_ocker", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_AU_ocker", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_AU_ocker", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_AU_ocker", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_AU_ocker", "appAuthor", i);
		fakedAssert(faker.appName(), "en_AU_ocker", "appName", i);
		fakedAssert(faker.appVersion(), "en_AU_ocker", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_AU_ocker", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_AU_ocker", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_AU_ocker", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_AU_ocker", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_AU_ocker", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_AU_ocker", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_AU_ocker", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_AU_ocker", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_AU_ocker", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_AU_ocker", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_AU_ocker", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_AU_ocker", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_AU_ocker", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_AU_ocker", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_AU_ocker", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_AU_ocker", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_AU_ocker", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_AU_ocker", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_AU_ocker", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_AU_ocker", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_AU_ocker", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_AU_ocker", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_AU_ocker", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_AU_ocker", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_AU_ocker", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_AU_ocker", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_AU_ocker", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_AU_ocker", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_AU_ocker", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_AU_ocker", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_AU_ocker", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_AU_ocker", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_AU_ocker", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_AU_ocker", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_AU_ocker", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_AU_ocker", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_AU_ocker", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_AU_ocker", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_AU_ocker", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_AU_ocker", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_AU_ocker", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_AU_ocker", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_AU_ocker", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_AU_ocker", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_AU_ocker", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_AU_ocker", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_AU_ocker", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_AU_ocker", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_AU_ocker", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_AU_ocker", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_AU_ocker", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_AU_ocker", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_AU_ocker", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_AU_ocker", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_AU_ocker", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_AU_ocker", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_AU_ocker", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_AU_ocker", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_AU_ocker", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_AU_ocker", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_AU_ocker", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_AU_ocker", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_AU_ocker", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_AU_ocker", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_AU_ocker", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_AU_ocker", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_AU_ocker", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_AU_ocker", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_AU_ocker", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_AU_ocker", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_AU_ocker", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_AU_ocker", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_AU_ocker", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_AU_ocker", "loremText", i);
		fakedAssert(faker.loremWords(), "en_AU_ocker", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_AU_ocker", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_AU_ocker", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_AU_ocker", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_AU_ocker", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_AU_ocker", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_AU_ocker", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_AU_ocker", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_AU_ocker", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_AU_ocker", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_AU_ocker", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_AU_ocker", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_AU_ocker", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_AU_ocker", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_AU_ocker", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_AU_ocker", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_AU_ocker", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_AU_ocker", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_AU_ocker", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_AU_ocker", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_AU_ocker", "teamName", i);
		fakedAssert(faker.vehicle(), "en_AU_ocker", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_AU_ocker", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_AU_ocker", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_AU_ocker", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_AU_ocker", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_AU_ocker", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_AU_ocker", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_AU_ocker", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_AU_ocker", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_AU_ocker", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_AU_ocker", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_AU_ocker", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_AU_ocker", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_AU_ocker", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_bork;
    auto faker = new Faker_en_bork(11);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_BORK", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_BORK", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_BORK", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_BORK", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_BORK", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_BORK", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_BORK", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_BORK", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_BORK", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_BORK", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_BORK", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_BORK", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_BORK", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_BORK", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_BORK", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_BORK", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_BORK", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_BORK", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_BORK", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_BORK", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_BORK", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_BORK", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_BORK", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_BORK", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_BORK", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_BORK", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_BORK", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_BORK", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_BORK", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_BORK", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_BORK", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_BORK", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_BORK", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_BORK", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_BORK", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_BORK", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_BORK", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_BORK", "appAuthor", i);
		fakedAssert(faker.appName(), "en_BORK", "appName", i);
		fakedAssert(faker.appVersion(), "en_BORK", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_BORK", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_BORK", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_BORK", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_BORK", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_BORK", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_BORK", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_BORK", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_BORK", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_BORK", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_BORK", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_BORK", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_BORK", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_BORK", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_BORK", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_BORK", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_BORK", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_BORK", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_BORK", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_BORK", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_BORK", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_BORK", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_BORK", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_BORK", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_BORK", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_BORK", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_BORK", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_BORK", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_BORK", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_BORK", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_BORK", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_BORK", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_BORK", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_BORK", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_BORK", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_BORK", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_BORK", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_BORK", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_BORK", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_BORK", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_BORK", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_BORK", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_BORK", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_BORK", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_BORK", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_BORK", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_BORK", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_BORK", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_BORK", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_BORK", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_BORK", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_BORK", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_BORK", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_BORK", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_BORK", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_BORK", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_BORK", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_BORK", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_BORK", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_BORK", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_BORK", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_BORK", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_BORK", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_BORK", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_BORK", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_BORK", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_BORK", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_BORK", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_BORK", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_BORK", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_BORK", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_BORK", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_BORK", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_BORK", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_BORK", "loremText", i);
		fakedAssert(faker.loremWords(), "en_BORK", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_BORK", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_BORK", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_BORK", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_BORK", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_BORK", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_BORK", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_BORK", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_BORK", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_BORK", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_BORK", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_BORK", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_BORK", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_BORK", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_BORK", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_BORK", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_BORK", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_BORK", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_BORK", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_BORK", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_BORK", "teamName", i);
		fakedAssert(faker.vehicle(), "en_BORK", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_BORK", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_BORK", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_BORK", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_BORK", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_BORK", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_BORK", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_BORK", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_BORK", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_BORK", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_BORK", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_BORK", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_BORK", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_BORK", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ca;
    auto faker = new Faker_en_ca(12);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_CA", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_CA", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_CA", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_CA", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_CA", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_CA", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_CA", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_CA", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_CA", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_CA", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_CA", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_CA", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_CA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_CA", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_CA", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_CA", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_CA", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_CA", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_CA", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_CA", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_CA", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_CA", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_CA", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_CA", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_CA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_CA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_CA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_CA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_CA", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_CA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_CA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_CA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_CA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_CA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_CA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_CA", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_CA", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_CA", "appAuthor", i);
		fakedAssert(faker.appName(), "en_CA", "appName", i);
		fakedAssert(faker.appVersion(), "en_CA", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_CA", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_CA", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_CA", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_CA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_CA", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_CA", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_CA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_CA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_CA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_CA", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_CA", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_CA", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_CA", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_CA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_CA", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_CA", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_CA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_CA", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_CA", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_CA", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_CA", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_CA", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_CA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_CA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_CA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_CA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_CA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_CA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_CA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_CA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_CA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_CA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_CA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_CA", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_CA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_CA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_CA", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_CA", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_CA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_CA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_CA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_CA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_CA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_CA", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_CA", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_CA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_CA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_CA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_CA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_CA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_CA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_CA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_CA", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_CA", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_CA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_CA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_CA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_CA", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_CA", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_CA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_CA", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_CA", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_CA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_CA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_CA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_CA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_CA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_CA", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_CA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_CA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_CA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_CA", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_CA", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_CA", "loremText", i);
		fakedAssert(faker.loremWords(), "en_CA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_CA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_CA", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_CA", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_CA", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_CA", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_CA", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_CA", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_CA", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_CA", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_CA", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_CA", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_CA", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_CA", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_CA", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_CA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_CA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_CA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_CA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_CA", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_CA", "teamName", i);
		fakedAssert(faker.vehicle(), "en_CA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_CA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_CA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_CA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_CA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_CA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_CA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_CA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_CA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_CA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_CA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_CA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_CA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_CA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_gb;
    auto faker = new Faker_en_gb(13);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_GB", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_GB", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_GB", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_GB", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_GB", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_GB", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_GB", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_GB", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_GB", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_GB", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_GB", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_GB", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_GB", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_GB", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_GB", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_GB", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_GB", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_GB", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_GB", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_GB", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_GB", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_GB", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_GB", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_GB", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_GB", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_GB", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_GB", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_GB", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_GB", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_GB", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_GB", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_GB", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_GB", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_GB", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_GB", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_GB", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_GB", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_GB", "appAuthor", i);
		fakedAssert(faker.appName(), "en_GB", "appName", i);
		fakedAssert(faker.appVersion(), "en_GB", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_GB", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_GB", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_GB", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_GB", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_GB", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_GB", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_GB", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_GB", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_GB", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_GB", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_GB", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_GB", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_GB", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_GB", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_GB", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_GB", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_GB", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_GB", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_GB", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_GB", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_GB", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_GB", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_GB", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_GB", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_GB", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_GB", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_GB", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_GB", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_GB", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_GB", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_GB", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_GB", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_GB", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_GB", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_GB", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_GB", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_GB", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_GB", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_GB", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_GB", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_GB", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_GB", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_GB", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_GB", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_GB", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_GB", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_GB", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_GB", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_GB", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_GB", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_GB", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_GB", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_GB", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_GB", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_GB", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_GB", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_GB", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_GB", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_GB", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_GB", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_GB", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_GB", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_GB", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_GB", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_GB", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_GB", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_GB", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_GB", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_GB", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_GB", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_GB", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_GB", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_GB", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_GB", "loremText", i);
		fakedAssert(faker.loremWords(), "en_GB", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_GB", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_GB", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_GB", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_GB", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_GB", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_GB", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_GB", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_GB", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_GB", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_GB", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_GB", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_GB", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_GB", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_GB", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_GB", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_GB", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_GB", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_GB", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_GB", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_GB", "teamName", i);
		fakedAssert(faker.vehicle(), "en_GB", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_GB", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_GB", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_GB", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_GB", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_GB", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_GB", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_GB", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_GB", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_GB", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_GB", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_GB", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_GB", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_GB", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_gh;
    auto faker = new Faker_en_gh(14);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_GH", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_GH", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_GH", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_GH", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_GH", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_GH", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_GH", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_GH", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_GH", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_GH", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_GH", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_GH", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_GH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_GH", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_GH", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_GH", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_GH", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_GH", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_GH", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_GH", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_GH", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_GH", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_GH", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_GH", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_GH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_GH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_GH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_GH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_GH", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_GH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_GH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_GH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_GH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_GH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_GH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_GH", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_GH", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_GH", "appAuthor", i);
		fakedAssert(faker.appName(), "en_GH", "appName", i);
		fakedAssert(faker.appVersion(), "en_GH", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_GH", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_GH", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_GH", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_GH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_GH", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_GH", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_GH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_GH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_GH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_GH", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_GH", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_GH", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_GH", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_GH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_GH", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_GH", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_GH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_GH", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_GH", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_GH", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_GH", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_GH", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_GH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_GH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_GH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_GH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_GH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_GH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_GH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_GH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_GH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_GH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_GH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_GH", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_GH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_GH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_GH", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_GH", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_GH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_GH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_GH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_GH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_GH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_GH", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_GH", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_GH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_GH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_GH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_GH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_GH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_GH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_GH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_GH", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_GH", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_GH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_GH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_GH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_GH", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_GH", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_GH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_GH", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_GH", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_GH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_GH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_GH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_GH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_GH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_GH", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_GH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_GH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_GH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_GH", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_GH", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_GH", "loremText", i);
		fakedAssert(faker.loremWords(), "en_GH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_GH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_GH", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_GH", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_GH", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_GH", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_GH", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_GH", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_GH", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_GH", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_GH", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_GH", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_GH", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_GH", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_GH", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_GH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_GH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_GH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_GH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_GH", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_GH", "teamName", i);
		fakedAssert(faker.vehicle(), "en_GH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_GH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_GH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_GH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_GH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_GH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_GH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_GH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_GH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_GH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_GH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_GH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_GH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_GH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ie;
    auto faker = new Faker_en_ie(15);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_IE", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_IE", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_IE", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_IE", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_IE", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_IE", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_IE", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_IE", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_IE", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_IE", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_IE", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_IE", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_IE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_IE", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_IE", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_IE", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_IE", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_IE", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_IE", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_IE", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_IE", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_IE", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_IE", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_IE", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_IE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_IE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_IE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_IE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_IE", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_IE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_IE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_IE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_IE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_IE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_IE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_IE", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_IE", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_IE", "appAuthor", i);
		fakedAssert(faker.appName(), "en_IE", "appName", i);
		fakedAssert(faker.appVersion(), "en_IE", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_IE", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_IE", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_IE", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_IE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_IE", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_IE", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_IE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_IE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_IE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_IE", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_IE", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_IE", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_IE", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_IE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_IE", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_IE", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_IE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_IE", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_IE", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_IE", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_IE", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_IE", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_IE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_IE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_IE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_IE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_IE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_IE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_IE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_IE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_IE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_IE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_IE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_IE", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_IE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_IE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_IE", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_IE", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_IE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_IE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_IE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_IE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_IE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_IE", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_IE", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_IE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_IE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_IE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_IE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_IE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_IE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_IE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_IE", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_IE", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_IE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_IE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_IE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_IE", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_IE", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_IE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_IE", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_IE", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_IE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_IE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_IE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_IE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_IE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_IE", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_IE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_IE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_IE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_IE", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_IE", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_IE", "loremText", i);
		fakedAssert(faker.loremWords(), "en_IE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_IE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_IE", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_IE", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_IE", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_IE", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_IE", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_IE", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_IE", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_IE", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_IE", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_IE", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_IE", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_IE", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_IE", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_IE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_IE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_IE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_IE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_IE", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_IE", "teamName", i);
		fakedAssert(faker.vehicle(), "en_IE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_IE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_IE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_IE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_IE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_IE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_IE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_IE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_IE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_IE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_IE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_IE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_IE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_IE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ind;
    auto faker = new Faker_en_ind(16);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_IND", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_IND", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_IND", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_IND", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_IND", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_IND", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_IND", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_IND", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_IND", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_IND", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_IND", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_IND", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_IND", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_IND", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_IND", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_IND", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_IND", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_IND", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_IND", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_IND", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_IND", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_IND", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_IND", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_IND", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_IND", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_IND", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_IND", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_IND", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_IND", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_IND", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_IND", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_IND", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_IND", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_IND", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_IND", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_IND", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_IND", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_IND", "appAuthor", i);
		fakedAssert(faker.appName(), "en_IND", "appName", i);
		fakedAssert(faker.appVersion(), "en_IND", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_IND", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_IND", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_IND", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_IND", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_IND", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_IND", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_IND", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_IND", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_IND", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_IND", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_IND", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_IND", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_IND", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_IND", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_IND", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_IND", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_IND", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_IND", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_IND", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_IND", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_IND", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_IND", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_IND", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_IND", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_IND", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_IND", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_IND", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_IND", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_IND", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_IND", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_IND", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_IND", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_IND", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_IND", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_IND", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_IND", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_IND", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_IND", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_IND", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_IND", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_IND", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_IND", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_IND", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_IND", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_IND", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_IND", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_IND", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_IND", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_IND", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_IND", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_IND", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_IND", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_IND", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_IND", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_IND", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_IND", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_IND", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_IND", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_IND", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_IND", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_IND", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_IND", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_IND", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_IND", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_IND", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_IND", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_IND", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_IND", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_IND", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_IND", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_IND", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_IND", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_IND", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_IND", "loremText", i);
		fakedAssert(faker.loremWords(), "en_IND", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_IND", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_IND", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_IND", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_IND", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_IND", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_IND", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_IND", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_IND", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_IND", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_IND", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_IND", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_IND", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_IND", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_IND", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_IND", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_IND", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_IND", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_IND", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_IND", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_IND", "teamName", i);
		fakedAssert(faker.vehicle(), "en_IND", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_IND", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_IND", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_IND", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_IND", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_IND", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_IND", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_IND", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_IND", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_IND", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_IND", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_IND", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_IND", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_IND", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_ng;
    auto faker = new Faker_en_ng(17);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_NG", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_NG", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_NG", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_NG", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_NG", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_NG", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_NG", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_NG", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_NG", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_NG", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_NG", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_NG", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_NG", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_NG", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_NG", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_NG", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_NG", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_NG", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_NG", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_NG", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_NG", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_NG", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_NG", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_NG", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_NG", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_NG", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_NG", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_NG", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_NG", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_NG", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_NG", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_NG", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_NG", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_NG", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_NG", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_NG", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_NG", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_NG", "appAuthor", i);
		fakedAssert(faker.appName(), "en_NG", "appName", i);
		fakedAssert(faker.appVersion(), "en_NG", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_NG", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_NG", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_NG", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_NG", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_NG", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_NG", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_NG", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_NG", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_NG", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_NG", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_NG", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_NG", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_NG", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_NG", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_NG", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_NG", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_NG", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_NG", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_NG", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_NG", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_NG", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_NG", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_NG", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_NG", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_NG", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_NG", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_NG", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_NG", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_NG", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_NG", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_NG", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_NG", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_NG", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_NG", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_NG", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_NG", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_NG", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_NG", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_NG", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_NG", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_NG", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_NG", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_NG", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_NG", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_NG", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_NG", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_NG", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_NG", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_NG", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_NG", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_NG", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_NG", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_NG", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_NG", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_NG", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_NG", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_NG", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_NG", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_NG", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_NG", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_NG", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_NG", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_NG", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_NG", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_NG", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_NG", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_NG", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_NG", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_NG", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_NG", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_NG", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_NG", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_NG", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_NG", "loremText", i);
		fakedAssert(faker.loremWords(), "en_NG", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_NG", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_NG", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_NG", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_NG", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_NG", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_NG", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_NG", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_NG", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_NG", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_NG", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_NG", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_NG", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_NG", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_NG", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_NG", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_NG", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_NG", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_NG", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_NG", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_NG", "teamName", i);
		fakedAssert(faker.vehicle(), "en_NG", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_NG", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_NG", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_NG", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_NG", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_NG", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_NG", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_NG", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_NG", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_NG", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_NG", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_NG", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_NG", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_NG", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_us;
    auto faker = new Faker_en_us(18);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_US", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_US", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_US", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_US", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_US", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_US", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_US", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_US", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_US", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_US", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_US", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_US", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_US", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_US", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_US", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_US", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_US", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_US", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_US", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_US", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_US", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_US", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_US", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_US", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_US", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_US", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_US", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_US", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_US", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_US", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_US", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_US", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_US", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_US", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_US", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_US", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_US", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_US", "appAuthor", i);
		fakedAssert(faker.appName(), "en_US", "appName", i);
		fakedAssert(faker.appVersion(), "en_US", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_US", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_US", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_US", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_US", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_US", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_US", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_US", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_US", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_US", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_US", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_US", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_US", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_US", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_US", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_US", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_US", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_US", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_US", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_US", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_US", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_US", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_US", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_US", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_US", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_US", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_US", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_US", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_US", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_US", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_US", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_US", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_US", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_US", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_US", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_US", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_US", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_US", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_US", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_US", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_US", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_US", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_US", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_US", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_US", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_US", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_US", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_US", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_US", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_US", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_US", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_US", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_US", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_US", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_US", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_US", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_US", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_US", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_US", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_US", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_US", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_US", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_US", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_US", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_US", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_US", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_US", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_US", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_US", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_US", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_US", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_US", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_US", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_US", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_US", "loremText", i);
		fakedAssert(faker.loremWords(), "en_US", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_US", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_US", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_US", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_US", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_US", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_US", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_US", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_US", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_US", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_US", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_US", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_US", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_US", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_US", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_US", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_US", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_US", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_US", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_US", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_US", "teamName", i);
		fakedAssert(faker.vehicle(), "en_US", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_US", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_US", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_US", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_US", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_US", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_US", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_US", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_US", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_US", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_US", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_US", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_US", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_US", "wordVerb", i);

	}
}

unittest {
	import faked.faker_en_za;
    auto faker = new Faker_en_za(19);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en_ZA", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en_ZA", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en_ZA", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en_ZA", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en_ZA", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en_ZA", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en_ZA", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en_ZA", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en_ZA", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en_ZA", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en_ZA", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en_ZA", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en_ZA", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en_ZA", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en_ZA", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en_ZA", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en_ZA", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en_ZA", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en_ZA", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en_ZA", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en_ZA", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "en_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "en_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "en_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "en_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "en_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "en_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "en_ZA", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en_ZA", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en_ZA", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en_ZA", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en_ZA", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en_ZA", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en_ZA", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en_ZA", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en_ZA", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en_ZA", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en_ZA", "companyName", i);
		fakedAssert(faker.companyNoun(), "en_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en_ZA", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en_ZA", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en_ZA", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en_ZA", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en_ZA", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en_ZA", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en_ZA", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en_ZA", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en_ZA", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en_ZA", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en_ZA", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en_ZA", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en_ZA", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en_ZA", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en_ZA", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "en_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en_ZA", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en_ZA", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en_ZA", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en_ZA", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en_ZA", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en_ZA", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en_ZA", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en_ZA", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en_ZA", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en_ZA", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en_ZA", "nameName", i);
		fakedAssert(faker.namePrefix(), "en_ZA", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en_ZA", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "en_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "en_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_es;
    auto faker = new Faker_es(20);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "es", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "es", "addressCity", i);
		fakedAssert(faker.addressCityName(), "es", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "es", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "es", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "es", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "es", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "es", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "es", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "es", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "es", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "es", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "es", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "es", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "es", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "es", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "es", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "es", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "es", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "es", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "es", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "es", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "es", "animalBear", i);
		fakedAssert(faker.animalBird(), "es", "animalBird", i);
		fakedAssert(faker.animalCat(), "es", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "es", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "es", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "es", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "es", "animalDog", i);
		fakedAssert(faker.animalFish(), "es", "animalFish", i);
		fakedAssert(faker.animalHorse(), "es", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "es", "animalInsect", i);
		fakedAssert(faker.animalLion(), "es", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "es", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "es", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "es", "animalSnake", i);
		fakedAssert(faker.animalType(), "es", "animalType", i);
		fakedAssert(faker.appAuthor(), "es", "appAuthor", i);
		fakedAssert(faker.appName(), "es", "appName", i);
		fakedAssert(faker.appVersion(), "es", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "es", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "es", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "es", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "es", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "es", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "es", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "es", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "es", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "es", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "es", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "es", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "es", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "es", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "es", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "es", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "es", "companyName", i);
		fakedAssert(faker.companyNoun(), "es", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "es", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "es", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "es", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "es", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "es", "databaseType", i);
		fakedAssert(faker.dateMonth(), "es", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "es", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "es", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "es", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "es", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "es", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "es", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "es", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "es", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "es", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "es", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "es", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "es", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "es", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "es", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "es", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "es", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "es", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "es", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "es", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "es", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "es", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "es", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "es", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "es", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "es", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "es", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "es", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "es", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "es", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "es", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "es", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "es", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "es", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "es", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "es", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "es", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "es", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "es", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "es", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "es", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "es", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "es", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "es", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "es", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "es", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "es", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "es", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "es", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "es", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "es", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "es", "loremText", i);
		fakedAssert(faker.loremWords(), "es", "loremWords", i);
		fakedAssert(faker.musicGenre(), "es", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "es", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "es", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "es", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "es", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "es", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "es", "nameGender", i);
		fakedAssert(faker.nameLastName(), "es", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "es", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "es", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "es", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "es", "nameName", i);
		fakedAssert(faker.namePrefix(), "es", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "es", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "es", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "es", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "es", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "es", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "es", "teamCreature", i);
		fakedAssert(faker.teamName(), "es", "teamName", i);
		fakedAssert(faker.vehicle(), "es", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "es", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "es", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "es", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "es", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "es", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "es", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "es", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "es", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "es", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "es", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "es", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "es", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "es", "wordVerb", i);

	}
}

unittest {
	import faked.faker_es_mx;
    auto faker = new Faker_es_mx(21);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "es_MX", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "es_MX", "addressCity", i);
		fakedAssert(faker.addressCityName(), "es_MX", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "es_MX", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "es_MX", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "es_MX", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "es_MX", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "es_MX", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "es_MX", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "es_MX", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "es_MX", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "es_MX", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "es_MX", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "es_MX", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "es_MX", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "es_MX", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "es_MX", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "es_MX", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "es_MX", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "es_MX", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "es_MX", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "es_MX", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "es_MX", "animalBear", i);
		fakedAssert(faker.animalBird(), "es_MX", "animalBird", i);
		fakedAssert(faker.animalCat(), "es_MX", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "es_MX", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "es_MX", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "es_MX", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "es_MX", "animalDog", i);
		fakedAssert(faker.animalFish(), "es_MX", "animalFish", i);
		fakedAssert(faker.animalHorse(), "es_MX", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "es_MX", "animalInsect", i);
		fakedAssert(faker.animalLion(), "es_MX", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "es_MX", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "es_MX", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "es_MX", "animalSnake", i);
		fakedAssert(faker.animalType(), "es_MX", "animalType", i);
		fakedAssert(faker.appAuthor(), "es_MX", "appAuthor", i);
		fakedAssert(faker.appName(), "es_MX", "appName", i);
		fakedAssert(faker.appVersion(), "es_MX", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "es_MX", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "es_MX", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "es_MX", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "es_MX", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "es_MX", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "es_MX", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "es_MX", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "es_MX", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "es_MX", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "es_MX", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "es_MX", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "es_MX", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "es_MX", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "es_MX", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "es_MX", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "es_MX", "companyName", i);
		fakedAssert(faker.companyNoun(), "es_MX", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "es_MX", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "es_MX", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "es_MX", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "es_MX", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "es_MX", "databaseType", i);
		fakedAssert(faker.dateMonth(), "es_MX", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "es_MX", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "es_MX", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "es_MX", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "es_MX", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "es_MX", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "es_MX", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "es_MX", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "es_MX", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "es_MX", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "es_MX", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "es_MX", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "es_MX", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "es_MX", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "es_MX", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "es_MX", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "es_MX", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "es_MX", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "es_MX", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "es_MX", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "es_MX", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "es_MX", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "es_MX", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "es_MX", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "es_MX", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "es_MX", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "es_MX", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "es_MX", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "es_MX", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "es_MX", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "es_MX", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "es_MX", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "es_MX", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "es_MX", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "es_MX", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "es_MX", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "es_MX", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "es_MX", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "es_MX", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "es_MX", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "es_MX", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "es_MX", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "es_MX", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "es_MX", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "es_MX", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "es_MX", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "es_MX", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "es_MX", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "es_MX", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "es_MX", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "es_MX", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "es_MX", "loremText", i);
		fakedAssert(faker.loremWords(), "es_MX", "loremWords", i);
		fakedAssert(faker.musicGenre(), "es_MX", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "es_MX", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "es_MX", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "es_MX", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "es_MX", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "es_MX", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "es_MX", "nameGender", i);
		fakedAssert(faker.nameLastName(), "es_MX", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "es_MX", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "es_MX", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "es_MX", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "es_MX", "nameName", i);
		fakedAssert(faker.namePrefix(), "es_MX", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "es_MX", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "es_MX", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "es_MX", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "es_MX", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "es_MX", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "es_MX", "teamCreature", i);
		fakedAssert(faker.teamName(), "es_MX", "teamName", i);
		fakedAssert(faker.vehicle(), "es_MX", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "es_MX", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "es_MX", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "es_MX", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "es_MX", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "es_MX", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "es_MX", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "es_MX", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "es_MX", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "es_MX", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "es_MX", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "es_MX", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "es_MX", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "es_MX", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fa;
    auto faker = new Faker_fa(22);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fa", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fa", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fa", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fa", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fa", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fa", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fa", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fa", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fa", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fa", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fa", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fa", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fa", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fa", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fa", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fa", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fa", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fa", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fa", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fa", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fa", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fa", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fa", "animalBear", i);
		fakedAssert(faker.animalBird(), "fa", "animalBird", i);
		fakedAssert(faker.animalCat(), "fa", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fa", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fa", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fa", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fa", "animalDog", i);
		fakedAssert(faker.animalFish(), "fa", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fa", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fa", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fa", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fa", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fa", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fa", "animalSnake", i);
		fakedAssert(faker.animalType(), "fa", "animalType", i);
		fakedAssert(faker.appAuthor(), "fa", "appAuthor", i);
		fakedAssert(faker.appName(), "fa", "appName", i);
		fakedAssert(faker.appVersion(), "fa", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fa", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fa", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fa", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fa", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fa", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fa", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fa", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fa", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fa", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fa", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fa", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fa", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fa", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fa", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fa", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fa", "companyName", i);
		fakedAssert(faker.companyNoun(), "fa", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fa", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fa", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fa", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fa", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fa", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fa", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fa", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fa", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fa", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fa", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fa", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fa", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fa", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fa", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fa", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fa", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fa", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fa", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fa", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fa", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fa", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fa", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fa", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fa", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fa", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fa", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fa", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fa", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fa", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fa", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fa", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fa", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fa", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fa", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fa", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fa", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fa", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fa", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fa", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fa", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fa", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fa", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fa", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fa", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fa", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fa", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fa", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fa", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fa", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fa", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fa", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fa", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fa", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fa", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fa", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fa", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fa", "loremText", i);
		fakedAssert(faker.loremWords(), "fa", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fa", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fa", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fa", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fa", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fa", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fa", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fa", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fa", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fa", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fa", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fa", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fa", "nameName", i);
		fakedAssert(faker.namePrefix(), "fa", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fa", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fa", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fa", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fa", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fa", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fa", "teamCreature", i);
		fakedAssert(faker.teamName(), "fa", "teamName", i);
		fakedAssert(faker.vehicle(), "fa", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fa", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fa", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fa", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fa", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fa", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fa", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fa", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fa", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fa", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fa", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fa", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fa", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fa", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fi;
    auto faker = new Faker_fi(23);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fi", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fi", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fi", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fi", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fi", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fi", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fi", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fi", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fi", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fi", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fi", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fi", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fi", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fi", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fi", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fi", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fi", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fi", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fi", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fi", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fi", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fi", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fi", "animalBear", i);
		fakedAssert(faker.animalBird(), "fi", "animalBird", i);
		fakedAssert(faker.animalCat(), "fi", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fi", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fi", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fi", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fi", "animalDog", i);
		fakedAssert(faker.animalFish(), "fi", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fi", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fi", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fi", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fi", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fi", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fi", "animalSnake", i);
		fakedAssert(faker.animalType(), "fi", "animalType", i);
		fakedAssert(faker.appAuthor(), "fi", "appAuthor", i);
		fakedAssert(faker.appName(), "fi", "appName", i);
		fakedAssert(faker.appVersion(), "fi", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fi", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fi", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fi", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fi", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fi", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fi", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fi", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fi", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fi", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fi", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fi", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fi", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fi", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fi", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fi", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fi", "companyName", i);
		fakedAssert(faker.companyNoun(), "fi", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fi", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fi", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fi", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fi", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fi", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fi", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fi", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fi", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fi", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fi", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fi", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fi", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fi", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fi", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fi", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fi", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fi", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fi", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fi", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fi", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fi", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fi", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fi", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fi", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fi", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fi", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fi", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fi", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fi", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fi", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fi", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fi", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fi", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fi", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fi", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fi", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fi", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fi", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fi", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fi", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fi", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fi", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fi", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fi", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fi", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fi", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fi", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fi", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fi", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fi", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fi", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fi", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fi", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fi", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fi", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fi", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fi", "loremText", i);
		fakedAssert(faker.loremWords(), "fi", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fi", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fi", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fi", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fi", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fi", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fi", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fi", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fi", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fi", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fi", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fi", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fi", "nameName", i);
		fakedAssert(faker.namePrefix(), "fi", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fi", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fi", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fi", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fi", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fi", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fi", "teamCreature", i);
		fakedAssert(faker.teamName(), "fi", "teamName", i);
		fakedAssert(faker.vehicle(), "fi", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fi", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fi", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fi", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fi", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fi", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fi", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fi", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fi", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fi", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fi", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fi", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fi", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fi", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr;
    auto faker = new Faker_fr(24);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fr", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fr", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fr", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fr", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fr", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fr", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fr", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fr", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fr", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fr", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fr", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fr", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fr", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fr", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fr", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fr", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fr", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fr", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fr", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fr", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fr", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr", "appAuthor", i);
		fakedAssert(faker.appName(), "fr", "appName", i);
		fakedAssert(faker.appVersion(), "fr", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fr", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fr", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fr", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fr", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fr", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fr", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fr", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fr", "companyName", i);
		fakedAssert(faker.companyNoun(), "fr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fr", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fr", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fr", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fr", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fr", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fr", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fr", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fr", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fr", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fr", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fr", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fr", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fr", "loremText", i);
		fakedAssert(faker.loremWords(), "fr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fr", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fr", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fr", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fr", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fr", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fr", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fr", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fr", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fr", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fr", "nameName", i);
		fakedAssert(faker.namePrefix(), "fr", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fr", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr", "teamName", i);
		fakedAssert(faker.vehicle(), "fr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_be;
    auto faker = new Faker_fr_be(25);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fr_BE", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fr_BE", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fr_BE", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fr_BE", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fr_BE", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fr_BE", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fr_BE", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fr_BE", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fr_BE", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fr_BE", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fr_BE", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fr_BE", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fr_BE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_BE", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fr_BE", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fr_BE", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fr_BE", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fr_BE", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fr_BE", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fr_BE", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fr_BE", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fr_BE", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fr_BE", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_BE", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_BE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_BE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_BE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_BE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_BE", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_BE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_BE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_BE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_BE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_BE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_BE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_BE", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_BE", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_BE", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_BE", "appName", i);
		fakedAssert(faker.appVersion(), "fr_BE", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fr_BE", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fr_BE", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fr_BE", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_BE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_BE", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fr_BE", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fr_BE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_BE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_BE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_BE", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fr_BE", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fr_BE", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fr_BE", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_BE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_BE", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fr_BE", "companyName", i);
		fakedAssert(faker.companyNoun(), "fr_BE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_BE", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fr_BE", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fr_BE", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fr_BE", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fr_BE", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fr_BE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_BE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_BE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_BE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_BE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_BE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_BE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_BE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_BE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_BE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_BE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fr_BE", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_BE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_BE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fr_BE", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fr_BE", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_BE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_BE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_BE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_BE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_BE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_BE", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fr_BE", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fr_BE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_BE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_BE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_BE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_BE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_BE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_BE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_BE", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fr_BE", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fr_BE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_BE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_BE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_BE", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fr_BE", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fr_BE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_BE", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fr_BE", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fr_BE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_BE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_BE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_BE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_BE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_BE", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fr_BE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_BE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_BE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_BE", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fr_BE", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fr_BE", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_BE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_BE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_BE", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fr_BE", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fr_BE", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fr_BE", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fr_BE", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fr_BE", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fr_BE", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fr_BE", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fr_BE", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fr_BE", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fr_BE", "nameName", i);
		fakedAssert(faker.namePrefix(), "fr_BE", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fr_BE", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fr_BE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_BE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_BE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_BE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_BE", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_BE", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_BE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_BE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_BE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_BE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_BE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_BE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_BE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_BE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_BE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_BE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_BE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_BE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_BE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_BE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_ca;
    auto faker = new Faker_fr_ca(26);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fr_CA", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fr_CA", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fr_CA", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fr_CA", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fr_CA", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fr_CA", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fr_CA", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fr_CA", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fr_CA", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fr_CA", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fr_CA", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fr_CA", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fr_CA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_CA", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fr_CA", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fr_CA", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fr_CA", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fr_CA", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fr_CA", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fr_CA", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fr_CA", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fr_CA", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fr_CA", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_CA", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_CA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_CA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_CA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_CA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_CA", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_CA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_CA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_CA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_CA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_CA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_CA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_CA", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_CA", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_CA", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_CA", "appName", i);
		fakedAssert(faker.appVersion(), "fr_CA", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fr_CA", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fr_CA", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fr_CA", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_CA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_CA", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fr_CA", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fr_CA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_CA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_CA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_CA", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fr_CA", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fr_CA", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fr_CA", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_CA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_CA", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fr_CA", "companyName", i);
		fakedAssert(faker.companyNoun(), "fr_CA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_CA", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fr_CA", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fr_CA", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fr_CA", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fr_CA", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fr_CA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_CA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_CA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_CA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_CA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_CA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_CA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_CA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_CA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_CA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_CA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fr_CA", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_CA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_CA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fr_CA", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fr_CA", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_CA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_CA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_CA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_CA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_CA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_CA", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fr_CA", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fr_CA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_CA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_CA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_CA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_CA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_CA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_CA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_CA", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fr_CA", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fr_CA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_CA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_CA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_CA", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fr_CA", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fr_CA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_CA", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fr_CA", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fr_CA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_CA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_CA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_CA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_CA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_CA", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fr_CA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_CA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_CA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_CA", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fr_CA", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fr_CA", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_CA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_CA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_CA", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fr_CA", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fr_CA", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fr_CA", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fr_CA", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fr_CA", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fr_CA", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fr_CA", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fr_CA", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fr_CA", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fr_CA", "nameName", i);
		fakedAssert(faker.namePrefix(), "fr_CA", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fr_CA", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fr_CA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_CA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_CA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_CA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_CA", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_CA", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_CA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_CA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_CA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_CA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_CA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_CA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_CA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_CA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_CA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_CA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_CA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_CA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_CA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_CA", "wordVerb", i);

	}
}

unittest {
	import faked.faker_fr_ch;
    auto faker = new Faker_fr_ch(27);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "fr_CH", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "fr_CH", "addressCity", i);
		fakedAssert(faker.addressCityName(), "fr_CH", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "fr_CH", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "fr_CH", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "fr_CH", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "fr_CH", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "fr_CH", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "fr_CH", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "fr_CH", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "fr_CH", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "fr_CH", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "fr_CH", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "fr_CH", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "fr_CH", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "fr_CH", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "fr_CH", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "fr_CH", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "fr_CH", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "fr_CH", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "fr_CH", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "fr_CH", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "fr_CH", "animalBear", i);
		fakedAssert(faker.animalBird(), "fr_CH", "animalBird", i);
		fakedAssert(faker.animalCat(), "fr_CH", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "fr_CH", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "fr_CH", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "fr_CH", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "fr_CH", "animalDog", i);
		fakedAssert(faker.animalFish(), "fr_CH", "animalFish", i);
		fakedAssert(faker.animalHorse(), "fr_CH", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "fr_CH", "animalInsect", i);
		fakedAssert(faker.animalLion(), "fr_CH", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "fr_CH", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "fr_CH", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "fr_CH", "animalSnake", i);
		fakedAssert(faker.animalType(), "fr_CH", "animalType", i);
		fakedAssert(faker.appAuthor(), "fr_CH", "appAuthor", i);
		fakedAssert(faker.appName(), "fr_CH", "appName", i);
		fakedAssert(faker.appVersion(), "fr_CH", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "fr_CH", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "fr_CH", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "fr_CH", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "fr_CH", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "fr_CH", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "fr_CH", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "fr_CH", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "fr_CH", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "fr_CH", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "fr_CH", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "fr_CH", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "fr_CH", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "fr_CH", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "fr_CH", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "fr_CH", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "fr_CH", "companyName", i);
		fakedAssert(faker.companyNoun(), "fr_CH", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "fr_CH", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "fr_CH", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "fr_CH", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "fr_CH", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "fr_CH", "databaseType", i);
		fakedAssert(faker.dateMonth(), "fr_CH", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "fr_CH", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "fr_CH", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "fr_CH", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "fr_CH", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "fr_CH", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "fr_CH", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "fr_CH", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "fr_CH", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "fr_CH", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "fr_CH", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "fr_CH", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "fr_CH", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "fr_CH", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "fr_CH", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "fr_CH", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "fr_CH", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "fr_CH", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "fr_CH", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "fr_CH", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "fr_CH", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "fr_CH", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "fr_CH", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "fr_CH", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "fr_CH", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "fr_CH", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "fr_CH", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "fr_CH", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "fr_CH", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "fr_CH", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "fr_CH", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "fr_CH", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "fr_CH", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "fr_CH", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "fr_CH", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "fr_CH", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "fr_CH", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "fr_CH", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "fr_CH", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "fr_CH", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "fr_CH", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "fr_CH", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "fr_CH", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "fr_CH", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "fr_CH", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "fr_CH", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "fr_CH", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "fr_CH", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "fr_CH", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "fr_CH", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "fr_CH", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "fr_CH", "loremText", i);
		fakedAssert(faker.loremWords(), "fr_CH", "loremWords", i);
		fakedAssert(faker.musicGenre(), "fr_CH", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "fr_CH", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "fr_CH", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "fr_CH", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "fr_CH", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "fr_CH", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "fr_CH", "nameGender", i);
		fakedAssert(faker.nameLastName(), "fr_CH", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "fr_CH", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "fr_CH", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "fr_CH", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "fr_CH", "nameName", i);
		fakedAssert(faker.namePrefix(), "fr_CH", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "fr_CH", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "fr_CH", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "fr_CH", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "fr_CH", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "fr_CH", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "fr_CH", "teamCreature", i);
		fakedAssert(faker.teamName(), "fr_CH", "teamName", i);
		fakedAssert(faker.vehicle(), "fr_CH", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "fr_CH", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "fr_CH", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "fr_CH", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "fr_CH", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "fr_CH", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "fr_CH", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "fr_CH", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "fr_CH", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "fr_CH", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "fr_CH", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "fr_CH", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "fr_CH", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "fr_CH", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ge;
    auto faker = new Faker_ge(28);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ge", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ge", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ge", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ge", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ge", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ge", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ge", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ge", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ge", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ge", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ge", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ge", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ge", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ge", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ge", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ge", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ge", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ge", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ge", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ge", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ge", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ge", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ge", "animalBear", i);
		fakedAssert(faker.animalBird(), "ge", "animalBird", i);
		fakedAssert(faker.animalCat(), "ge", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ge", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ge", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ge", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ge", "animalDog", i);
		fakedAssert(faker.animalFish(), "ge", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ge", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ge", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ge", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ge", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ge", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ge", "animalSnake", i);
		fakedAssert(faker.animalType(), "ge", "animalType", i);
		fakedAssert(faker.appAuthor(), "ge", "appAuthor", i);
		fakedAssert(faker.appName(), "ge", "appName", i);
		fakedAssert(faker.appVersion(), "ge", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ge", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ge", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ge", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ge", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ge", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ge", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ge", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ge", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ge", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ge", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ge", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ge", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ge", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ge", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ge", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ge", "companyName", i);
		fakedAssert(faker.companyNoun(), "ge", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ge", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ge", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ge", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ge", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ge", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ge", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ge", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ge", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ge", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ge", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ge", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ge", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ge", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ge", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ge", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ge", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ge", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ge", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ge", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ge", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ge", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ge", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ge", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ge", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ge", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ge", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ge", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ge", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ge", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ge", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ge", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ge", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ge", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ge", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ge", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ge", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ge", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ge", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ge", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ge", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ge", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ge", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ge", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ge", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ge", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ge", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ge", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ge", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ge", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ge", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ge", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ge", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ge", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ge", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ge", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ge", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ge", "loremText", i);
		fakedAssert(faker.loremWords(), "ge", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ge", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ge", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ge", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ge", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ge", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ge", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ge", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ge", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ge", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ge", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ge", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ge", "nameName", i);
		fakedAssert(faker.namePrefix(), "ge", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ge", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ge", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ge", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ge", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ge", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ge", "teamCreature", i);
		fakedAssert(faker.teamName(), "ge", "teamName", i);
		fakedAssert(faker.vehicle(), "ge", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ge", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ge", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ge", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ge", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ge", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ge", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ge", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ge", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ge", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ge", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ge", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ge", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ge", "wordVerb", i);

	}
}

unittest {
	import faked.faker_he;
    auto faker = new Faker_he(29);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "he", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "he", "addressCity", i);
		fakedAssert(faker.addressCityName(), "he", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "he", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "he", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "he", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "he", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "he", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "he", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "he", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "he", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "he", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "he", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "he", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "he", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "he", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "he", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "he", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "he", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "he", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "he", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "he", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "he", "animalBear", i);
		fakedAssert(faker.animalBird(), "he", "animalBird", i);
		fakedAssert(faker.animalCat(), "he", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "he", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "he", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "he", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "he", "animalDog", i);
		fakedAssert(faker.animalFish(), "he", "animalFish", i);
		fakedAssert(faker.animalHorse(), "he", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "he", "animalInsect", i);
		fakedAssert(faker.animalLion(), "he", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "he", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "he", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "he", "animalSnake", i);
		fakedAssert(faker.animalType(), "he", "animalType", i);
		fakedAssert(faker.appAuthor(), "he", "appAuthor", i);
		fakedAssert(faker.appName(), "he", "appName", i);
		fakedAssert(faker.appVersion(), "he", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "he", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "he", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "he", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "he", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "he", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "he", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "he", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "he", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "he", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "he", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "he", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "he", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "he", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "he", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "he", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "he", "companyName", i);
		fakedAssert(faker.companyNoun(), "he", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "he", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "he", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "he", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "he", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "he", "databaseType", i);
		fakedAssert(faker.dateMonth(), "he", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "he", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "he", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "he", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "he", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "he", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "he", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "he", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "he", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "he", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "he", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "he", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "he", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "he", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "he", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "he", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "he", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "he", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "he", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "he", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "he", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "he", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "he", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "he", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "he", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "he", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "he", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "he", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "he", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "he", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "he", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "he", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "he", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "he", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "he", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "he", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "he", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "he", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "he", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "he", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "he", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "he", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "he", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "he", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "he", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "he", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "he", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "he", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "he", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "he", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "he", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "he", "loremText", i);
		fakedAssert(faker.loremWords(), "he", "loremWords", i);
		fakedAssert(faker.musicGenre(), "he", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "he", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "he", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "he", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "he", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "he", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "he", "nameGender", i);
		fakedAssert(faker.nameLastName(), "he", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "he", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "he", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "he", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "he", "nameName", i);
		fakedAssert(faker.namePrefix(), "he", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "he", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "he", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "he", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "he", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "he", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "he", "teamCreature", i);
		fakedAssert(faker.teamName(), "he", "teamName", i);
		fakedAssert(faker.vehicle(), "he", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "he", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "he", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "he", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "he", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "he", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "he", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "he", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "he", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "he", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "he", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "he", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "he", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "he", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hr;
    auto faker = new Faker_hr(30);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "hr", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "hr", "addressCity", i);
		fakedAssert(faker.addressCityName(), "hr", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "hr", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "hr", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "hr", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "hr", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "hr", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "hr", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "hr", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "hr", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "hr", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "hr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hr", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "hr", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "hr", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "hr", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "hr", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "hr", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "hr", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "hr", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "hr", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "hr", "animalBear", i);
		fakedAssert(faker.animalBird(), "hr", "animalBird", i);
		fakedAssert(faker.animalCat(), "hr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hr", "animalDog", i);
		fakedAssert(faker.animalFish(), "hr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hr", "animalSnake", i);
		fakedAssert(faker.animalType(), "hr", "animalType", i);
		fakedAssert(faker.appAuthor(), "hr", "appAuthor", i);
		fakedAssert(faker.appName(), "hr", "appName", i);
		fakedAssert(faker.appVersion(), "hr", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "hr", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "hr", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "hr", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "hr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hr", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "hr", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "hr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hr", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "hr", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "hr", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "hr", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hr", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "hr", "companyName", i);
		fakedAssert(faker.companyNoun(), "hr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hr", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "hr", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "hr", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "hr", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "hr", "databaseType", i);
		fakedAssert(faker.dateMonth(), "hr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "hr", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "hr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "hr", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "hr", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "hr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hr", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "hr", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "hr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hr", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "hr", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "hr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hr", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "hr", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "hr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hr", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "hr", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "hr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hr", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "hr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hr", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "hr", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "hr", "loremText", i);
		fakedAssert(faker.loremWords(), "hr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hr", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "hr", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "hr", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "hr", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "hr", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "hr", "nameGender", i);
		fakedAssert(faker.nameLastName(), "hr", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "hr", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "hr", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "hr", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "hr", "nameName", i);
		fakedAssert(faker.namePrefix(), "hr", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "hr", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "hr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hr", "teamCreature", i);
		fakedAssert(faker.teamName(), "hr", "teamName", i);
		fakedAssert(faker.vehicle(), "hr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hu;
    auto faker = new Faker_hu(31);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "hu", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "hu", "addressCity", i);
		fakedAssert(faker.addressCityName(), "hu", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "hu", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "hu", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "hu", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "hu", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "hu", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "hu", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "hu", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "hu", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "hu", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "hu", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hu", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "hu", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "hu", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "hu", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "hu", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "hu", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "hu", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "hu", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "hu", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "hu", "animalBear", i);
		fakedAssert(faker.animalBird(), "hu", "animalBird", i);
		fakedAssert(faker.animalCat(), "hu", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hu", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hu", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hu", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hu", "animalDog", i);
		fakedAssert(faker.animalFish(), "hu", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hu", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hu", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hu", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hu", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hu", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hu", "animalSnake", i);
		fakedAssert(faker.animalType(), "hu", "animalType", i);
		fakedAssert(faker.appAuthor(), "hu", "appAuthor", i);
		fakedAssert(faker.appName(), "hu", "appName", i);
		fakedAssert(faker.appVersion(), "hu", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "hu", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "hu", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "hu", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "hu", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hu", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "hu", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "hu", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hu", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hu", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hu", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "hu", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "hu", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "hu", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hu", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hu", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "hu", "companyName", i);
		fakedAssert(faker.companyNoun(), "hu", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hu", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "hu", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "hu", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "hu", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "hu", "databaseType", i);
		fakedAssert(faker.dateMonth(), "hu", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hu", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hu", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hu", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hu", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hu", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hu", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hu", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hu", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hu", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hu", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "hu", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "hu", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hu", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "hu", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "hu", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "hu", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hu", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hu", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hu", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hu", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hu", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "hu", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "hu", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hu", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hu", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hu", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hu", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hu", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hu", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hu", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "hu", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "hu", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hu", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hu", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hu", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "hu", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "hu", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hu", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "hu", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "hu", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hu", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hu", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hu", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hu", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hu", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "hu", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hu", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hu", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hu", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "hu", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "hu", "loremText", i);
		fakedAssert(faker.loremWords(), "hu", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hu", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hu", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "hu", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "hu", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "hu", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "hu", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "hu", "nameGender", i);
		fakedAssert(faker.nameLastName(), "hu", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "hu", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "hu", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "hu", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "hu", "nameName", i);
		fakedAssert(faker.namePrefix(), "hu", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "hu", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "hu", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hu", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hu", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hu", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hu", "teamCreature", i);
		fakedAssert(faker.teamName(), "hu", "teamName", i);
		fakedAssert(faker.vehicle(), "hu", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hu", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hu", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hu", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hu", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hu", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hu", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hu", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hu", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hu", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hu", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hu", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hu", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hu", "wordVerb", i);

	}
}

unittest {
	import faked.faker_hy;
    auto faker = new Faker_hy(32);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "hy", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "hy", "addressCity", i);
		fakedAssert(faker.addressCityName(), "hy", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "hy", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "hy", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "hy", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "hy", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "hy", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "hy", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "hy", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "hy", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "hy", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "hy", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "hy", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "hy", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "hy", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "hy", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "hy", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "hy", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "hy", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "hy", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "hy", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "hy", "animalBear", i);
		fakedAssert(faker.animalBird(), "hy", "animalBird", i);
		fakedAssert(faker.animalCat(), "hy", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "hy", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "hy", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "hy", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "hy", "animalDog", i);
		fakedAssert(faker.animalFish(), "hy", "animalFish", i);
		fakedAssert(faker.animalHorse(), "hy", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "hy", "animalInsect", i);
		fakedAssert(faker.animalLion(), "hy", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "hy", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "hy", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "hy", "animalSnake", i);
		fakedAssert(faker.animalType(), "hy", "animalType", i);
		fakedAssert(faker.appAuthor(), "hy", "appAuthor", i);
		fakedAssert(faker.appName(), "hy", "appName", i);
		fakedAssert(faker.appVersion(), "hy", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "hy", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "hy", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "hy", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "hy", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "hy", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "hy", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "hy", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "hy", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "hy", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "hy", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "hy", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "hy", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "hy", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "hy", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "hy", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "hy", "companyName", i);
		fakedAssert(faker.companyNoun(), "hy", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "hy", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "hy", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "hy", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "hy", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "hy", "databaseType", i);
		fakedAssert(faker.dateMonth(), "hy", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "hy", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "hy", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "hy", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "hy", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "hy", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "hy", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "hy", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "hy", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "hy", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "hy", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "hy", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "hy", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "hy", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "hy", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "hy", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "hy", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "hy", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "hy", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "hy", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "hy", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "hy", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "hy", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "hy", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "hy", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "hy", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "hy", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "hy", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "hy", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "hy", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "hy", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "hy", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "hy", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "hy", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "hy", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "hy", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "hy", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "hy", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "hy", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "hy", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "hy", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "hy", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "hy", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "hy", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "hy", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "hy", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "hy", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "hy", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "hy", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "hy", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "hy", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "hy", "loremText", i);
		fakedAssert(faker.loremWords(), "hy", "loremWords", i);
		fakedAssert(faker.musicGenre(), "hy", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "hy", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "hy", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "hy", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "hy", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "hy", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "hy", "nameGender", i);
		fakedAssert(faker.nameLastName(), "hy", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "hy", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "hy", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "hy", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "hy", "nameName", i);
		fakedAssert(faker.namePrefix(), "hy", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "hy", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "hy", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "hy", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "hy", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "hy", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "hy", "teamCreature", i);
		fakedAssert(faker.teamName(), "hy", "teamName", i);
		fakedAssert(faker.vehicle(), "hy", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "hy", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "hy", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "hy", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "hy", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "hy", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "hy", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "hy", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "hy", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "hy", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "hy", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "hy", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "hy", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "hy", "wordVerb", i);

	}
}

unittest {
	import faked.faker_id_id;
    auto faker = new Faker_id_id(33);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "id_ID", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "id_ID", "addressCity", i);
		fakedAssert(faker.addressCityName(), "id_ID", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "id_ID", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "id_ID", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "id_ID", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "id_ID", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "id_ID", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "id_ID", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "id_ID", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "id_ID", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "id_ID", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "id_ID", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "id_ID", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "id_ID", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "id_ID", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "id_ID", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "id_ID", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "id_ID", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "id_ID", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "id_ID", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "id_ID", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "id_ID", "animalBear", i);
		fakedAssert(faker.animalBird(), "id_ID", "animalBird", i);
		fakedAssert(faker.animalCat(), "id_ID", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "id_ID", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "id_ID", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "id_ID", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "id_ID", "animalDog", i);
		fakedAssert(faker.animalFish(), "id_ID", "animalFish", i);
		fakedAssert(faker.animalHorse(), "id_ID", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "id_ID", "animalInsect", i);
		fakedAssert(faker.animalLion(), "id_ID", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "id_ID", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "id_ID", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "id_ID", "animalSnake", i);
		fakedAssert(faker.animalType(), "id_ID", "animalType", i);
		fakedAssert(faker.appAuthor(), "id_ID", "appAuthor", i);
		fakedAssert(faker.appName(), "id_ID", "appName", i);
		fakedAssert(faker.appVersion(), "id_ID", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "id_ID", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "id_ID", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "id_ID", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "id_ID", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "id_ID", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "id_ID", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "id_ID", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "id_ID", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "id_ID", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "id_ID", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "id_ID", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "id_ID", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "id_ID", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "id_ID", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "id_ID", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "id_ID", "companyName", i);
		fakedAssert(faker.companyNoun(), "id_ID", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "id_ID", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "id_ID", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "id_ID", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "id_ID", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "id_ID", "databaseType", i);
		fakedAssert(faker.dateMonth(), "id_ID", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "id_ID", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "id_ID", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "id_ID", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "id_ID", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "id_ID", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "id_ID", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "id_ID", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "id_ID", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "id_ID", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "id_ID", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "id_ID", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "id_ID", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "id_ID", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "id_ID", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "id_ID", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "id_ID", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "id_ID", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "id_ID", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "id_ID", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "id_ID", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "id_ID", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "id_ID", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "id_ID", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "id_ID", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "id_ID", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "id_ID", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "id_ID", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "id_ID", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "id_ID", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "id_ID", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "id_ID", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "id_ID", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "id_ID", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "id_ID", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "id_ID", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "id_ID", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "id_ID", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "id_ID", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "id_ID", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "id_ID", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "id_ID", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "id_ID", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "id_ID", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "id_ID", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "id_ID", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "id_ID", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "id_ID", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "id_ID", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "id_ID", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "id_ID", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "id_ID", "loremText", i);
		fakedAssert(faker.loremWords(), "id_ID", "loremWords", i);
		fakedAssert(faker.musicGenre(), "id_ID", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "id_ID", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "id_ID", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "id_ID", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "id_ID", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "id_ID", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "id_ID", "nameGender", i);
		fakedAssert(faker.nameLastName(), "id_ID", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "id_ID", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "id_ID", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "id_ID", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "id_ID", "nameName", i);
		fakedAssert(faker.namePrefix(), "id_ID", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "id_ID", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "id_ID", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "id_ID", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "id_ID", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "id_ID", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "id_ID", "teamCreature", i);
		fakedAssert(faker.teamName(), "id_ID", "teamName", i);
		fakedAssert(faker.vehicle(), "id_ID", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "id_ID", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "id_ID", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "id_ID", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "id_ID", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "id_ID", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "id_ID", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "id_ID", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "id_ID", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "id_ID", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "id_ID", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "id_ID", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "id_ID", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "id_ID", "wordVerb", i);

	}
}

unittest {
	import faked.faker_it;
    auto faker = new Faker_it(34);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "it", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "it", "addressCity", i);
		fakedAssert(faker.addressCityName(), "it", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "it", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "it", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "it", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "it", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "it", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "it", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "it", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "it", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "it", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "it", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "it", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "it", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "it", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "it", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "it", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "it", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "it", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "it", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "it", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "it", "animalBear", i);
		fakedAssert(faker.animalBird(), "it", "animalBird", i);
		fakedAssert(faker.animalCat(), "it", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "it", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "it", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "it", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "it", "animalDog", i);
		fakedAssert(faker.animalFish(), "it", "animalFish", i);
		fakedAssert(faker.animalHorse(), "it", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "it", "animalInsect", i);
		fakedAssert(faker.animalLion(), "it", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "it", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "it", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "it", "animalSnake", i);
		fakedAssert(faker.animalType(), "it", "animalType", i);
		fakedAssert(faker.appAuthor(), "it", "appAuthor", i);
		fakedAssert(faker.appName(), "it", "appName", i);
		fakedAssert(faker.appVersion(), "it", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "it", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "it", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "it", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "it", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "it", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "it", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "it", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "it", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "it", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "it", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "it", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "it", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "it", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "it", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "it", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "it", "companyName", i);
		fakedAssert(faker.companyNoun(), "it", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "it", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "it", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "it", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "it", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "it", "databaseType", i);
		fakedAssert(faker.dateMonth(), "it", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "it", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "it", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "it", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "it", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "it", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "it", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "it", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "it", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "it", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "it", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "it", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "it", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "it", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "it", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "it", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "it", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "it", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "it", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "it", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "it", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "it", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "it", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "it", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "it", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "it", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "it", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "it", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "it", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "it", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "it", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "it", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "it", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "it", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "it", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "it", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "it", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "it", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "it", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "it", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "it", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "it", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "it", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "it", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "it", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "it", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "it", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "it", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "it", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "it", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "it", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "it", "loremText", i);
		fakedAssert(faker.loremWords(), "it", "loremWords", i);
		fakedAssert(faker.musicGenre(), "it", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "it", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "it", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "it", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "it", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "it", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "it", "nameGender", i);
		fakedAssert(faker.nameLastName(), "it", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "it", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "it", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "it", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "it", "nameName", i);
		fakedAssert(faker.namePrefix(), "it", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "it", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "it", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "it", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "it", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "it", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "it", "teamCreature", i);
		fakedAssert(faker.teamName(), "it", "teamName", i);
		fakedAssert(faker.vehicle(), "it", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "it", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "it", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "it", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "it", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "it", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "it", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "it", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "it", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "it", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "it", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "it", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "it", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "it", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ja;
    auto faker = new Faker_ja(35);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ja", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ja", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ja", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ja", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ja", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ja", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ja", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ja", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ja", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ja", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ja", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ja", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ja", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ja", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ja", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ja", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ja", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ja", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ja", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ja", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ja", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ja", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ja", "animalBear", i);
		fakedAssert(faker.animalBird(), "ja", "animalBird", i);
		fakedAssert(faker.animalCat(), "ja", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ja", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ja", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ja", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ja", "animalDog", i);
		fakedAssert(faker.animalFish(), "ja", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ja", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ja", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ja", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ja", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ja", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ja", "animalSnake", i);
		fakedAssert(faker.animalType(), "ja", "animalType", i);
		fakedAssert(faker.appAuthor(), "ja", "appAuthor", i);
		fakedAssert(faker.appName(), "ja", "appName", i);
		fakedAssert(faker.appVersion(), "ja", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ja", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ja", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ja", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ja", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ja", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ja", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ja", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ja", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ja", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ja", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ja", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ja", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ja", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ja", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ja", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ja", "companyName", i);
		fakedAssert(faker.companyNoun(), "ja", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ja", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ja", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ja", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ja", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ja", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ja", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ja", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ja", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ja", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ja", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ja", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ja", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ja", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ja", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ja", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ja", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ja", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ja", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ja", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ja", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ja", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ja", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ja", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ja", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ja", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ja", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ja", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ja", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ja", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ja", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ja", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ja", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ja", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ja", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ja", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ja", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ja", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ja", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ja", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ja", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ja", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ja", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ja", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ja", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ja", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ja", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ja", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ja", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ja", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ja", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ja", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ja", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ja", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ja", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ja", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ja", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ja", "loremText", i);
		fakedAssert(faker.loremWords(), "ja", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ja", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ja", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ja", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ja", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ja", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ja", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ja", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ja", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ja", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ja", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ja", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ja", "nameName", i);
		fakedAssert(faker.namePrefix(), "ja", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ja", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ja", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ja", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ja", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ja", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ja", "teamCreature", i);
		fakedAssert(faker.teamName(), "ja", "teamName", i);
		fakedAssert(faker.vehicle(), "ja", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ja", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ja", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ja", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ja", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ja", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ja", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ja", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ja", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ja", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ja", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ja", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ja", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ja", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ko;
    auto faker = new Faker_ko(36);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ko", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ko", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ko", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ko", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ko", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ko", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ko", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ko", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ko", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ko", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ko", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ko", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ko", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ko", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ko", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ko", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ko", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ko", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ko", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ko", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ko", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ko", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ko", "animalBear", i);
		fakedAssert(faker.animalBird(), "ko", "animalBird", i);
		fakedAssert(faker.animalCat(), "ko", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ko", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ko", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ko", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ko", "animalDog", i);
		fakedAssert(faker.animalFish(), "ko", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ko", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ko", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ko", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ko", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ko", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ko", "animalSnake", i);
		fakedAssert(faker.animalType(), "ko", "animalType", i);
		fakedAssert(faker.appAuthor(), "ko", "appAuthor", i);
		fakedAssert(faker.appName(), "ko", "appName", i);
		fakedAssert(faker.appVersion(), "ko", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ko", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ko", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ko", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ko", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ko", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ko", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ko", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ko", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ko", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ko", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ko", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ko", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ko", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ko", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ko", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ko", "companyName", i);
		fakedAssert(faker.companyNoun(), "ko", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ko", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ko", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ko", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ko", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ko", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ko", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ko", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ko", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ko", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ko", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ko", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ko", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ko", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ko", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ko", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ko", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ko", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ko", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ko", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ko", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ko", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ko", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ko", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ko", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ko", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ko", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ko", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ko", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ko", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ko", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ko", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ko", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ko", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ko", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ko", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ko", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ko", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ko", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ko", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ko", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ko", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ko", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ko", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ko", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ko", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ko", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ko", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ko", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ko", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ko", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ko", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ko", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ko", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ko", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ko", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ko", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ko", "loremText", i);
		fakedAssert(faker.loremWords(), "ko", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ko", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ko", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ko", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ko", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ko", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ko", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ko", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ko", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ko", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ko", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ko", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ko", "nameName", i);
		fakedAssert(faker.namePrefix(), "ko", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ko", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ko", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ko", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ko", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ko", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ko", "teamCreature", i);
		fakedAssert(faker.teamName(), "ko", "teamName", i);
		fakedAssert(faker.vehicle(), "ko", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ko", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ko", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ko", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ko", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ko", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ko", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ko", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ko", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ko", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ko", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ko", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ko", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ko", "wordVerb", i);

	}
}

unittest {
	import faked.faker_lv;
    auto faker = new Faker_lv(37);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "lv", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "lv", "addressCity", i);
		fakedAssert(faker.addressCityName(), "lv", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "lv", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "lv", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "lv", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "lv", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "lv", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "lv", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "lv", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "lv", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "lv", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "lv", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "lv", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "lv", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "lv", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "lv", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "lv", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "lv", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "lv", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "lv", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "lv", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "lv", "animalBear", i);
		fakedAssert(faker.animalBird(), "lv", "animalBird", i);
		fakedAssert(faker.animalCat(), "lv", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "lv", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "lv", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "lv", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "lv", "animalDog", i);
		fakedAssert(faker.animalFish(), "lv", "animalFish", i);
		fakedAssert(faker.animalHorse(), "lv", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "lv", "animalInsect", i);
		fakedAssert(faker.animalLion(), "lv", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "lv", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "lv", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "lv", "animalSnake", i);
		fakedAssert(faker.animalType(), "lv", "animalType", i);
		fakedAssert(faker.appAuthor(), "lv", "appAuthor", i);
		fakedAssert(faker.appName(), "lv", "appName", i);
		fakedAssert(faker.appVersion(), "lv", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "lv", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "lv", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "lv", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "lv", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "lv", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "lv", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "lv", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "lv", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "lv", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "lv", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "lv", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "lv", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "lv", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "lv", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "lv", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "lv", "companyName", i);
		fakedAssert(faker.companyNoun(), "lv", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "lv", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "lv", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "lv", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "lv", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "lv", "databaseType", i);
		fakedAssert(faker.dateMonth(), "lv", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "lv", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "lv", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "lv", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "lv", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "lv", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "lv", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "lv", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "lv", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "lv", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "lv", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "lv", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "lv", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "lv", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "lv", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "lv", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "lv", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "lv", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "lv", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "lv", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "lv", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "lv", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "lv", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "lv", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "lv", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "lv", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "lv", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "lv", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "lv", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "lv", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "lv", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "lv", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "lv", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "lv", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "lv", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "lv", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "lv", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "lv", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "lv", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "lv", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "lv", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "lv", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "lv", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "lv", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "lv", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "lv", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "lv", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "lv", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "lv", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "lv", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "lv", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "lv", "loremText", i);
		fakedAssert(faker.loremWords(), "lv", "loremWords", i);
		fakedAssert(faker.musicGenre(), "lv", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "lv", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "lv", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "lv", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "lv", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "lv", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "lv", "nameGender", i);
		fakedAssert(faker.nameLastName(), "lv", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "lv", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "lv", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "lv", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "lv", "nameName", i);
		fakedAssert(faker.namePrefix(), "lv", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "lv", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "lv", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "lv", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "lv", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "lv", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "lv", "teamCreature", i);
		fakedAssert(faker.teamName(), "lv", "teamName", i);
		fakedAssert(faker.vehicle(), "lv", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "lv", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "lv", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "lv", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "lv", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "lv", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "lv", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "lv", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "lv", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "lv", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "lv", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "lv", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "lv", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "lv", "wordVerb", i);

	}
}

unittest {
	import faked.faker_mk;
    auto faker = new Faker_mk(38);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "mk", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "mk", "addressCity", i);
		fakedAssert(faker.addressCityName(), "mk", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "mk", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "mk", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "mk", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "mk", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "mk", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "mk", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "mk", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "mk", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "mk", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "mk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "mk", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "mk", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "mk", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "mk", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "mk", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "mk", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "mk", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "mk", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "mk", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "mk", "animalBear", i);
		fakedAssert(faker.animalBird(), "mk", "animalBird", i);
		fakedAssert(faker.animalCat(), "mk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "mk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "mk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "mk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "mk", "animalDog", i);
		fakedAssert(faker.animalFish(), "mk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "mk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "mk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "mk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "mk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "mk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "mk", "animalSnake", i);
		fakedAssert(faker.animalType(), "mk", "animalType", i);
		fakedAssert(faker.appAuthor(), "mk", "appAuthor", i);
		fakedAssert(faker.appName(), "mk", "appName", i);
		fakedAssert(faker.appVersion(), "mk", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "mk", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "mk", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "mk", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "mk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "mk", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "mk", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "mk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "mk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "mk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "mk", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "mk", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "mk", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "mk", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "mk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "mk", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "mk", "companyName", i);
		fakedAssert(faker.companyNoun(), "mk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "mk", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "mk", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "mk", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "mk", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "mk", "databaseType", i);
		fakedAssert(faker.dateMonth(), "mk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "mk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "mk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "mk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "mk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "mk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "mk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "mk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "mk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "mk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "mk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "mk", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "mk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "mk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "mk", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "mk", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "mk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "mk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "mk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "mk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "mk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "mk", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "mk", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "mk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "mk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "mk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "mk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "mk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "mk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "mk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "mk", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "mk", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "mk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "mk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "mk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "mk", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "mk", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "mk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "mk", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "mk", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "mk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "mk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "mk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "mk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "mk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "mk", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "mk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "mk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "mk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "mk", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "mk", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "mk", "loremText", i);
		fakedAssert(faker.loremWords(), "mk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "mk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "mk", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "mk", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "mk", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "mk", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "mk", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "mk", "nameGender", i);
		fakedAssert(faker.nameLastName(), "mk", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "mk", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "mk", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "mk", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "mk", "nameName", i);
		fakedAssert(faker.namePrefix(), "mk", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "mk", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "mk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "mk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "mk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "mk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "mk", "teamCreature", i);
		fakedAssert(faker.teamName(), "mk", "teamName", i);
		fakedAssert(faker.vehicle(), "mk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "mk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "mk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "mk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "mk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "mk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "mk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "mk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "mk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "mk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "mk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "mk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "mk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "mk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nb_no;
    auto faker = new Faker_nb_no(39);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "nb_NO", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "nb_NO", "addressCity", i);
		fakedAssert(faker.addressCityName(), "nb_NO", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "nb_NO", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "nb_NO", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "nb_NO", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "nb_NO", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "nb_NO", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "nb_NO", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "nb_NO", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "nb_NO", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "nb_NO", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "nb_NO", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nb_NO", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "nb_NO", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "nb_NO", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "nb_NO", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "nb_NO", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "nb_NO", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "nb_NO", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "nb_NO", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "nb_NO", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "nb_NO", "animalBear", i);
		fakedAssert(faker.animalBird(), "nb_NO", "animalBird", i);
		fakedAssert(faker.animalCat(), "nb_NO", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nb_NO", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nb_NO", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nb_NO", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nb_NO", "animalDog", i);
		fakedAssert(faker.animalFish(), "nb_NO", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nb_NO", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nb_NO", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nb_NO", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nb_NO", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nb_NO", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nb_NO", "animalSnake", i);
		fakedAssert(faker.animalType(), "nb_NO", "animalType", i);
		fakedAssert(faker.appAuthor(), "nb_NO", "appAuthor", i);
		fakedAssert(faker.appName(), "nb_NO", "appName", i);
		fakedAssert(faker.appVersion(), "nb_NO", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "nb_NO", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "nb_NO", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "nb_NO", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "nb_NO", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nb_NO", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "nb_NO", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "nb_NO", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nb_NO", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nb_NO", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nb_NO", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "nb_NO", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "nb_NO", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "nb_NO", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nb_NO", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nb_NO", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "nb_NO", "companyName", i);
		fakedAssert(faker.companyNoun(), "nb_NO", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nb_NO", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "nb_NO", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "nb_NO", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "nb_NO", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "nb_NO", "databaseType", i);
		fakedAssert(faker.dateMonth(), "nb_NO", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nb_NO", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nb_NO", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nb_NO", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nb_NO", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nb_NO", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nb_NO", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nb_NO", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nb_NO", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nb_NO", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nb_NO", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "nb_NO", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "nb_NO", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nb_NO", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "nb_NO", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "nb_NO", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "nb_NO", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nb_NO", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nb_NO", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nb_NO", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nb_NO", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nb_NO", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "nb_NO", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "nb_NO", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nb_NO", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nb_NO", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nb_NO", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nb_NO", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nb_NO", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nb_NO", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nb_NO", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "nb_NO", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "nb_NO", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nb_NO", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nb_NO", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nb_NO", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "nb_NO", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "nb_NO", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nb_NO", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "nb_NO", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "nb_NO", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nb_NO", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nb_NO", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nb_NO", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nb_NO", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nb_NO", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "nb_NO", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nb_NO", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nb_NO", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nb_NO", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "nb_NO", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "nb_NO", "loremText", i);
		fakedAssert(faker.loremWords(), "nb_NO", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nb_NO", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nb_NO", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "nb_NO", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "nb_NO", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "nb_NO", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "nb_NO", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "nb_NO", "nameGender", i);
		fakedAssert(faker.nameLastName(), "nb_NO", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "nb_NO", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "nb_NO", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "nb_NO", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "nb_NO", "nameName", i);
		fakedAssert(faker.namePrefix(), "nb_NO", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "nb_NO", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "nb_NO", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nb_NO", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nb_NO", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nb_NO", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nb_NO", "teamCreature", i);
		fakedAssert(faker.teamName(), "nb_NO", "teamName", i);
		fakedAssert(faker.vehicle(), "nb_NO", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nb_NO", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nb_NO", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nb_NO", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nb_NO", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nb_NO", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nb_NO", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nb_NO", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nb_NO", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nb_NO", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nb_NO", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nb_NO", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nb_NO", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nb_NO", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ne;
    auto faker = new Faker_ne(40);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ne", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ne", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ne", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ne", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ne", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ne", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ne", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ne", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ne", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ne", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ne", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ne", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ne", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ne", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ne", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ne", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ne", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ne", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ne", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ne", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ne", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ne", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ne", "animalBear", i);
		fakedAssert(faker.animalBird(), "ne", "animalBird", i);
		fakedAssert(faker.animalCat(), "ne", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ne", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ne", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ne", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ne", "animalDog", i);
		fakedAssert(faker.animalFish(), "ne", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ne", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ne", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ne", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ne", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ne", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ne", "animalSnake", i);
		fakedAssert(faker.animalType(), "ne", "animalType", i);
		fakedAssert(faker.appAuthor(), "ne", "appAuthor", i);
		fakedAssert(faker.appName(), "ne", "appName", i);
		fakedAssert(faker.appVersion(), "ne", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ne", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ne", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ne", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ne", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ne", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ne", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ne", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ne", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ne", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ne", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ne", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ne", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ne", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ne", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ne", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ne", "companyName", i);
		fakedAssert(faker.companyNoun(), "ne", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ne", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ne", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ne", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ne", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ne", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ne", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ne", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ne", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ne", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ne", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ne", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ne", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ne", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ne", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ne", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ne", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ne", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ne", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ne", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ne", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ne", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ne", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ne", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ne", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ne", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ne", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ne", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ne", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ne", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ne", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ne", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ne", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ne", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ne", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ne", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ne", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ne", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ne", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ne", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ne", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ne", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ne", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ne", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ne", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ne", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ne", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ne", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ne", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ne", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ne", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ne", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ne", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ne", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ne", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ne", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ne", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ne", "loremText", i);
		fakedAssert(faker.loremWords(), "ne", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ne", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ne", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ne", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ne", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ne", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ne", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ne", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ne", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ne", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ne", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ne", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ne", "nameName", i);
		fakedAssert(faker.namePrefix(), "ne", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ne", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ne", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ne", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ne", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ne", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ne", "teamCreature", i);
		fakedAssert(faker.teamName(), "ne", "teamName", i);
		fakedAssert(faker.vehicle(), "ne", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ne", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ne", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ne", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ne", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ne", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ne", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ne", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ne", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ne", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ne", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ne", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ne", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ne", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nl;
    auto faker = new Faker_nl(41);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "nl", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "nl", "addressCity", i);
		fakedAssert(faker.addressCityName(), "nl", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "nl", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "nl", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "nl", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "nl", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "nl", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "nl", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "nl", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "nl", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "nl", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "nl", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nl", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "nl", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "nl", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "nl", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "nl", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "nl", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "nl", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "nl", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "nl", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "nl", "animalBear", i);
		fakedAssert(faker.animalBird(), "nl", "animalBird", i);
		fakedAssert(faker.animalCat(), "nl", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nl", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nl", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nl", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nl", "animalDog", i);
		fakedAssert(faker.animalFish(), "nl", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nl", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nl", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nl", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nl", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nl", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nl", "animalSnake", i);
		fakedAssert(faker.animalType(), "nl", "animalType", i);
		fakedAssert(faker.appAuthor(), "nl", "appAuthor", i);
		fakedAssert(faker.appName(), "nl", "appName", i);
		fakedAssert(faker.appVersion(), "nl", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "nl", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "nl", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "nl", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "nl", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nl", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "nl", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "nl", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nl", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nl", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nl", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "nl", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "nl", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "nl", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nl", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nl", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "nl", "companyName", i);
		fakedAssert(faker.companyNoun(), "nl", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nl", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "nl", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "nl", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "nl", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "nl", "databaseType", i);
		fakedAssert(faker.dateMonth(), "nl", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nl", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nl", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nl", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nl", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nl", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nl", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nl", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nl", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nl", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nl", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "nl", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "nl", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nl", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "nl", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "nl", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "nl", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nl", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nl", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nl", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nl", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nl", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "nl", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "nl", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nl", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nl", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nl", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nl", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nl", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nl", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nl", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "nl", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "nl", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nl", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nl", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nl", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "nl", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "nl", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nl", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "nl", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "nl", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nl", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nl", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nl", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nl", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nl", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "nl", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nl", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nl", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nl", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "nl", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "nl", "loremText", i);
		fakedAssert(faker.loremWords(), "nl", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nl", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nl", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "nl", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "nl", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "nl", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "nl", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "nl", "nameGender", i);
		fakedAssert(faker.nameLastName(), "nl", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "nl", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "nl", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "nl", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "nl", "nameName", i);
		fakedAssert(faker.namePrefix(), "nl", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "nl", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "nl", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nl", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nl", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nl", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nl", "teamCreature", i);
		fakedAssert(faker.teamName(), "nl", "teamName", i);
		fakedAssert(faker.vehicle(), "nl", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nl", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nl", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nl", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nl", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nl", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nl", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nl", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nl", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nl", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nl", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nl", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nl", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nl", "wordVerb", i);

	}
}

unittest {
	import faked.faker_nl_be;
    auto faker = new Faker_nl_be(42);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "nl_BE", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "nl_BE", "addressCity", i);
		fakedAssert(faker.addressCityName(), "nl_BE", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "nl_BE", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "nl_BE", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "nl_BE", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "nl_BE", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "nl_BE", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "nl_BE", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "nl_BE", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "nl_BE", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "nl_BE", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "nl_BE", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "nl_BE", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "nl_BE", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "nl_BE", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "nl_BE", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "nl_BE", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "nl_BE", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "nl_BE", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "nl_BE", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "nl_BE", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "nl_BE", "animalBear", i);
		fakedAssert(faker.animalBird(), "nl_BE", "animalBird", i);
		fakedAssert(faker.animalCat(), "nl_BE", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "nl_BE", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "nl_BE", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "nl_BE", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "nl_BE", "animalDog", i);
		fakedAssert(faker.animalFish(), "nl_BE", "animalFish", i);
		fakedAssert(faker.animalHorse(), "nl_BE", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "nl_BE", "animalInsect", i);
		fakedAssert(faker.animalLion(), "nl_BE", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "nl_BE", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "nl_BE", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "nl_BE", "animalSnake", i);
		fakedAssert(faker.animalType(), "nl_BE", "animalType", i);
		fakedAssert(faker.appAuthor(), "nl_BE", "appAuthor", i);
		fakedAssert(faker.appName(), "nl_BE", "appName", i);
		fakedAssert(faker.appVersion(), "nl_BE", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "nl_BE", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "nl_BE", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "nl_BE", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "nl_BE", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "nl_BE", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "nl_BE", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "nl_BE", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "nl_BE", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "nl_BE", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "nl_BE", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "nl_BE", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "nl_BE", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "nl_BE", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "nl_BE", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "nl_BE", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "nl_BE", "companyName", i);
		fakedAssert(faker.companyNoun(), "nl_BE", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "nl_BE", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "nl_BE", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "nl_BE", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "nl_BE", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "nl_BE", "databaseType", i);
		fakedAssert(faker.dateMonth(), "nl_BE", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "nl_BE", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "nl_BE", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "nl_BE", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "nl_BE", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "nl_BE", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "nl_BE", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "nl_BE", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "nl_BE", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "nl_BE", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "nl_BE", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "nl_BE", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "nl_BE", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "nl_BE", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "nl_BE", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "nl_BE", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "nl_BE", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "nl_BE", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "nl_BE", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "nl_BE", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "nl_BE", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "nl_BE", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "nl_BE", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "nl_BE", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "nl_BE", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "nl_BE", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "nl_BE", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "nl_BE", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "nl_BE", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "nl_BE", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "nl_BE", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "nl_BE", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "nl_BE", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "nl_BE", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "nl_BE", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "nl_BE", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "nl_BE", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "nl_BE", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "nl_BE", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "nl_BE", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "nl_BE", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "nl_BE", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "nl_BE", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "nl_BE", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "nl_BE", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "nl_BE", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "nl_BE", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "nl_BE", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "nl_BE", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "nl_BE", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "nl_BE", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "nl_BE", "loremText", i);
		fakedAssert(faker.loremWords(), "nl_BE", "loremWords", i);
		fakedAssert(faker.musicGenre(), "nl_BE", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "nl_BE", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "nl_BE", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "nl_BE", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "nl_BE", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "nl_BE", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "nl_BE", "nameGender", i);
		fakedAssert(faker.nameLastName(), "nl_BE", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "nl_BE", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "nl_BE", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "nl_BE", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "nl_BE", "nameName", i);
		fakedAssert(faker.namePrefix(), "nl_BE", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "nl_BE", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "nl_BE", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "nl_BE", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "nl_BE", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "nl_BE", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "nl_BE", "teamCreature", i);
		fakedAssert(faker.teamName(), "nl_BE", "teamName", i);
		fakedAssert(faker.vehicle(), "nl_BE", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "nl_BE", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "nl_BE", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "nl_BE", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "nl_BE", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "nl_BE", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "nl_BE", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "nl_BE", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "nl_BE", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "nl_BE", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "nl_BE", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "nl_BE", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "nl_BE", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "nl_BE", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pl;
    auto faker = new Faker_pl(43);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "pl", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "pl", "addressCity", i);
		fakedAssert(faker.addressCityName(), "pl", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "pl", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "pl", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "pl", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "pl", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "pl", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "pl", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "pl", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "pl", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "pl", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "pl", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pl", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "pl", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "pl", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "pl", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "pl", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "pl", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "pl", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "pl", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "pl", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "pl", "animalBear", i);
		fakedAssert(faker.animalBird(), "pl", "animalBird", i);
		fakedAssert(faker.animalCat(), "pl", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pl", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pl", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pl", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pl", "animalDog", i);
		fakedAssert(faker.animalFish(), "pl", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pl", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pl", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pl", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pl", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pl", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pl", "animalSnake", i);
		fakedAssert(faker.animalType(), "pl", "animalType", i);
		fakedAssert(faker.appAuthor(), "pl", "appAuthor", i);
		fakedAssert(faker.appName(), "pl", "appName", i);
		fakedAssert(faker.appVersion(), "pl", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "pl", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "pl", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "pl", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "pl", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pl", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "pl", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "pl", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pl", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pl", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pl", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "pl", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "pl", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "pl", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pl", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pl", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "pl", "companyName", i);
		fakedAssert(faker.companyNoun(), "pl", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pl", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "pl", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "pl", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "pl", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "pl", "databaseType", i);
		fakedAssert(faker.dateMonth(), "pl", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pl", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pl", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pl", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pl", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pl", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pl", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pl", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pl", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pl", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pl", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "pl", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "pl", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pl", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "pl", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "pl", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "pl", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pl", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pl", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pl", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pl", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pl", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "pl", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "pl", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pl", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pl", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pl", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pl", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pl", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pl", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pl", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "pl", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "pl", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pl", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pl", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pl", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "pl", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "pl", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pl", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "pl", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "pl", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pl", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pl", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pl", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pl", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pl", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "pl", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pl", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pl", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pl", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "pl", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "pl", "loremText", i);
		fakedAssert(faker.loremWords(), "pl", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pl", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pl", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "pl", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "pl", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "pl", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "pl", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "pl", "nameGender", i);
		fakedAssert(faker.nameLastName(), "pl", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "pl", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "pl", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "pl", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "pl", "nameName", i);
		fakedAssert(faker.namePrefix(), "pl", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "pl", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "pl", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pl", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pl", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pl", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pl", "teamCreature", i);
		fakedAssert(faker.teamName(), "pl", "teamName", i);
		fakedAssert(faker.vehicle(), "pl", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pl", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pl", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pl", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pl", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pl", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pl", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pl", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pl", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pl", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pl", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pl", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pl", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pl", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pt_br;
    auto faker = new Faker_pt_br(44);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "pt_BR", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "pt_BR", "addressCity", i);
		fakedAssert(faker.addressCityName(), "pt_BR", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "pt_BR", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "pt_BR", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "pt_BR", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "pt_BR", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "pt_BR", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "pt_BR", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "pt_BR", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "pt_BR", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "pt_BR", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "pt_BR", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pt_BR", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "pt_BR", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "pt_BR", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "pt_BR", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "pt_BR", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "pt_BR", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "pt_BR", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "pt_BR", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "pt_BR", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "pt_BR", "animalBear", i);
		fakedAssert(faker.animalBird(), "pt_BR", "animalBird", i);
		fakedAssert(faker.animalCat(), "pt_BR", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pt_BR", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pt_BR", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pt_BR", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pt_BR", "animalDog", i);
		fakedAssert(faker.animalFish(), "pt_BR", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pt_BR", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pt_BR", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pt_BR", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pt_BR", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pt_BR", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pt_BR", "animalSnake", i);
		fakedAssert(faker.animalType(), "pt_BR", "animalType", i);
		fakedAssert(faker.appAuthor(), "pt_BR", "appAuthor", i);
		fakedAssert(faker.appName(), "pt_BR", "appName", i);
		fakedAssert(faker.appVersion(), "pt_BR", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "pt_BR", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "pt_BR", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "pt_BR", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "pt_BR", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pt_BR", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "pt_BR", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "pt_BR", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pt_BR", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pt_BR", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pt_BR", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "pt_BR", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "pt_BR", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "pt_BR", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pt_BR", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pt_BR", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "pt_BR", "companyName", i);
		fakedAssert(faker.companyNoun(), "pt_BR", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pt_BR", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "pt_BR", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "pt_BR", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "pt_BR", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "pt_BR", "databaseType", i);
		fakedAssert(faker.dateMonth(), "pt_BR", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pt_BR", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pt_BR", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pt_BR", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pt_BR", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pt_BR", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pt_BR", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pt_BR", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pt_BR", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pt_BR", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pt_BR", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "pt_BR", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "pt_BR", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pt_BR", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "pt_BR", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "pt_BR", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "pt_BR", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pt_BR", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pt_BR", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pt_BR", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pt_BR", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pt_BR", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "pt_BR", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "pt_BR", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pt_BR", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pt_BR", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pt_BR", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pt_BR", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pt_BR", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pt_BR", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pt_BR", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "pt_BR", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "pt_BR", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pt_BR", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pt_BR", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pt_BR", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "pt_BR", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "pt_BR", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pt_BR", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "pt_BR", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "pt_BR", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pt_BR", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pt_BR", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pt_BR", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pt_BR", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pt_BR", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "pt_BR", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pt_BR", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pt_BR", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pt_BR", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "pt_BR", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "pt_BR", "loremText", i);
		fakedAssert(faker.loremWords(), "pt_BR", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pt_BR", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pt_BR", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "pt_BR", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "pt_BR", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "pt_BR", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "pt_BR", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "pt_BR", "nameGender", i);
		fakedAssert(faker.nameLastName(), "pt_BR", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "pt_BR", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "pt_BR", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "pt_BR", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "pt_BR", "nameName", i);
		fakedAssert(faker.namePrefix(), "pt_BR", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "pt_BR", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "pt_BR", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pt_BR", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pt_BR", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pt_BR", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pt_BR", "teamCreature", i);
		fakedAssert(faker.teamName(), "pt_BR", "teamName", i);
		fakedAssert(faker.vehicle(), "pt_BR", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pt_BR", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pt_BR", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pt_BR", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pt_BR", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pt_BR", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pt_BR", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pt_BR", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pt_BR", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pt_BR", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pt_BR", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pt_BR", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pt_BR", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pt_BR", "wordVerb", i);

	}
}

unittest {
	import faked.faker_pt_pt;
    auto faker = new Faker_pt_pt(45);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "pt_PT", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "pt_PT", "addressCity", i);
		fakedAssert(faker.addressCityName(), "pt_PT", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "pt_PT", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "pt_PT", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "pt_PT", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "pt_PT", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "pt_PT", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "pt_PT", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "pt_PT", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "pt_PT", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "pt_PT", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "pt_PT", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "pt_PT", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "pt_PT", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "pt_PT", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "pt_PT", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "pt_PT", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "pt_PT", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "pt_PT", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "pt_PT", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "pt_PT", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "pt_PT", "animalBear", i);
		fakedAssert(faker.animalBird(), "pt_PT", "animalBird", i);
		fakedAssert(faker.animalCat(), "pt_PT", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "pt_PT", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "pt_PT", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "pt_PT", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "pt_PT", "animalDog", i);
		fakedAssert(faker.animalFish(), "pt_PT", "animalFish", i);
		fakedAssert(faker.animalHorse(), "pt_PT", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "pt_PT", "animalInsect", i);
		fakedAssert(faker.animalLion(), "pt_PT", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "pt_PT", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "pt_PT", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "pt_PT", "animalSnake", i);
		fakedAssert(faker.animalType(), "pt_PT", "animalType", i);
		fakedAssert(faker.appAuthor(), "pt_PT", "appAuthor", i);
		fakedAssert(faker.appName(), "pt_PT", "appName", i);
		fakedAssert(faker.appVersion(), "pt_PT", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "pt_PT", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "pt_PT", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "pt_PT", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "pt_PT", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "pt_PT", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "pt_PT", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "pt_PT", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "pt_PT", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "pt_PT", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "pt_PT", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "pt_PT", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "pt_PT", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "pt_PT", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "pt_PT", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "pt_PT", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "pt_PT", "companyName", i);
		fakedAssert(faker.companyNoun(), "pt_PT", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "pt_PT", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "pt_PT", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "pt_PT", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "pt_PT", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "pt_PT", "databaseType", i);
		fakedAssert(faker.dateMonth(), "pt_PT", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "pt_PT", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "pt_PT", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "pt_PT", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "pt_PT", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "pt_PT", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "pt_PT", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "pt_PT", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "pt_PT", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "pt_PT", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "pt_PT", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "pt_PT", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "pt_PT", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "pt_PT", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "pt_PT", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "pt_PT", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "pt_PT", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "pt_PT", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "pt_PT", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "pt_PT", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "pt_PT", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "pt_PT", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "pt_PT", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "pt_PT", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "pt_PT", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "pt_PT", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "pt_PT", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "pt_PT", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "pt_PT", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "pt_PT", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "pt_PT", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "pt_PT", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "pt_PT", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "pt_PT", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "pt_PT", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "pt_PT", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "pt_PT", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "pt_PT", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "pt_PT", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "pt_PT", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "pt_PT", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "pt_PT", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "pt_PT", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "pt_PT", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "pt_PT", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "pt_PT", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "pt_PT", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "pt_PT", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "pt_PT", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "pt_PT", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "pt_PT", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "pt_PT", "loremText", i);
		fakedAssert(faker.loremWords(), "pt_PT", "loremWords", i);
		fakedAssert(faker.musicGenre(), "pt_PT", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "pt_PT", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "pt_PT", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "pt_PT", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "pt_PT", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "pt_PT", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "pt_PT", "nameGender", i);
		fakedAssert(faker.nameLastName(), "pt_PT", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "pt_PT", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "pt_PT", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "pt_PT", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "pt_PT", "nameName", i);
		fakedAssert(faker.namePrefix(), "pt_PT", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "pt_PT", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "pt_PT", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "pt_PT", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "pt_PT", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "pt_PT", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "pt_PT", "teamCreature", i);
		fakedAssert(faker.teamName(), "pt_PT", "teamName", i);
		fakedAssert(faker.vehicle(), "pt_PT", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "pt_PT", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "pt_PT", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "pt_PT", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "pt_PT", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "pt_PT", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "pt_PT", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "pt_PT", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "pt_PT", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "pt_PT", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "pt_PT", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "pt_PT", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "pt_PT", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "pt_PT", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ro;
    auto faker = new Faker_ro(46);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ro", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ro", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ro", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ro", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ro", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ro", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ro", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ro", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ro", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ro", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ro", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ro", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ro", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ro", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ro", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ro", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ro", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ro", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ro", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ro", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ro", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ro", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ro", "animalBear", i);
		fakedAssert(faker.animalBird(), "ro", "animalBird", i);
		fakedAssert(faker.animalCat(), "ro", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ro", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ro", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ro", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ro", "animalDog", i);
		fakedAssert(faker.animalFish(), "ro", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ro", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ro", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ro", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ro", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ro", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ro", "animalSnake", i);
		fakedAssert(faker.animalType(), "ro", "animalType", i);
		fakedAssert(faker.appAuthor(), "ro", "appAuthor", i);
		fakedAssert(faker.appName(), "ro", "appName", i);
		fakedAssert(faker.appVersion(), "ro", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ro", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ro", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ro", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ro", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ro", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ro", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ro", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ro", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ro", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ro", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ro", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ro", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ro", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ro", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ro", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ro", "companyName", i);
		fakedAssert(faker.companyNoun(), "ro", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ro", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ro", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ro", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ro", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ro", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ro", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ro", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ro", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ro", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ro", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ro", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ro", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ro", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ro", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ro", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ro", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ro", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ro", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ro", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ro", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ro", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ro", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ro", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ro", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ro", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ro", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ro", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ro", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ro", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ro", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ro", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ro", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ro", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ro", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ro", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ro", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ro", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ro", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ro", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ro", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ro", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ro", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ro", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ro", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ro", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ro", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ro", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ro", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ro", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ro", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ro", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ro", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ro", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ro", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ro", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ro", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ro", "loremText", i);
		fakedAssert(faker.loremWords(), "ro", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ro", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ro", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ro", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ro", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ro", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ro", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ro", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ro", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ro", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ro", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ro", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ro", "nameName", i);
		fakedAssert(faker.namePrefix(), "ro", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ro", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ro", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ro", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ro", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ro", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ro", "teamCreature", i);
		fakedAssert(faker.teamName(), "ro", "teamName", i);
		fakedAssert(faker.vehicle(), "ro", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ro", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ro", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ro", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ro", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ro", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ro", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ro", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ro", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ro", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ro", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ro", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ro", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ro", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ru;
    auto faker = new Faker_ru(47);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ru", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ru", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ru", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ru", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ru", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ru", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ru", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ru", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ru", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ru", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ru", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ru", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ru", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ru", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ru", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ru", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ru", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ru", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ru", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ru", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ru", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ru", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ru", "animalBear", i);
		fakedAssert(faker.animalBird(), "ru", "animalBird", i);
		fakedAssert(faker.animalCat(), "ru", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ru", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ru", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ru", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ru", "animalDog", i);
		fakedAssert(faker.animalFish(), "ru", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ru", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ru", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ru", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ru", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ru", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ru", "animalSnake", i);
		fakedAssert(faker.animalType(), "ru", "animalType", i);
		fakedAssert(faker.appAuthor(), "ru", "appAuthor", i);
		fakedAssert(faker.appName(), "ru", "appName", i);
		fakedAssert(faker.appVersion(), "ru", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ru", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ru", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ru", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ru", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ru", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ru", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ru", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ru", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ru", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ru", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ru", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ru", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ru", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ru", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ru", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ru", "companyName", i);
		fakedAssert(faker.companyNoun(), "ru", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ru", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ru", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ru", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ru", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ru", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ru", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ru", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ru", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ru", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ru", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ru", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ru", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ru", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ru", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ru", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ru", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ru", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ru", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ru", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ru", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ru", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ru", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ru", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ru", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ru", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ru", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ru", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ru", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ru", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ru", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ru", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ru", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ru", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ru", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ru", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ru", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ru", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ru", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ru", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ru", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ru", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ru", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ru", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ru", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ru", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ru", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ru", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ru", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ru", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ru", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ru", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ru", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ru", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ru", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ru", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ru", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ru", "loremText", i);
		fakedAssert(faker.loremWords(), "ru", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ru", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ru", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ru", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ru", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ru", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ru", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ru", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ru", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ru", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ru", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ru", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ru", "nameName", i);
		fakedAssert(faker.namePrefix(), "ru", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ru", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ru", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ru", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ru", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ru", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ru", "teamCreature", i);
		fakedAssert(faker.teamName(), "ru", "teamName", i);
		fakedAssert(faker.vehicle(), "ru", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ru", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ru", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ru", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ru", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ru", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ru", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ru", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ru", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ru", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ru", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ru", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ru", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ru", "wordVerb", i);

	}
}

unittest {
	import faked.faker_sk;
    auto faker = new Faker_sk(48);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "sk", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "sk", "addressCity", i);
		fakedAssert(faker.addressCityName(), "sk", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "sk", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "sk", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "sk", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "sk", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "sk", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "sk", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "sk", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "sk", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "sk", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "sk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "sk", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "sk", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "sk", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "sk", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "sk", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "sk", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "sk", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "sk", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "sk", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "sk", "animalBear", i);
		fakedAssert(faker.animalBird(), "sk", "animalBird", i);
		fakedAssert(faker.animalCat(), "sk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "sk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "sk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "sk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "sk", "animalDog", i);
		fakedAssert(faker.animalFish(), "sk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "sk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "sk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "sk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "sk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "sk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "sk", "animalSnake", i);
		fakedAssert(faker.animalType(), "sk", "animalType", i);
		fakedAssert(faker.appAuthor(), "sk", "appAuthor", i);
		fakedAssert(faker.appName(), "sk", "appName", i);
		fakedAssert(faker.appVersion(), "sk", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "sk", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "sk", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "sk", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "sk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "sk", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "sk", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "sk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "sk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "sk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "sk", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "sk", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "sk", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "sk", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "sk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "sk", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "sk", "companyName", i);
		fakedAssert(faker.companyNoun(), "sk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "sk", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "sk", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "sk", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "sk", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "sk", "databaseType", i);
		fakedAssert(faker.dateMonth(), "sk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "sk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "sk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "sk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "sk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "sk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "sk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "sk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "sk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "sk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "sk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "sk", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "sk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "sk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "sk", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "sk", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "sk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "sk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "sk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "sk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "sk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "sk", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "sk", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "sk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "sk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "sk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "sk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "sk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "sk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "sk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "sk", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "sk", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "sk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "sk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "sk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "sk", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "sk", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "sk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "sk", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "sk", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "sk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "sk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "sk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "sk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "sk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "sk", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "sk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "sk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "sk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "sk", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "sk", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "sk", "loremText", i);
		fakedAssert(faker.loremWords(), "sk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "sk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "sk", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "sk", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "sk", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "sk", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "sk", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "sk", "nameGender", i);
		fakedAssert(faker.nameLastName(), "sk", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "sk", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "sk", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "sk", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "sk", "nameName", i);
		fakedAssert(faker.namePrefix(), "sk", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "sk", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "sk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "sk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "sk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "sk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "sk", "teamCreature", i);
		fakedAssert(faker.teamName(), "sk", "teamName", i);
		fakedAssert(faker.vehicle(), "sk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "sk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "sk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "sk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "sk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "sk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "sk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "sk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "sk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "sk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "sk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "sk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "sk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "sk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_sv;
    auto faker = new Faker_sv(49);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "sv", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "sv", "addressCity", i);
		fakedAssert(faker.addressCityName(), "sv", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "sv", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "sv", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "sv", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "sv", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "sv", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "sv", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "sv", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "sv", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "sv", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "sv", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "sv", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "sv", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "sv", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "sv", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "sv", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "sv", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "sv", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "sv", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "sv", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "sv", "animalBear", i);
		fakedAssert(faker.animalBird(), "sv", "animalBird", i);
		fakedAssert(faker.animalCat(), "sv", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "sv", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "sv", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "sv", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "sv", "animalDog", i);
		fakedAssert(faker.animalFish(), "sv", "animalFish", i);
		fakedAssert(faker.animalHorse(), "sv", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "sv", "animalInsect", i);
		fakedAssert(faker.animalLion(), "sv", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "sv", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "sv", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "sv", "animalSnake", i);
		fakedAssert(faker.animalType(), "sv", "animalType", i);
		fakedAssert(faker.appAuthor(), "sv", "appAuthor", i);
		fakedAssert(faker.appName(), "sv", "appName", i);
		fakedAssert(faker.appVersion(), "sv", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "sv", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "sv", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "sv", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "sv", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "sv", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "sv", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "sv", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "sv", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "sv", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "sv", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "sv", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "sv", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "sv", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "sv", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "sv", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "sv", "companyName", i);
		fakedAssert(faker.companyNoun(), "sv", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "sv", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "sv", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "sv", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "sv", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "sv", "databaseType", i);
		fakedAssert(faker.dateMonth(), "sv", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "sv", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "sv", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "sv", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "sv", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "sv", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "sv", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "sv", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "sv", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "sv", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "sv", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "sv", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "sv", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "sv", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "sv", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "sv", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "sv", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "sv", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "sv", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "sv", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "sv", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "sv", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "sv", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "sv", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "sv", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "sv", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "sv", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "sv", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "sv", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "sv", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "sv", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "sv", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "sv", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "sv", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "sv", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "sv", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "sv", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "sv", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "sv", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "sv", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "sv", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "sv", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "sv", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "sv", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "sv", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "sv", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "sv", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "sv", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "sv", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "sv", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "sv", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "sv", "loremText", i);
		fakedAssert(faker.loremWords(), "sv", "loremWords", i);
		fakedAssert(faker.musicGenre(), "sv", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "sv", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "sv", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "sv", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "sv", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "sv", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "sv", "nameGender", i);
		fakedAssert(faker.nameLastName(), "sv", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "sv", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "sv", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "sv", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "sv", "nameName", i);
		fakedAssert(faker.namePrefix(), "sv", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "sv", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "sv", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "sv", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "sv", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "sv", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "sv", "teamCreature", i);
		fakedAssert(faker.teamName(), "sv", "teamName", i);
		fakedAssert(faker.vehicle(), "sv", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "sv", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "sv", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "sv", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "sv", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "sv", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "sv", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "sv", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "sv", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "sv", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "sv", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "sv", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "sv", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "sv", "wordVerb", i);

	}
}

unittest {
	import faked.faker_tr;
    auto faker = new Faker_tr(50);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "tr", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "tr", "addressCity", i);
		fakedAssert(faker.addressCityName(), "tr", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "tr", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "tr", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "tr", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "tr", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "tr", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "tr", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "tr", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "tr", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "tr", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "tr", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "tr", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "tr", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "tr", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "tr", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "tr", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "tr", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "tr", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "tr", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "tr", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "tr", "animalBear", i);
		fakedAssert(faker.animalBird(), "tr", "animalBird", i);
		fakedAssert(faker.animalCat(), "tr", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "tr", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "tr", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "tr", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "tr", "animalDog", i);
		fakedAssert(faker.animalFish(), "tr", "animalFish", i);
		fakedAssert(faker.animalHorse(), "tr", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "tr", "animalInsect", i);
		fakedAssert(faker.animalLion(), "tr", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "tr", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "tr", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "tr", "animalSnake", i);
		fakedAssert(faker.animalType(), "tr", "animalType", i);
		fakedAssert(faker.appAuthor(), "tr", "appAuthor", i);
		fakedAssert(faker.appName(), "tr", "appName", i);
		fakedAssert(faker.appVersion(), "tr", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "tr", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "tr", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "tr", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "tr", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "tr", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "tr", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "tr", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "tr", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "tr", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "tr", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "tr", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "tr", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "tr", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "tr", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "tr", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "tr", "companyName", i);
		fakedAssert(faker.companyNoun(), "tr", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "tr", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "tr", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "tr", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "tr", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "tr", "databaseType", i);
		fakedAssert(faker.dateMonth(), "tr", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "tr", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "tr", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "tr", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "tr", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "tr", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "tr", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "tr", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "tr", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "tr", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "tr", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "tr", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "tr", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "tr", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "tr", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "tr", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "tr", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "tr", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "tr", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "tr", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "tr", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "tr", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "tr", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "tr", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "tr", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "tr", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "tr", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "tr", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "tr", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "tr", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "tr", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "tr", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "tr", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "tr", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "tr", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "tr", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "tr", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "tr", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "tr", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "tr", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "tr", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "tr", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "tr", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "tr", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "tr", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "tr", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "tr", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "tr", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "tr", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "tr", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "tr", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "tr", "loremText", i);
		fakedAssert(faker.loremWords(), "tr", "loremWords", i);
		fakedAssert(faker.musicGenre(), "tr", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "tr", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "tr", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "tr", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "tr", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "tr", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "tr", "nameGender", i);
		fakedAssert(faker.nameLastName(), "tr", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "tr", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "tr", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "tr", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "tr", "nameName", i);
		fakedAssert(faker.namePrefix(), "tr", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "tr", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "tr", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "tr", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "tr", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "tr", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "tr", "teamCreature", i);
		fakedAssert(faker.teamName(), "tr", "teamName", i);
		fakedAssert(faker.vehicle(), "tr", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "tr", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "tr", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "tr", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "tr", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "tr", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "tr", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "tr", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "tr", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "tr", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "tr", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "tr", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "tr", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "tr", "wordVerb", i);

	}
}

unittest {
	import faked.faker_uk;
    auto faker = new Faker_uk(51);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "uk", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "uk", "addressCity", i);
		fakedAssert(faker.addressCityName(), "uk", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "uk", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "uk", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "uk", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "uk", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "uk", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "uk", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "uk", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "uk", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "uk", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "uk", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "uk", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "uk", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "uk", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "uk", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "uk", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "uk", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "uk", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "uk", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "uk", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "uk", "animalBear", i);
		fakedAssert(faker.animalBird(), "uk", "animalBird", i);
		fakedAssert(faker.animalCat(), "uk", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "uk", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "uk", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "uk", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "uk", "animalDog", i);
		fakedAssert(faker.animalFish(), "uk", "animalFish", i);
		fakedAssert(faker.animalHorse(), "uk", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "uk", "animalInsect", i);
		fakedAssert(faker.animalLion(), "uk", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "uk", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "uk", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "uk", "animalSnake", i);
		fakedAssert(faker.animalType(), "uk", "animalType", i);
		fakedAssert(faker.appAuthor(), "uk", "appAuthor", i);
		fakedAssert(faker.appName(), "uk", "appName", i);
		fakedAssert(faker.appVersion(), "uk", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "uk", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "uk", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "uk", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "uk", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "uk", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "uk", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "uk", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "uk", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "uk", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "uk", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "uk", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "uk", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "uk", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "uk", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "uk", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "uk", "companyName", i);
		fakedAssert(faker.companyNoun(), "uk", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "uk", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "uk", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "uk", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "uk", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "uk", "databaseType", i);
		fakedAssert(faker.dateMonth(), "uk", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "uk", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "uk", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "uk", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "uk", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "uk", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "uk", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "uk", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "uk", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "uk", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "uk", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "uk", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "uk", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "uk", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "uk", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "uk", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "uk", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "uk", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "uk", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "uk", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "uk", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "uk", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "uk", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "uk", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "uk", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "uk", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "uk", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "uk", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "uk", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "uk", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "uk", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "uk", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "uk", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "uk", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "uk", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "uk", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "uk", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "uk", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "uk", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "uk", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "uk", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "uk", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "uk", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "uk", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "uk", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "uk", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "uk", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "uk", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "uk", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "uk", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "uk", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "uk", "loremText", i);
		fakedAssert(faker.loremWords(), "uk", "loremWords", i);
		fakedAssert(faker.musicGenre(), "uk", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "uk", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "uk", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "uk", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "uk", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "uk", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "uk", "nameGender", i);
		fakedAssert(faker.nameLastName(), "uk", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "uk", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "uk", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "uk", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "uk", "nameName", i);
		fakedAssert(faker.namePrefix(), "uk", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "uk", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "uk", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "uk", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "uk", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "uk", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "uk", "teamCreature", i);
		fakedAssert(faker.teamName(), "uk", "teamName", i);
		fakedAssert(faker.vehicle(), "uk", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "uk", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "uk", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "uk", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "uk", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "uk", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "uk", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "uk", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "uk", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "uk", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "uk", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "uk", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "uk", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "uk", "wordVerb", i);

	}
}

unittest {
	import faked.faker_ur;
    auto faker = new Faker_ur(52);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "ur", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "ur", "addressCity", i);
		fakedAssert(faker.addressCityName(), "ur", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "ur", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "ur", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "ur", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "ur", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "ur", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "ur", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "ur", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "ur", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "ur", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "ur", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "ur", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "ur", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "ur", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "ur", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "ur", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "ur", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "ur", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "ur", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "ur", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "ur", "animalBear", i);
		fakedAssert(faker.animalBird(), "ur", "animalBird", i);
		fakedAssert(faker.animalCat(), "ur", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "ur", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "ur", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "ur", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "ur", "animalDog", i);
		fakedAssert(faker.animalFish(), "ur", "animalFish", i);
		fakedAssert(faker.animalHorse(), "ur", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "ur", "animalInsect", i);
		fakedAssert(faker.animalLion(), "ur", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "ur", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "ur", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "ur", "animalSnake", i);
		fakedAssert(faker.animalType(), "ur", "animalType", i);
		fakedAssert(faker.appAuthor(), "ur", "appAuthor", i);
		fakedAssert(faker.appName(), "ur", "appName", i);
		fakedAssert(faker.appVersion(), "ur", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "ur", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "ur", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "ur", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "ur", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "ur", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "ur", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "ur", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "ur", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "ur", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "ur", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "ur", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "ur", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "ur", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "ur", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "ur", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "ur", "companyName", i);
		fakedAssert(faker.companyNoun(), "ur", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "ur", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "ur", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "ur", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "ur", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "ur", "databaseType", i);
		fakedAssert(faker.dateMonth(), "ur", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "ur", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "ur", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "ur", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "ur", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "ur", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "ur", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "ur", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "ur", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "ur", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "ur", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "ur", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "ur", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "ur", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "ur", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "ur", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "ur", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "ur", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "ur", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "ur", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "ur", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "ur", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "ur", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "ur", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "ur", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "ur", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "ur", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "ur", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "ur", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "ur", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "ur", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "ur", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "ur", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "ur", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "ur", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "ur", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "ur", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "ur", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "ur", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "ur", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "ur", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "ur", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "ur", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "ur", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "ur", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "ur", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "ur", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "ur", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "ur", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "ur", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "ur", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "ur", "loremText", i);
		fakedAssert(faker.loremWords(), "ur", "loremWords", i);
		fakedAssert(faker.musicGenre(), "ur", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "ur", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "ur", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "ur", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "ur", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "ur", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "ur", "nameGender", i);
		fakedAssert(faker.nameLastName(), "ur", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "ur", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "ur", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "ur", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "ur", "nameName", i);
		fakedAssert(faker.namePrefix(), "ur", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "ur", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "ur", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "ur", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "ur", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "ur", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "ur", "teamCreature", i);
		fakedAssert(faker.teamName(), "ur", "teamName", i);
		fakedAssert(faker.vehicle(), "ur", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "ur", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "ur", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "ur", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "ur", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "ur", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "ur", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "ur", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "ur", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "ur", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "ur", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "ur", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "ur", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "ur", "wordVerb", i);

	}
}

unittest {
	import faked.faker_vi;
    auto faker = new Faker_vi(53);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "vi", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "vi", "addressCity", i);
		fakedAssert(faker.addressCityName(), "vi", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "vi", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "vi", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "vi", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "vi", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "vi", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "vi", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "vi", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "vi", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "vi", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "vi", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "vi", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "vi", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "vi", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "vi", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "vi", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "vi", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "vi", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "vi", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "vi", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "vi", "animalBear", i);
		fakedAssert(faker.animalBird(), "vi", "animalBird", i);
		fakedAssert(faker.animalCat(), "vi", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "vi", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "vi", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "vi", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "vi", "animalDog", i);
		fakedAssert(faker.animalFish(), "vi", "animalFish", i);
		fakedAssert(faker.animalHorse(), "vi", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "vi", "animalInsect", i);
		fakedAssert(faker.animalLion(), "vi", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "vi", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "vi", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "vi", "animalSnake", i);
		fakedAssert(faker.animalType(), "vi", "animalType", i);
		fakedAssert(faker.appAuthor(), "vi", "appAuthor", i);
		fakedAssert(faker.appName(), "vi", "appName", i);
		fakedAssert(faker.appVersion(), "vi", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "vi", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "vi", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "vi", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "vi", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "vi", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "vi", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "vi", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "vi", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "vi", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "vi", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "vi", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "vi", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "vi", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "vi", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "vi", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "vi", "companyName", i);
		fakedAssert(faker.companyNoun(), "vi", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "vi", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "vi", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "vi", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "vi", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "vi", "databaseType", i);
		fakedAssert(faker.dateMonth(), "vi", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "vi", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "vi", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "vi", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "vi", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "vi", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "vi", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "vi", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "vi", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "vi", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "vi", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "vi", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "vi", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "vi", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "vi", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "vi", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "vi", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "vi", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "vi", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "vi", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "vi", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "vi", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "vi", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "vi", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "vi", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "vi", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "vi", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "vi", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "vi", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "vi", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "vi", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "vi", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "vi", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "vi", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "vi", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "vi", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "vi", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "vi", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "vi", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "vi", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "vi", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "vi", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "vi", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "vi", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "vi", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "vi", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "vi", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "vi", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "vi", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "vi", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "vi", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "vi", "loremText", i);
		fakedAssert(faker.loremWords(), "vi", "loremWords", i);
		fakedAssert(faker.musicGenre(), "vi", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "vi", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "vi", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "vi", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "vi", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "vi", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "vi", "nameGender", i);
		fakedAssert(faker.nameLastName(), "vi", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "vi", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "vi", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "vi", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "vi", "nameName", i);
		fakedAssert(faker.namePrefix(), "vi", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "vi", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "vi", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "vi", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "vi", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "vi", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "vi", "teamCreature", i);
		fakedAssert(faker.teamName(), "vi", "teamName", i);
		fakedAssert(faker.vehicle(), "vi", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "vi", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "vi", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "vi", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "vi", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "vi", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "vi", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "vi", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "vi", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "vi", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "vi", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "vi", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "vi", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "vi", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zh_cn;
    auto faker = new Faker_zh_cn(54);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "zh_CN", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "zh_CN", "addressCity", i);
		fakedAssert(faker.addressCityName(), "zh_CN", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "zh_CN", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "zh_CN", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "zh_CN", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "zh_CN", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "zh_CN", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "zh_CN", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "zh_CN", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "zh_CN", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "zh_CN", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "zh_CN", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zh_CN", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "zh_CN", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "zh_CN", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "zh_CN", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "zh_CN", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "zh_CN", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "zh_CN", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "zh_CN", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "zh_CN", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "zh_CN", "animalBear", i);
		fakedAssert(faker.animalBird(), "zh_CN", "animalBird", i);
		fakedAssert(faker.animalCat(), "zh_CN", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zh_CN", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zh_CN", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zh_CN", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zh_CN", "animalDog", i);
		fakedAssert(faker.animalFish(), "zh_CN", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zh_CN", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zh_CN", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zh_CN", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zh_CN", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zh_CN", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zh_CN", "animalSnake", i);
		fakedAssert(faker.animalType(), "zh_CN", "animalType", i);
		fakedAssert(faker.appAuthor(), "zh_CN", "appAuthor", i);
		fakedAssert(faker.appName(), "zh_CN", "appName", i);
		fakedAssert(faker.appVersion(), "zh_CN", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "zh_CN", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "zh_CN", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "zh_CN", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "zh_CN", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zh_CN", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "zh_CN", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "zh_CN", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zh_CN", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zh_CN", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zh_CN", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "zh_CN", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "zh_CN", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "zh_CN", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zh_CN", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zh_CN", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "zh_CN", "companyName", i);
		fakedAssert(faker.companyNoun(), "zh_CN", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zh_CN", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "zh_CN", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "zh_CN", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "zh_CN", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "zh_CN", "databaseType", i);
		fakedAssert(faker.dateMonth(), "zh_CN", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zh_CN", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zh_CN", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zh_CN", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zh_CN", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zh_CN", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zh_CN", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zh_CN", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zh_CN", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zh_CN", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zh_CN", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "zh_CN", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "zh_CN", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zh_CN", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "zh_CN", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "zh_CN", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "zh_CN", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zh_CN", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zh_CN", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zh_CN", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zh_CN", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zh_CN", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "zh_CN", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "zh_CN", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zh_CN", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zh_CN", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zh_CN", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zh_CN", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zh_CN", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zh_CN", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zh_CN", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "zh_CN", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "zh_CN", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zh_CN", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zh_CN", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zh_CN", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "zh_CN", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "zh_CN", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zh_CN", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "zh_CN", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "zh_CN", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zh_CN", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zh_CN", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zh_CN", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zh_CN", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zh_CN", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "zh_CN", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zh_CN", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zh_CN", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zh_CN", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "zh_CN", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "zh_CN", "loremText", i);
		fakedAssert(faker.loremWords(), "zh_CN", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zh_CN", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zh_CN", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "zh_CN", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "zh_CN", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "zh_CN", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "zh_CN", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "zh_CN", "nameGender", i);
		fakedAssert(faker.nameLastName(), "zh_CN", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "zh_CN", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "zh_CN", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "zh_CN", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "zh_CN", "nameName", i);
		fakedAssert(faker.namePrefix(), "zh_CN", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "zh_CN", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "zh_CN", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zh_CN", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zh_CN", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zh_CN", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zh_CN", "teamCreature", i);
		fakedAssert(faker.teamName(), "zh_CN", "teamName", i);
		fakedAssert(faker.vehicle(), "zh_CN", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zh_CN", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zh_CN", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zh_CN", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zh_CN", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zh_CN", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zh_CN", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zh_CN", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zh_CN", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zh_CN", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zh_CN", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zh_CN", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zh_CN", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zh_CN", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zh_tw;
    auto faker = new Faker_zh_tw(55);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "zh_TW", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "zh_TW", "addressCity", i);
		fakedAssert(faker.addressCityName(), "zh_TW", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "zh_TW", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "zh_TW", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "zh_TW", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "zh_TW", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "zh_TW", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "zh_TW", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "zh_TW", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "zh_TW", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "zh_TW", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "zh_TW", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zh_TW", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "zh_TW", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "zh_TW", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "zh_TW", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "zh_TW", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "zh_TW", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "zh_TW", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "zh_TW", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "zh_TW", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "zh_TW", "animalBear", i);
		fakedAssert(faker.animalBird(), "zh_TW", "animalBird", i);
		fakedAssert(faker.animalCat(), "zh_TW", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zh_TW", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zh_TW", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zh_TW", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zh_TW", "animalDog", i);
		fakedAssert(faker.animalFish(), "zh_TW", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zh_TW", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zh_TW", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zh_TW", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zh_TW", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zh_TW", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zh_TW", "animalSnake", i);
		fakedAssert(faker.animalType(), "zh_TW", "animalType", i);
		fakedAssert(faker.appAuthor(), "zh_TW", "appAuthor", i);
		fakedAssert(faker.appName(), "zh_TW", "appName", i);
		fakedAssert(faker.appVersion(), "zh_TW", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "zh_TW", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "zh_TW", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "zh_TW", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "zh_TW", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zh_TW", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "zh_TW", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "zh_TW", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zh_TW", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zh_TW", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zh_TW", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "zh_TW", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "zh_TW", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "zh_TW", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zh_TW", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zh_TW", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "zh_TW", "companyName", i);
		fakedAssert(faker.companyNoun(), "zh_TW", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zh_TW", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "zh_TW", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "zh_TW", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "zh_TW", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "zh_TW", "databaseType", i);
		fakedAssert(faker.dateMonth(), "zh_TW", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zh_TW", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zh_TW", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zh_TW", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zh_TW", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zh_TW", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zh_TW", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zh_TW", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zh_TW", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zh_TW", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zh_TW", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "zh_TW", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "zh_TW", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zh_TW", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "zh_TW", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "zh_TW", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "zh_TW", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zh_TW", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zh_TW", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zh_TW", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zh_TW", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zh_TW", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "zh_TW", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "zh_TW", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zh_TW", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zh_TW", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zh_TW", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zh_TW", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zh_TW", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zh_TW", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zh_TW", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "zh_TW", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "zh_TW", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zh_TW", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zh_TW", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zh_TW", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "zh_TW", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "zh_TW", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zh_TW", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "zh_TW", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "zh_TW", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zh_TW", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zh_TW", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zh_TW", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zh_TW", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zh_TW", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "zh_TW", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zh_TW", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zh_TW", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zh_TW", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "zh_TW", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "zh_TW", "loremText", i);
		fakedAssert(faker.loremWords(), "zh_TW", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zh_TW", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zh_TW", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "zh_TW", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "zh_TW", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "zh_TW", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "zh_TW", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "zh_TW", "nameGender", i);
		fakedAssert(faker.nameLastName(), "zh_TW", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "zh_TW", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "zh_TW", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "zh_TW", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "zh_TW", "nameName", i);
		fakedAssert(faker.namePrefix(), "zh_TW", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "zh_TW", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "zh_TW", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zh_TW", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zh_TW", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zh_TW", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zh_TW", "teamCreature", i);
		fakedAssert(faker.teamName(), "zh_TW", "teamName", i);
		fakedAssert(faker.vehicle(), "zh_TW", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zh_TW", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zh_TW", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zh_TW", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zh_TW", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zh_TW", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zh_TW", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zh_TW", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zh_TW", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zh_TW", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zh_TW", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zh_TW", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zh_TW", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zh_TW", "wordVerb", i);

	}
}

unittest {
	import faked.faker_zu_za;
    auto faker = new Faker_zu_za(56);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "zu_ZA", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "zu_ZA", "addressCity", i);
		fakedAssert(faker.addressCityName(), "zu_ZA", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "zu_ZA", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "zu_ZA", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "zu_ZA", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "zu_ZA", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "zu_ZA", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "zu_ZA", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "zu_ZA", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "zu_ZA", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "zu_ZA", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "zu_ZA", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "zu_ZA", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "zu_ZA", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "zu_ZA", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "zu_ZA", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "zu_ZA", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "zu_ZA", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "zu_ZA", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "zu_ZA", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "zu_ZA", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "zu_ZA", "animalBear", i);
		fakedAssert(faker.animalBird(), "zu_ZA", "animalBird", i);
		fakedAssert(faker.animalCat(), "zu_ZA", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "zu_ZA", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "zu_ZA", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "zu_ZA", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "zu_ZA", "animalDog", i);
		fakedAssert(faker.animalFish(), "zu_ZA", "animalFish", i);
		fakedAssert(faker.animalHorse(), "zu_ZA", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "zu_ZA", "animalInsect", i);
		fakedAssert(faker.animalLion(), "zu_ZA", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "zu_ZA", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "zu_ZA", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "zu_ZA", "animalSnake", i);
		fakedAssert(faker.animalType(), "zu_ZA", "animalType", i);
		fakedAssert(faker.appAuthor(), "zu_ZA", "appAuthor", i);
		fakedAssert(faker.appName(), "zu_ZA", "appName", i);
		fakedAssert(faker.appVersion(), "zu_ZA", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "zu_ZA", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "zu_ZA", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "zu_ZA", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "zu_ZA", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "zu_ZA", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "zu_ZA", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "zu_ZA", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "zu_ZA", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "zu_ZA", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "zu_ZA", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "zu_ZA", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "zu_ZA", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "zu_ZA", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "zu_ZA", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "zu_ZA", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "zu_ZA", "companyName", i);
		fakedAssert(faker.companyNoun(), "zu_ZA", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "zu_ZA", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "zu_ZA", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "zu_ZA", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "zu_ZA", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "zu_ZA", "databaseType", i);
		fakedAssert(faker.dateMonth(), "zu_ZA", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "zu_ZA", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "zu_ZA", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "zu_ZA", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "zu_ZA", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "zu_ZA", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "zu_ZA", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "zu_ZA", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "zu_ZA", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "zu_ZA", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "zu_ZA", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "zu_ZA", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "zu_ZA", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "zu_ZA", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "zu_ZA", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "zu_ZA", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "zu_ZA", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "zu_ZA", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "zu_ZA", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "zu_ZA", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "zu_ZA", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "zu_ZA", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "zu_ZA", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "zu_ZA", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "zu_ZA", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "zu_ZA", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "zu_ZA", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "zu_ZA", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "zu_ZA", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "zu_ZA", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "zu_ZA", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "zu_ZA", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "zu_ZA", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "zu_ZA", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "zu_ZA", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "zu_ZA", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "zu_ZA", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "zu_ZA", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "zu_ZA", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "zu_ZA", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "zu_ZA", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "zu_ZA", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "zu_ZA", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "zu_ZA", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "zu_ZA", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "zu_ZA", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "zu_ZA", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "zu_ZA", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "zu_ZA", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "zu_ZA", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "zu_ZA", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "zu_ZA", "loremText", i);
		fakedAssert(faker.loremWords(), "zu_ZA", "loremWords", i);
		fakedAssert(faker.musicGenre(), "zu_ZA", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "zu_ZA", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "zu_ZA", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "zu_ZA", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "zu_ZA", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "zu_ZA", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "zu_ZA", "nameGender", i);
		fakedAssert(faker.nameLastName(), "zu_ZA", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "zu_ZA", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "zu_ZA", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "zu_ZA", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "zu_ZA", "nameName", i);
		fakedAssert(faker.namePrefix(), "zu_ZA", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "zu_ZA", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "zu_ZA", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "zu_ZA", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "zu_ZA", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "zu_ZA", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "zu_ZA", "teamCreature", i);
		fakedAssert(faker.teamName(), "zu_ZA", "teamName", i);
		fakedAssert(faker.vehicle(), "zu_ZA", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "zu_ZA", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "zu_ZA", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "zu_ZA", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "zu_ZA", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "zu_ZA", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "zu_ZA", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "zu_ZA", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "zu_ZA", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "zu_ZA", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "zu_ZA", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "zu_ZA", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "zu_ZA", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "zu_ZA", "wordVerb", i);

	}
}

unittest {
	import faked.base;
    auto faker = new Faker(57);
	for(int i = 0; i < 30; ++i) {
		fakedAssert(faker.addressBuildingNumber(), "en", "addressBuildingNumber", i);
		fakedAssert(faker.addressCity(), "en", "addressCity", i);
		fakedAssert(faker.addressCityName(), "en", "addressCityName", i);
		fakedAssert(faker.addressCityPrefix(), "en", "addressCityPrefix", i);
		fakedAssert(faker.addressCitySuffix(), "en", "addressCitySuffix", i);
		fakedAssert(faker.addressCountry(), "en", "addressCountry", i);
		fakedAssert(faker.addressCountryCode(), "en", "addressCountryCode", i);
		fakedAssert(faker.addressCountryCodeAlpha3(), "en", "addressCountryCodeAlpha3", i);
		fakedAssert(faker.addressCounty(), "en", "addressCounty", i);
		fakedAssert(faker.addressDefaultCountry(), "en", "addressDefaultCountry", i);
		fakedAssert(faker.addressDirection(), "en", "addressDirection", i);
		fakedAssert(faker.addressDirectionAbbr(), "en", "addressDirectionAbbr", i);
		fakedAssert(faker.addressLatitude(), "en", "addressLatitude", i);
		fakedAssert(faker.addressLongitude(), "en", "addressLongitude", i);
		fakedAssert(faker.addressPostcode(), "en", "addressPostcode", i);
		fakedAssert(faker.addressSecondaryAddress(), "en", "addressSecondaryAddress", i);
		fakedAssert(faker.addressState(), "en", "addressState", i);
		fakedAssert(faker.addressStateAbbr(), "en", "addressStateAbbr", i);
		fakedAssert(faker.addressStreet(), "en", "addressStreet", i);
		fakedAssert(faker.addressStreetAddress(), "en", "addressStreetAddress", i);
		fakedAssert(faker.addressStreetSuffix(), "en", "addressStreetSuffix", i);
		fakedAssert(faker.addressTimeZone(), "en", "addressTimeZone", i);
		fakedAssert(faker.animalBear(), "en", "animalBear", i);
		fakedAssert(faker.animalBird(), "en", "animalBird", i);
		fakedAssert(faker.animalCat(), "en", "animalCat", i);
		fakedAssert(faker.animalCetacean(), "en", "animalCetacean", i);
		fakedAssert(faker.animalCow(), "en", "animalCow", i);
		fakedAssert(faker.animalCrocodilia(), "en", "animalCrocodilia", i);
		fakedAssert(faker.animalDog(), "en", "animalDog", i);
		fakedAssert(faker.animalFish(), "en", "animalFish", i);
		fakedAssert(faker.animalHorse(), "en", "animalHorse", i);
		fakedAssert(faker.animalInsect(), "en", "animalInsect", i);
		fakedAssert(faker.animalLion(), "en", "animalLion", i);
		fakedAssert(faker.animalRabbit(), "en", "animalRabbit", i);
		fakedAssert(faker.animalRodent(), "en", "animalRodent", i);
		fakedAssert(faker.animalSnake(), "en", "animalSnake", i);
		fakedAssert(faker.animalType(), "en", "animalType", i);
		fakedAssert(faker.appAuthor(), "en", "appAuthor", i);
		fakedAssert(faker.appName(), "en", "appName", i);
		fakedAssert(faker.appVersion(), "en", "appVersion", i);
		fakedAssert(faker.businessCreditCardExpiryDates(), "en", "businessCreditCardExpiryDates", i);
		fakedAssert(faker.businessCreditCardNumbers(), "en", "businessCreditCardNumbers", i);
		fakedAssert(faker.businessCreditCardTypes(), "en", "businessCreditCardTypes", i);
		fakedAssert(faker.cellPhoneFormats(), "en", "cellPhoneFormats", i);
		fakedAssert(faker.colorHuman(), "en", "colorHuman", i);
		fakedAssert(faker.colorSpace(), "en", "colorSpace", i);
		fakedAssert(faker.commerceDepartment(), "en", "commerceDepartment", i);
		fakedAssert(faker.commerceProductDescription(), "en", "commerceProductDescription", i);
		fakedAssert(faker.companyAdjective(), "en", "companyAdjective", i);
		fakedAssert(faker.companyBs(), "en", "companyBs", i);
		fakedAssert(faker.companyBsAdjective(), "en", "companyBsAdjective", i);
		fakedAssert(faker.companyBsNoun(), "en", "companyBsNoun", i);
		fakedAssert(faker.companyBsVerb(), "en", "companyBsVerb", i);
		fakedAssert(faker.companyCatchPhrase(), "en", "companyCatchPhrase", i);
		fakedAssert(faker.companyDescriptor(), "en", "companyDescriptor", i);
		fakedAssert(faker.companyName(), "en", "companyName", i);
		fakedAssert(faker.companyNoun(), "en", "companyNoun", i);
		fakedAssert(faker.companySuffix(), "en", "companySuffix", i);
		fakedAssert(faker.databaseCollation(), "en", "databaseCollation", i);
		fakedAssert(faker.databaseColumn(), "en", "databaseColumn", i);
		fakedAssert(faker.databaseEngine(), "en", "databaseEngine", i);
		fakedAssert(faker.databaseType(), "en", "databaseType", i);
		fakedAssert(faker.dateMonth(), "en", "dateMonth", i);
		fakedAssert(faker.dateWeekday(), "en", "dateWeekday", i);
		fakedAssert(faker.financeAccount(), "en", "financeAccount", i);
		fakedAssert(faker.financeAccountType(), "en", "financeAccountType", i);
		fakedAssert(faker.financeBIC(), "en", "financeBIC", i);
		fakedAssert(faker.financeBitcoinAddress(), "en", "financeBitcoinAddress", i);
		fakedAssert(faker.financeCreditCard(), "en", "financeCreditCard", i);
		fakedAssert(faker.financeCreditCardAmericanExpress(), "en", "financeCreditCardAmericanExpress", i);
		fakedAssert(faker.financeCreditCardCVV(), "en", "financeCreditCardCVV", i);
		fakedAssert(faker.financeCreditCardDinersClub(), "en", "financeCreditCardDinersClub", i);
		fakedAssert(faker.financeCreditCardDiscover(), "en", "financeCreditCardDiscover", i);
		fakedAssert(faker.financeCreditCardInstapayment(), "en", "financeCreditCardInstapayment", i);
		fakedAssert(faker.financeCreditCardJcb(), "en", "financeCreditCardJcb", i);
		fakedAssert(faker.financeCreditCardMastercard(), "en", "financeCreditCardMastercard", i);
		fakedAssert(faker.financeCreditCardSolo(), "en", "financeCreditCardSolo", i);
		fakedAssert(faker.financeCreditCardSwitch(), "en", "financeCreditCardSwitch", i);
		fakedAssert(faker.financeCreditCardVisa(), "en", "financeCreditCardVisa", i);
		fakedAssert(faker.financeCurrency(), "en", "financeCurrency", i);
		fakedAssert(faker.financeIBAN(), "en", "financeIBAN", i);
		fakedAssert(faker.financeMask(), "en", "financeMask", i);
		fakedAssert(faker.financeRoutingNumber(), "en", "financeRoutingNumber", i);
		fakedAssert(faker.financeTransactionType(), "en", "financeTransactionType", i);
		fakedAssert(faker.hackerAbbreviation(), "en", "hackerAbbreviation", i);
		fakedAssert(faker.hackerAdjective(), "en", "hackerAdjective", i);
		fakedAssert(faker.hackerIngverb(), "en", "hackerIngverb", i);
		fakedAssert(faker.hackerNoun(), "en", "hackerNoun", i);
		fakedAssert(faker.hackerPhrase(), "en", "hackerPhrase", i);
		fakedAssert(faker.hackerVerb(), "en", "hackerVerb", i);
		fakedAssert(faker.helperAlpha(), "en", "helperAlpha", i);
		fakedAssert(faker.helperAlphaNum(), "en", "helperAlphaNum", i);
		fakedAssert(faker.helperHexaDecimal(), "en", "helperHexaDecimal", i);
		fakedAssert(faker.internetAvatarUri(), "en", "internetAvatarUri", i);
		fakedAssert(faker.internetColor(), "en", "internetColor", i);
		fakedAssert(faker.internetDomainName(), "en", "internetDomainName", i);
		fakedAssert(faker.internetDomainSuffix(), "en", "internetDomainSuffix", i);
		fakedAssert(faker.internetDomainWord(), "en", "internetDomainWord", i);
		fakedAssert(faker.internetEmoji(), "en", "internetEmoji", i);
		fakedAssert(faker.internetExampleEmail(), "en", "internetExampleEmail", i);
		fakedAssert(faker.internetFreeEmail(), "en", "internetFreeEmail", i);
		fakedAssert(faker.internetHttpStatusCode(), "en", "internetHttpStatusCode", i);
		fakedAssert(faker.internetIPv4(), "en", "internetIPv4", i);
		fakedAssert(faker.internetIPv6(), "en", "internetIPv6", i);
		fakedAssert(faker.internetPassword(), "en", "internetPassword", i);
		fakedAssert(faker.internetProtocol(), "en", "internetProtocol", i);
		fakedAssert(faker.internetUrl(), "en", "internetUrl", i);
		fakedAssert(faker.internetUserName(), "en", "internetUserName", i);
		fakedAssert(faker.loremParagraph(), "en", "loremParagraph", i);
		fakedAssert(faker.loremParagraphs(), "en", "loremParagraphs", i);
		fakedAssert(faker.loremSentance(), "en", "loremSentance", i);
		fakedAssert(faker.loremSentances(), "en", "loremSentances", i);
		fakedAssert(faker.loremSupplemental(), "en", "loremSupplemental", i);
		fakedAssert(faker.loremText(), "en", "loremText", i);
		fakedAssert(faker.loremWords(), "en", "loremWords", i);
		fakedAssert(faker.musicGenre(), "en", "musicGenre", i);
		fakedAssert(faker.musicSongName(), "en", "musicSongName", i);
		fakedAssert(faker.nameBinaryGender(), "en", "nameBinaryGender", i);
		fakedAssert(faker.nameFemaleFirstName(), "en", "nameFemaleFirstName", i);
		fakedAssert(faker.nameFemaleMiddleName(), "en", "nameFemaleMiddleName", i);
		fakedAssert(faker.nameFirstName(), "en", "nameFirstName", i);
		fakedAssert(faker.nameGender(), "en", "nameGender", i);
		fakedAssert(faker.nameLastName(), "en", "nameLastName", i);
		fakedAssert(faker.nameMaleFirstName(), "en", "nameMaleFirstName", i);
		fakedAssert(faker.nameMaleMiddleName(), "en", "nameMaleMiddleName", i);
		fakedAssert(faker.nameMiddleName(), "en", "nameMiddleName", i);
		fakedAssert(faker.nameName(), "en", "nameName", i);
		fakedAssert(faker.namePrefix(), "en", "namePrefix", i);
		fakedAssert(faker.nameSuffix(), "en", "nameSuffix", i);
		fakedAssert(faker.phoneNumber(), "en", "phoneNumber", i);
		fakedAssert(faker.phoneNumberFormats(), "en", "phoneNumberFormats", i);
		fakedAssert(faker.scienceChemicalelement(), "en", "scienceChemicalelement", i);
		fakedAssert(faker.scienceUnit(), "en", "scienceUnit", i);
		fakedAssert(faker.teamCreature(), "en", "teamCreature", i);
		fakedAssert(faker.teamName(), "en", "teamName", i);
		fakedAssert(faker.vehicle(), "en", "vehicle", i);
		fakedAssert(faker.vehicleBicycleType(), "en", "vehicleBicycleType", i);
		fakedAssert(faker.vehicleFuel(), "en", "vehicleFuel", i);
		fakedAssert(faker.vehicleManufacturer(), "en", "vehicleManufacturer", i);
		fakedAssert(faker.vehicleModel(), "en", "vehicleModel", i);
		fakedAssert(faker.vehicleType(), "en", "vehicleType", i);
		fakedAssert(faker.vehicleVin(), "en", "vehicleVin", i);
		fakedAssert(faker.wordAdjective(), "en", "wordAdjective", i);
		fakedAssert(faker.wordAdverb(), "en", "wordAdverb", i);
		fakedAssert(faker.wordConjunction(), "en", "wordConjunction", i);
		fakedAssert(faker.wordInterjection(), "en", "wordInterjection", i);
		fakedAssert(faker.wordNoun(), "en", "wordNoun", i);
		fakedAssert(faker.wordPreposition(), "en", "wordPreposition", i);
		fakedAssert(faker.wordVerb(), "en", "wordVerb", i);

	}
}

