// generated by fakerjsgenerator
///
module faked.faker_zh_tw;

import faked.base;


///
class Faker_zh_tw : Faker {
@safe:
	import std.random;
	import std.array;
	import std.format;
	import std.conv : to;

	///
	this(int seed) {
        super(seed);
	}

	///
	override string phoneNumberFormats() {
		auto data = [
		"0#-#######",
		"02-########",
		"09##-######'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressStateAbbr() {
		auto data = [
		"北",
		"新北",
		"桃",
		"中",
		"南",
		"高",
		"基",
		"竹市",
		"嘉市",
		"竹縣",
		"苗",
		"彰",
		"投",
		"雲",
		"嘉縣",
		"宜",
		"花",
		"東",
		"澎",
		"金",
		"馬"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressState() {
		auto data = [
		"福建省",
		"台灣省'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDefaultCountry() {
		auto data = [
		"Taiwan (R.O.C.)'"
		];
		return choice(data, this.rnd);
	}


	override string addressStreetAddress() {
		final switch(uniform(0, 2, this.rnd)) {
			case 0: return "normal: '" ~ addressStreet() ~ addressBuildingnumber() ~ "號";
			case 1: return "full: '" ~ addressStreet() ~ addressBuildingnumber() ~ "號 " ~ addressSecondaryaddress();
		}
	}

	///
	override string addressCitySuffix() {
		auto data = [
		"縣",
		"市'"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCityPrefix() {
		auto data = [
		"臺北",
		"新北",
		"桃園",
		"臺中",
		"臺南",
		"高雄",
		"基隆",
		"新竹",
		"嘉義",
		"苗栗",
		"彰化",
		"南投",
		"雲林",
		"屏東",
		"宜蘭",
		"花蓮",
		"臺東",
		"澎湖",
		"金門",
		"連江"
		];
		return choice(data, this.rnd);
	}


	override string addressStreet() {
		final switch(uniform(0, 1, this.rnd)) {
			case 0: return nameLastName() ~ addressStreetSuffix() ~ "'";
		}
	}


	override string addressCity() {
		final switch(uniform(0, 1, this.rnd)) {
			case 0: return addressCityPrefix() ~ addressCitySuffix() ~ "'";
		}
	}

	///
	override string addressBuildingNumber() {
		auto data = [
		"####",
		"###",
		"##",
		"#'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressPostcode() {
		auto data = [
		"######'"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressStreetSuffix() {
		auto data = [
		"街",
		"路",
		"北路",
		"南路",
		"東路",
		"西路'"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameLastName() {
		auto data = [
		"王",
		"李",
		"張",
		"劉",
		"陳",
		"楊",
		"黃",
		"吳",
		"趙",
		"週",
		"徐",
		"孫",
		"馬",
		"朱",
		"胡",
		"林",
		"郭",
		"何",
		"高",
		"羅",
		"鄭",
		"梁",
		"謝",
		"宋",
		"唐",
		"許",
		"鄧",
		"馮",
		"韓",
		"曹",
		"曾",
		"彭",
		"蕭",
		"蔡",
		"潘",
		"田",
		"董",
		"袁",
		"於",
		"餘",
		"葉",
		"蔣",
		"杜",
		"蘇",
		"魏",
		"程",
		"呂",
		"丁",
		"沈",
		"任",
		"姚",
		"盧",
		"傅",
		"鐘",
		"姜",
		"崔",
		"譚",
		"廖",
		"範",
		"汪",
		"陸",
		"金",
		"石",
		"戴",
		"賈",
		"韋",
		"夏",
		"邱",
		"方",
		"侯",
		"鄒",
		"熊",
		"孟",
		"秦",
		"白",
		"江",
		"閻",
		"薛",
		"尹",
		"段",
		"雷",
		"黎",
		"史",
		"龍",
		"陶",
		"賀",
		"顧",
		"毛",
		"郝",
		"龔",
		"邵",
		"萬",
		"錢",
		"嚴",
		"賴",
		"覃",
		"洪",
		"武",
		"莫",
		"孔"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameFirstName() {
		auto data = [
		"紹齊",
		"博文",
		"梓晨",
		"胤祥",
		"瑞霖",
		"明哲",
		"天翊",
		"凱瑞",
		"健雄",
		"耀傑",
		"瀟然",
		"子涵",
		"越彬",
		"鈺軒",
		"智輝",
		"致遠",
		"俊馳",
		"雨澤",
		"燁磊",
		"晟睿",
		"文昊",
		"修潔",
		"黎昕",
		"遠航",
		"旭堯",
		"鴻濤",
		"偉祺",
		"榮軒",
		"越澤",
		"浩宇",
		"瑾瑜",
		"皓軒",
		"擎蒼",
		"擎宇",
		"志澤",
		"子軒",
		"睿淵",
		"弘文",
		"哲瀚",
		"雨澤",
		"楷瑞",
		"建輝",
		"晉鵬",
		"天磊",
		"紹輝",
		"澤洋",
		"鑫磊",
		"鵬煊",
		"昊強",
		"偉宸",
		"博超",
		"君浩",
		"子騫",
		"鵬濤",
		"炎彬",
		"鶴軒",
		"越彬",
		"風華",
		"靖琪",
		"明輝",
		"偉誠",
		"明軒",
		"健柏",
		"修傑",
		"志澤",
		"弘文",
		"峻熙",
		"嘉懿",
		"煜城",
		"懿軒",
		"燁偉",
		"苑博",
		"偉澤",
		"熠彤",
		"鴻煊",
		"博濤",
		"燁霖",
		"燁華",
		"煜祺",
		"智宸",
		"正豪",
		"昊然",
		"明杰",
		"立誠",
		"立軒",
		"立輝",
		"峻熙",
		"弘文",
		"熠彤",
		"鴻煊",
		"燁霖",
		"哲瀚",
		"鑫鵬",
		"昊天",
		"思聰",
		"展鵬",
		"笑愚",
		"志強",
		"炫明",
		"雪松",
		"思源",
		"智淵",
		"思淼",
		"曉嘯",
		"天宇",
		"浩然",
		"文軒",
		"鷺洋",
		"振家",
		"樂駒",
		"曉博",
		"文博",
		"昊焱",
		"立果",
		"金鑫",
		"錦程",
		"嘉熙",
		"鵬飛",
		"子默",
		"思遠",
		"浩軒",
		"語堂",
		"聰健"
		];
		return choice(data, this.rnd);
	}


	override string nameName() {
		final switch(uniform(0, 1, this.rnd)) {
			case 0: return nameFirstName() ~ nameLastName() ~ "'";
		}
	}

}
