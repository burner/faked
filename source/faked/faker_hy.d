// generated by fakerjsgenerator
///
module faked.faker_hy;

import faked.base;


///
class Faker_hy : Faker {
@safe:
	import std.random;
	import std.array;
	import std.format;
	import std.conv : to;

	///
	this(int seed) {
        super(seed);
	}

	///
	override string loremWords() {
		static enum data = [
		"տարի",
		"որ",
		"փոխեց",
		"ամեն",
		"ինչ",
		"կենցաղից",
		"մինչև",
		"համաշխարհային",
		"տնտեսություն",
		"մի",
		"քանի",
		"շաբաթում",
		"բնականոն",
		"դարձնելով",
		"այն",
		"դեռ",
		"երեկ",
		"անհնար",
		"էր",
		"թվում",
		"ը",
		"շատերի",
		"համար",
		"կմնա",
		"որպես",
		"անտեսանելի",
		"աղետի",
		"խստագույն",
		"սահմանափակումների",
		"մարդկային",
		"կորուստների",
		"և",
		"գործազրկության",
		"Տարեսկզբին",
		"չինական",
		"Վուհանի",
		"շուկայում",
		"ենթադրաբար",
		"չղջիկից",
		"մարդուն",
		"փոխանցված",
		"վիրուսն",
		"ապացուցեց",
		"տեխնոլոգիական",
		"նվաճումների",
		"հասած",
		"մարդկությունը",
		"դեռևս",
		"շատ",
		"բան",
		"չգիտի",
		"իր",
		"սեփական",
		"առողջության",
		"բնության",
		"ու",
		"դրա",
		"հետ",
		"հարաբերությունների",
		"մասին",
		"Գարնանը",
		"երբ",
		"վիրուսը",
		"կաթվածահար",
		"արեց",
		"կյանքը",
		"գրեթե",
		"ողջ",
		"աշխարհում",
		"Հռոմի",
		"կաթոլիկ",
		"եկեղեցու",
		"առաջնորդն",
		"հավատացյալ",
		"հոտին",
		"դիմեց",
		"աղոթքով",
		"տարվա",
		"ընթացքում",
		"շատերն",
		"էին",
		"հիշում",
		"մեջբերում",
		"Մենք",
		"առաջ",
		"էինք",
		"շարժվում",
		"գլխապտույտ",
		"արագությամբ",
		"վստահ",
		"ուժեղ",
		"ենք",
		"կարող",
		"անել",
		"կամենանք",
		"Ձգտելով",
		"անձնական",
		"բարեկեցության",
		"մենք",
		"թույլ",
		"տալիս",
		"մեզ",
		"տարվել",
		"նյութականով",
		"վազում",
		"շահի",
		"ետևից",
		"չէին",
		"կանգնեցնում",
		"մեր",
		"շուրջ",
		"մոլեգնող",
		"պատերազմներն",
		"անարդարությունը",
		"ոչ",
		"էլ",
		"աղքատների",
		"օգնություն",
		"աղերսող",
		"ձայնն",
		"լսում",
		"շարունակում",
		"ընթացքը",
		"չնայելով",
		"բանի",
		"առողջ",
		"մնալ",
		"հիվանդ",
		"հայտարարել",
		"պապը",
		"Անտեսանելի",
		"առեղծվածային",
		"մեկ",
		"տարում",
		"խլեց",
		"ավելի",
		"քան",
		"միլիոն",
		"հազար",
		"մարդու",
		"կյանք",
		"վարակվեցին",
		"միլիոնից",
		"ավելին",
		"վարակվածներից",
		"յուրաքանչյուր",
		"չորրորդը",
		"մոտ",
		"միլիոնը",
		"այս",
		"պահին",
		"պայքարում",
		"է",
		"հիվանդության",
		"դեմ",
		"մարդ",
		"գտնվում",
		"ծայրահեղ",
		"ծանր",
		"վիճակում",
		"Եվ",
		"եթե",
		"տարեսկզբին",
		"որոշ",
		"պետություններ",
		"պարծենալ",
		"իրենց",
		"առողջապահական",
		"համակարգերով",
		"նորագույն",
		"տեխնոլոգիաներով",
		"ապա",
		"համավարակից",
		"հետո",
		"ակնհայտ",
		"դարձավ",
		"անկախ",
		"բյուջի",
		"չափից",
		"հնարավորություններից",
		"հարուստ",
		"թե",
		"աղքատ",
		"բոլորն",
		"են",
		"նույն",
		"նավակում",
		"նույնքան",
		"անպաշտպան"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameName() {
		switch(uniform(0, 6, this.rnd)) {
			case 0:
				return format!"%s %s %s"(namePrefix(), nameFirstName(), nameLastName());
			case 1:
				return format!"%s %s %s"(nameFirstName(), nameLastName(), nameSuffix());
			case 2:
				return format!"%s %s"(nameFirstName(), nameLastName());
			case 3:
				return format!"%s %s"(nameFirstName(), nameLastName());
			case 4:
				return format!"%s %s"(nameMaleFirstName(), nameLastName());
			case 5:
				return format!"%s %s"(nameFemaleFirstName(), nameLastName());
			default: assert(false);
		}
	}

	///
	override string nameFirstName() {
		static enum data = [
		"Մարիա",
		"Նարե",
		"Մանե",
		"Մարի",
		"Մարիամ",
		"Անի",
		"Անգելինա",
		"Անահիտ",
		"Էլեն",
		"Միլենա",
		"Եվա",
		"Աննա",
		"Արփի",
		"Գայանե",
		"Լիլիթ",
		"Մերի",
		"Վիկտորյա",
		"Արինա",
		"Յանա",
		"Սոնա",
		"Նատալի",
		"Գոհար",
		"Հասմիկ",
		"Սոֆի",
		"Էմիլի",
		"Սուսաննա",
		"Արևիկ",
		"Կարինե",
		"Լյուսի",
		"Արիանա",
		"Տաթև",
		"Լիկա",
		"Ռուզաննա",
		"Լիլի",
		"Սոֆյա",
		"Անուշ",
		"Էլինա",
		"Սառա",
		"Նանե",
		"Էվա",
		"Լիանա",
		"Մոնիկա",
		"Կարինա",
		"Լիա",
		"Նարինե",
		"Լուսինե",
		"Դավիթ",
		"Նարեկ",
		"Ալեքս",
		"Տիգրան",
		"Հայկ",
		"Գոռ",
		"Արթուր",
		"Արմեն",
		"Մարկ",
		"Էրիկ",
		"Արամ",
		"Սամվել",
		"Արման",
		"Ալեն",
		"Աշոտ",
		"Արեն",
		"Գագիկ",
		"Դանիել",
		"Արեգ",
		"Ռոբերտ",
		"Արտյոմ",
		"Արսեն",
		"Միքայել",
		"Սարգիս",
		"Հովհաննես",
		"Վահե",
		"Կարեն",
		"Գևորգ",
		"Լևոն",
		"Վարդան",
		"Ռուբեն",
		"Սուրեն",
		"Հակոբ",
		"Մհեր",
		"Անդրանիկ",
		"Ավետ",
		"Գրիգոր",
		"Ռաֆայել",
		"Ալեքսանդր",
		"Մոնթե",
		"Հարություն",
		"Էդուարդ",
		"Ալբերտ",
		"Գարիկ",
		"Համլետ"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameLastName() {
		static enum data = [
		"Հարությունյան",
		"Սարգսյան",
		"Հովհաննիսյան",
		"Հովհաննիսյան",
		"Սարգսյան",
		"Հարությունյան",
		"Գրիգորյան",
		"Խաչատրյան",
		"Խաչատրյան",
		"Գրիգորյան",
		"Հակոբյան",
		"Հակոբյան",
		"Վարդանյան",
		"Պետրոսյան",
		"Կարապետյան",
		"Գևորգյան",
		"Գևորգյան",
		"Վարդանյան",
		"Պետրոսյան",
		"Կարապետյան",
		"Մկրտչյան",
		"Մկրտչյան",
		"Ղազարյան",
		"Ղազարյան",
		"Մանուկյան",
		"Մանուկյան",
		"Պողոսյան",
		"Ավետիսյան",
		"Ավետիսյան",
		"Պողոսյան",
		"Մարտիրոսյան",
		"Սահակյան",
		"Սահակյան",
		"Մարտիրոսյան",
		"Դավթյան",
		"Առաքելյան",
		"Մարգարյան",
		"Մարգարյան",
		"Գալստյան",
		"Բաղդասարյան",
		"Առաքելյան",
		"Դավթյան",
		"Ստեփանյան",
		"Գալստյան",
		"Հայրապետյան",
		"Հայրապետյան",
		"Սիմոնյան",
		"Ավագյան",
		"Գասպարյան",
		"Սիմոնյան",
		"Մուրադյան",
		"Մուրադյան",
		"Ավագյան",
		"Գասպարյան",
		"Բաղդասարյան",
		"Ստեփանյան",
		"Ասատրյան",
		"Հովսեփյան",
		"Աբրահամյան",
		"Աբրահամյան",
		"Զաքարյան",
		"Մելքոնյան",
		"Մելքոնյան",
		"Ալեքսանյան",
		"Մխիթարյան",
		"Ասատրյան",
		"Բարսեղյան",
		"Մովսիսյան",
		"Կիրակոսյան",
		"Կիրակոսյան",
		"Եղիազարյան",
		"Բաբայան",
		"Հովսեփյան",
		"Մնացականյան",
		"Թադևոսյան",
		"Զաքարյան",
		"Մինասյան",
		"Մխիթարյան",
		"Բաբայան",
		"Բարսեղյան",
		"Ալեքսանյան",
		"Համբարձումյան",
		"Մովսիսյան",
		"Եղիազարյան",
		"Համբարձումյան",
		"Թադևոսյան",
		"Այվազյան",
		"Այվազյան",
		"Գաբրիելյան",
		"Ներսիսյան",
		"Մնացականյան",
		"Մովսիսյան"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameMaleFirstName() {
		static enum data = [
		"Դավիթ",
		"Նարեկ",
		"Ալեքս",
		"Տիգրան",
		"Հայկ",
		"Գոռ",
		"Արթուր",
		"Արմեն",
		"Մարկ",
		"Էրիկ",
		"Արամ",
		"Սամվել",
		"Արման",
		"Ալեն",
		"Աշոտ",
		"Արեն",
		"Գագիկ",
		"Դանիել",
		"Արեգ",
		"Ռոբերտ",
		"Արտյոմ",
		"Արսեն",
		"Միքայել",
		"Սարգիս",
		"Հովհաննես",
		"Վահե",
		"Կարեն",
		"Գևորգ",
		"Լևոն",
		"Վարդան",
		"Ռուբեն",
		"Սուրեն",
		"Հակոբ",
		"Մհեր",
		"Անդրանիկ",
		"Ավետ",
		"Գրիգոր",
		"Ռաֆայել",
		"Ալեքսանդր",
		"Մոնթե",
		"Հարություն",
		"Էդուարդ",
		"Ալբերտ",
		"Գարիկ",
		"Համլետ"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameFemaleFirstName() {
		static enum data = [
		"Մարիա",
		"Նարե",
		"Մանե",
		"Մարի",
		"Մարիամ",
		"Անի",
		"Անգելինա",
		"Անահիտ",
		"Էլեն",
		"Միլենա",
		"Եվա",
		"Աննա",
		"Արփի",
		"Գայանե",
		"Լիլիթ",
		"Մերի",
		"Վիկտորյա",
		"Արինա",
		"Յանա",
		"Սոնա",
		"Նատալի",
		"Գոհար",
		"Հասմիկ",
		"Սոֆի",
		"Էմիլի",
		"Սուսաննա",
		"Արևիկ",
		"Կարինե",
		"Լյուսի",
		"Արիանա",
		"Տաթև",
		"Լիկա",
		"Ռուզաննա",
		"Լիլի",
		"Սոֆյա",
		"Անուշ",
		"Էլինա",
		"Սառա",
		"Նանե",
		"Էվա",
		"Լիանա",
		"Մոնիկա",
		"Կարինա",
		"Լիա",
		"Նարինե",
		"Լուսինե"
		];
		return choice(data, this.rnd);
	}

	///
	override string commerceColor() {
		static enum data = [
		"կարմիր",
		"կանաչ",
		"կապույտ",
		"դեղին",
		"մանուշակագույն",
		"սպիտակ",
		"սև",
		"նարնջագույն",
		"վարդագույն",
		"մոխրագույն",
		"երկնագույն",
		"ոսկեգույն"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressState() {
		static enum data = [
		"Արագածոտն",
		"Արարատ",
		"Արմավիր",
		"Գեղարքունիք",
		"Կոտայք",
		"Լոռի",
		"Շիրակ",
		"Սյունիք",
		"Տավուշ",
		"Վայոց ձոր",
		"Երևան",
		"Ստեփանակերտ",
		"Ասկերան",
		"Հադրութ",
		"Մարտակերտ",
		"Մարտունի",
		"Շահումյան",
		"Շուշի",
		"Քաշաթաղ"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCountry() {
		static enum data = [
		"ԱՄՆ",
		"Ադրբեջան",
		"Ալբանիա",
		"Ալժիր",
		"Ամերիկյան Սամոա",
		"Ամերիկյան Վիրջինյան կղզիներ",
		"Անգիլիա",
		"Անգոլա",
		"Անդորրա",
		"Անտիգուա և Բարբուդա",
		"Ավստրալիա",
		"Ավստրիա",
		"Արգենտինա",
		"Արուբա",
		"Արցախի Հանրապետություն",
		"Արևելյան Թիմոր",
		"Աֆղանստան",
		"Բահամներ",
		"Բահրեյն",
		"Բանգլադեշ",
		"Բարբադոս",
		"Բելառուս",
		"Բելիզ",
		"Բենին",
		"Բերմուդա",
		"Բոլիվիա",
		"Բոսնիա և Հերցեգովինա",
		"Բոտսվանա",
		"Բութան",
		"Բուլղարիա",
		"Բուրկինա Ֆասո",
		"Բուրունդի",
		"Բրազիլիա",
		"Բրիտանական Վիրջինյան Կղզիներ",
		"Բրունեյ",
		"Գաբոն",
		"Գամբիա",
		"Գայանա",
		"Գերմանիա",
		"Գերնսի",
		"Գուամ",
		"Գվատեմալա",
		"Գվինեա",
		"Գվինեա-Բիսաու",
		"Գրենադա",
		"Դանիա",
		"Դոմինիկա",
		"Դոմինիկյան Հանրապետություն",
		"Եգիպտոս",
		"Եթովպիա",
		"Եմեն",
		"Զամբիա",
		"Զիմբաբվե",
		"Էկվադոր",
		"Էստոնիա",
		"Էրիտրեա",
		"Թաիլանդ",
		"Թայվան",
		"Թըրքս և Կայկոս կղզիներ",
		"Թունիս",
		"Թուրքիա",
		"Թուրքմենստան",
		"Ինդոնեզիա",
		"Իռլանդիա",
		"Իսլանդիա",
		"Իսպանիա",
		"Իսրայել",
		"Իտալիա",
		"Իրան",
		"Իրաք",
		"Լաոս",
		"Լատվիա",
		"Լեհաստան",
		"Լեսոթո",
		"Լիբանան",
		"Լիբերիա",
		"Լիբիա",
		"Լիխտենշտայն",
		"Լիտվա",
		"Լյուքսեմբուրգ",
		"Խորվաթիա",
		"Կաբո Վերդե",
		"Կամբոջա",
		"Կամերուն",
		"Կայմանյան կղզիներ",
		"Կանադա",
		"Կատար",
		"Կենտրոնաաֆրիկյան Հանրապետություն",
		"Կիպրոս",
		"Կիրիբատի",
		"Կոլումբիա",
		"Կոմորներ",
		"Կոնգոյի Հանրապետություն",
		"ԿոնգոյիԴեմոկրատական Հանրապետություն ԿԴՀ",
		"Կոստա Ռիկա",
		"Կոտ դ'Իվուար",
		"Կուբա",
		"Կուկի կղզիներ",
		"Հայաստան",
		"Հայիթի",
		"Հասարակածային Գվինեա",
		"Հարավային Կորեա",
		"Հարավաֆրիկյան Հանրապետություն",
		"Հյուսիսային Կորեա",
		"Հյուսիսային Մակեդոնիա",
		"Հյուսիսային Մարիանյան կղզիներ",
		"Հնդկաստան",
		"Հոնդուրաս",
		"Հոնկոնգ",
		"Հորդանան",
		"Հունաստան",
		"Հունգարիա",
		"Ղազախստան",
		"Ղրղզստան",
		"Ճամայկա",
		"Ճապոնիա",
		"ՄԱԷ",
		"ՄԹ",
		"Մադագասկար",
		"Մալայզիա",
		"Մալավի",
		"Մալդիվներ",
		"Մալթա",
		"Մալի",
		"Մակաու",
		"Մայոտ",
		"Մավրիկիոս",
		"Մավրիտանիա",
		"Մարշալյան կղզիներ",
		"Մարոկկո",
		"Մեն կղզի",
		"Մեքսիկա",
		"Միկրոնեզիա",
		"Մյանմա",
		"Մոզամբիկ",
		"Մոլդովա",
		"Մոնակո",
		"Մոնղոլիա",
		"Մոնտսերատ",
		"Նամիբիա",
		"Նաուրու",
		"Նեպալ",
		"Նիգեր",
		"Նիգերիա",
		"Նիդերլանդյան Անտիլներ",
		"Նիդերլանդներ",
		"Նիկարագուա",
		"Նիուե",
		"Նոր Զելանդիա",
		"Նոր Կալեդոնիա",
		"Նորվեգիա",
		"Նորֆոլք կղզի",
		"Շվեդիա",
		"Շվեյցարիա",
		"Շրի Լանկա",
		"Ուգանդա",
		"Ուզբեկստան",
		"Ուկրաինա",
		"Ուոլիս և Ֆուտունա",
		"Ուրուգվայ",
		"Չադ",
		"Չեխիա",
		"Չեռնոգորիա",
		"Չիլի",
		"Չինաստան",
		"Պալաու",
		"Պակիստան",
		"Պաղեստին",
		"Պանամա",
		"Պապուա Նոր Գվինեա",
		"Պարագվայ",
		"Պերու",
		"Պորտուգալիա",
		"Պուերտո Ռիկո",
		"Ջերսի",
		"Ջիբութի",
		"Ջիբրալթար",
		"Ռուանդա",
		"Ռումինիա",
		"Ռուսաստան",
		"Սալվադոր",
		"Սահրավիա",
		"Սամոա",
		"Սան Մարինո",
		"Սան Տոմե և Պրինսիպի",
		"Սաուդյան Արաբիա",
		"Սեյշելներ",
		"Սեն Մարտեն (Ֆրանսիական Անտիլներ)",
		"Սենեգալ",
		"Սենտ Լյուսիա",
		"Սենտ Կիտս և Նևիս",
		"Սենտ Պիեռ և Միկելոն",
		"Սենտ Վինսենտ և Գրենադիներ",
		"Սերբիա",
		"Սիեռա Լեոնե",
		"Սինգապուր",
		"Սիրիա",
		"Սլովակիա",
		"Սլովենիա",
		"Սողոմոնյան Կղզիներ",
		"Սոմալիա",
		"Սուդան",
		"Սուրբ Բարդուղիմեոսի կղզի",
		"Սուրբ Հեղինեի կղզի",
		"Սուրինամ",
		"Սվազիլենդ",
		"Վանուատու",
		"Վատիկան",
		"Վենեսուելա",
		"Վիետնամ",
		"Վրաստան",
		"Տանզանիա",
		"Տաջիկստան",
		"Տոգո",
		"Տոկելաու",
		"Տոնգա",
		"Տուվալու",
		"Տրինիդադ Տոբագո",
		"Փիթքերն կղզիներ",
		"Քենիա",
		"Քուվեյթ",
		"Օման",
		"Ֆարերյան կղզիներ",
		"Ֆիլիպիններ",
		"Ֆինլանդիա",
		"Ֆիջի",
		"Ֆոլկլենդյան կղզիներ",
		"Ֆրանսիա",
		"Ֆրանսիական Պոլինեզիա"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDefaultCountry() {
		static enum data = [
		"Արցախի Հանրապետություն"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDirection() {
		static enum data = [
		"Հյուսիսային",
		"Արևելյան",
		"Հարավային",
		"Արևմտյան",
		"Հյուսիսարևելյան",
		"Հյուսիսարևմտյան",
		"Հարավարևելյան",
		"Հարավարևմտյան"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressCitySuffix() {
		static enum data = [
		"ակերտ",
		"աշեն",
		"աշատ"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressStreetAddress() {
		return format!"%s %s"(addressStreetName(), addressBuildingNumber());
	}

	///
	override string addressCityPrefix() {
		static enum data = [
		"Հյուսիսային",
		"Արևելյան",
		"Արևմտյան",
		"Հարավային",
		"Նոր"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressStreetName() {
		return format!"%s %s"(nameLastName(), addressStreetSuffix());
	}

	///
	override string addressCity() {
		switch(uniform(0, 2, this.rnd)) {
			case 0:
				return format!"%s %s"(addressCityPrefix(), nameLastName());
			case 1:
				return format!"%s%s"(nameLastName(), addressCitySuffix());
			default: assert(false);
		}
	}

	///
	override string addressSecondaryAddress() {
		static enum data = [
		"Բն. ###",
		"Տուն ###"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string addressStreetSuffix() {
		static enum data = [
		"փողոց",
		"պողոտա"
		];
		return choice(data, this.rnd);
	}

	///
	override string phoneNumberFormats() {
		static enum data = [
		"+374 ## ######",
		"+374 ### #####"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string internetDomainSuffix() {
		static enum data = [
		"com",
		"biz",
		"info",
		"name",
		"net",
		"org",
		"am"
		];
		return choice(data, this.rnd);
	}

}
