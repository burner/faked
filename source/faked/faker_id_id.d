// generated by fakerjsgenerator
///
module faked.faker_id_id;

import faked.base;


///
class Faker_id_id : Faker {
@safe:
	import std.random;
	import std.array;
	import std.format;
	import std.conv : to;

	///
	this(int seed) {
        super(seed);
	}

	///
	override string phoneNumberFormats() {
		static enum data = [
		"02# #### ###",
		"02## #### ###",
		"03## #### ###",
		"04## #### ###",
		"05## #### ###",
		"06## #### ###",
		"07## #### ###",
		"09## #### ###",
		"02# #### ####",
		"02## #### ####",
		"03## #### ####",
		"04## #### ####",
		"05## #### ####",
		"06## #### ####",
		"07## #### ####",
		"09## #### ####",
		"08## ### ###",
		"08## #### ###",
		"08## #### ####",
		"(+62) 8## ### ###",
		"(+62) 2# #### ###",
		"(+62) 2## #### ###",
		"(+62) 3## #### ###",
		"(+62) 4## #### ###",
		"(+62) 5## #### ###",
		"(+62) 6## #### ###",
		"(+62) 7## #### ###",
		"(+62) 8## #### ###",
		"(+62) 9## #### ###",
		"(+62) 2# #### ####",
		"(+62) 2## #### ####",
		"(+62) 3## #### ####",
		"(+62) 4## #### ####",
		"(+62) 5## #### ####",
		"(+62) 6## #### ####",
		"(+62) 7## #### ####",
		"(+62) 8## #### ####",
		"(+62) 9## #### ####"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string internetFreeEmail() {
		static enum data = [
		"'gmail.com'",
		"'yahoo.com'",
		"'gmail.co.id'",
		"'yahoo.co.id'"
		];
		return choice(data, this.rnd);
	}

	///
	override string internetDomainSuffix() {
		static enum data = [
		"com",
		"net",
		"org",
		"asia",
		"tv",
		"biz",
		"info",
		"in",
		"name",
		"co",
		"ac.id",
		"sch.id",
		"go.id",
		"mil.id",
		"co.id",
		"or.id",
		"web.id",
		"my.id",
		"biz.id",
		"desa.id"
		];
		return choice(data, this.rnd);
	}

	///
	override string companySuffix() {
		static enum data = [
		"(Persero) Tbk",
		"Tbk"
		];
		return choice(data, this.rnd);
	}

	///
	string companyPrefix() {
		static enum data = [
		"PT",
		"CV",
		"UD",
		"PD",
		"Perum"
		];
		return choice(data, this.rnd);
	}

	///
	override string companyName() {
		switch(uniform(0, 3, this.rnd)) {
			case 0:
				return format("%s %s", companyPrefix(), nameLastName());
			case 1:
				return format("%s %s", nameLastName(), companySuffix());
			case 2:
				return format("%s %s %s", companyPrefix(), nameLastName(), companySuffix());
			default: assert(false);
		}
	}

	///
	string addressCityName() {
		static enum data = [
		"Airmadidi",
		"Ampana",
		"Amurang",
		"Andolo",
		"Banggai",
		"Bantaeng",
		"Barru",
		"Bau-Bau",
		"Benteng",
		"Bitung",
		"Bolaang Uki",
		"Boroko",
		"Bulukumba",
		"Bungku",
		"Buol",
		"Buranga",
		"Donggala",
		"Enrekang",
		"Gorontalo",
		"Jeneponto",
		"Kawangkoan",
		"Kendari",
		"Kolaka",
		"Kotamobagu",
		"Kota Raha",
		"Kwandang",
		"Lasusua",
		"Luwuk",
		"Majene",
		"Makale",
		"Makassar",
		"Malili",
		"Mamasa",
		"Mamuju",
		"Manado",
		"Marisa",
		"Maros",
		"Masamba",
		"Melonguane",
		"Ondong Siau",
		"Palopo",
		"Palu",
		"Pangkajene",
		"Pare-Pare",
		"Parigi",
		"Pasangkayu",
		"Pinrang",
		"Polewali",
		"Poso",
		"Rantepao",
		"Ratahan",
		"Rumbia",
		"Sengkang",
		"Sidenreng",
		"Sigi Biromaru",
		"Sinjai",
		"Sunggu Minasa",
		"Suwawa",
		"Tahuna",
		"Takalar",
		"Tilamuta",
		"Toli Toli",
		"Tomohon",
		"Tondano",
		"Tutuyan",
		"Unaaha",
		"Wangi Wangi",
		"Wanggudu",
		"Watampone",
		"Watan Soppeng",
		"Ambarawa",
		"Anyer",
		"Bandung",
		"Bangil",
		"Banjar (Jawa Barat)",
		"Banjarnegara",
		"Bangkalan",
		"Bantul",
		"Banyumas",
		"Banyuwangi",
		"Batang",
		"Batu",
		"Bekasi",
		"Blitar",
		"Blora",
		"Bogor",
		"Bojonegoro",
		"Bondowoso",
		"Boyolali",
		"Bumiayu",
		"Brebes",
		"Caruban",
		"Cianjur",
		"Ciamis",
		"Cibinong",
		"Cikampek",
		"Cikarang",
		"Cilacap",
		"Cilegon",
		"Cirebon",
		"Demak",
		"Depok",
		"Garut",
		"Gresik",
		"Indramayu",
		"Jakarta",
		"Jember",
		"Jepara",
		"Jombang",
		"Kajen",
		"Karanganyar",
		"Kebumen",
		"Kediri",
		"Kendal",
		"Kepanjen",
		"Klaten",
		"Pelabuhan Ratu",
		"Kraksaan",
		"Kudus",
		"Kuningan",
		"Lamongan",
		"Lumajang",
		"Madiun",
		"Magelang",
		"Magetan",
		"Majalengka",
		"Malang",
		"Mojokerto",
		"Mojosari",
		"Mungkid",
		"Ngamprah",
		"Nganjuk",
		"Ngawi",
		"Pacitan",
		"Pamekasan",
		"Pandeglang",
		"Pare",
		"Pati",
		"Pasuruan",
		"Pekalongan",
		"Pemalang",
		"Ponorogo",
		"Probolinggo",
		"Purbalingga",
		"Purwakarta",
		"Purwodadi",
		"Purwokerto",
		"Purworejo",
		"Rangkasbitung",
		"Rembang",
		"Salatiga",
		"Sampang",
		"Semarang",
		"Serang",
		"Sidayu",
		"Sidoarjo",
		"Singaparna",
		"Situbondo",
		"Slawi",
		"Sleman",
		"Soreang",
		"Sragen",
		"Subang",
		"Sukabumi",
		"Sukoharjo",
		"Sumber",
		"Sumedang",
		"Sumenep",
		"Surabaya",
		"Surakarta",
		"Tasikmalaya",
		"Tangerang",
		"Tangerang Selatan",
		"Tegal",
		"Temanggung",
		"Tigaraksa",
		"Trenggalek",
		"Tuban",
		"Tulungagung",
		"Ungaran",
		"Wates",
		"Wlingi",
		"Wonogiri",
		"Wonosari",
		"Wonosobo",
		"Yogyakarta",
		"Atambua",
		"Baa",
		"Badung",
		"Bajawa",
		"Bangli",
		"Bima",
		"Denpasar",
		"Dompu",
		"Ende",
		"Gianyar",
		"Kalabahi",
		"Karangasem",
		"Kefamenanu",
		"Klungkung",
		"Kupang",
		"Labuhan Bajo",
		"Larantuka",
		"Lewoleba",
		"Maumere",
		"Mataram",
		"Mbay",
		"Negara",
		"Praya",
		"Raba",
		"Ruteng",
		"Selong",
		"Singaraja",
		"Soe",
		"Sumbawa Besar",
		"Tabanan",
		"Taliwang",
		"Tambolaka",
		"Tanjung",
		"Waibakul",
		"Waikabubak",
		"Waingapu",
		"Denpasar",
		"Negara,Bali",
		"Singaraja",
		"Tabanan",
		"Bangli"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressState() {
		static enum data = [
		"Aceh",
		"Sumatera Utara",
		"Sumatera Barat",
		"Jambi",
		"Bangka Belitung",
		"Riau",
		"Kepulauan Riau",
		"Bengkulu",
		"Sumatera Selatan",
		"Lampung",
		"Banten",
		"DKI Jakarta",
		"Jawa Barat",
		"Jawa Tengah",
		"Jawa Timur",
		"Nusa Tenggara Timur",
		"DI Yogyakarta",
		"Bali",
		"Nusa Tenggara Barat",
		"Kalimantan Barat",
		"Kalimantan Tengah",
		"Kalimantan Selatan",
		"Kalimantan Timur",
		"Kalimantan Utara",
		"Sulawesi Selatan",
		"Sulawesi Utara",
		"Gorontalo",
		"Sulawesi Tengah",
		"Sulawesi Barat",
		"Sulawesi Tenggara",
		"Maluku",
		"Maluku Utara",
		"Papua Barat",
		"Papua"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressDefaultCountry() {
		static enum data = [
		"Indonesia"
		];
		return choice(data, this.rnd);
	}

	///
	override string addressStreetAddress() {
		return format("%s no %s", addressStreetName(), addressBuildingNumber());
	}

	///
	string addressStreetPrefix() {
		static enum data = [
		"Ds.",
		"Dk.",
		"Gg.",
		"Jln.",
		"Jr.",
		"Kpg.",
		"Ki.",
		"Psr."
		];
		return choice(data, this.rnd);
	}

	///
	override string addressStreetName() {
		switch(uniform(0, 2, this.rnd)) {
			case 0:
				return format("%s %s", addressStreetPrefix(), nameFirstName());
			case 1:
				return format("%s %s", addressStreetPrefix(), nameLastName());
			default: assert(false);
		}
	}

	///
	override string addressCity() {
		return format("%s", addressCityName());
	}

	///
	override string addressPostcode() {
		static enum data = [
		"#####"
		];
		return this.digitBuild(choice(data, this.rnd));
	}

	///
	override string nameMaleFirstName() {
		static enum data = [
		"Abyasa",
		"Ade",
		"Adhiarja",
		"Adiarja",
		"Adika",
		"Adikara",
		"Adinata",
		"Aditya",
		"Agus",
		"Ajiman",
		"Ajimat",
		"Ajimin",
		"Ajiono",
		"Akarsana",
		"Alambana",
		"Among",
		"Anggabaya",
		"Anom",
		"Argono",
		"Aris",
		"Arta",
		"Artanto",
		"Artawan",
		"Arsipatra",
		"Asirwada",
		"Asirwanda",
		"Aslijan",
		"Asmadi",
		"Asman",
		"Asmianto",
		"Asmuni",
		"Aswani",
		"Atma",
		"Atmaja",
		"Bagas",
		"Bagiya",
		"Bagus",
		"Bagya",
		"Bahuraksa",
		"Bahuwarna",
		"Bahuwirya",
		"Bajragin",
		"Bakda",
		"Bakiadi",
		"Bakianto",
		"Bakidin",
		"Bakijan",
		"Bakiman",
		"Bakiono",
		"Bakti",
		"Baktiadi",
		"Baktianto",
		"Baktiono",
		"Bala",
		"Balamantri",
		"Balangga",
		"Balapati",
		"Balidin",
		"Balijan",
		"Bambang",
		"Banara",
		"Banawa",
		"Banawi",
		"Bancar",
		"Budi",
		"Cagak",
		"Cager",
		"Cahyadi",
		"Cahyanto",
		"Cahya",
		"Cahyo",
		"Cahyono",
		"Caket",
		"Cakrabirawa",
		"Cakrabuana",
		"Cakrajiya",
		"Cakrawala",
		"Cakrawangsa",
		"Candra",
		"Chandra",
		"Candrakanta",
		"Capa",
		"Caraka",
		"Carub",
		"Catur",
		"Caturangga",
		"Cawisadi",
		"Cawisono",
		"Cawuk",
		"Cayadi",
		"Cecep",
		"Cemani",
		"Cemeti",
		"Cemplunk",
		"Cengkal",
		"Cengkir",
		"Dacin",
		"Dadap",
		"Dadi",
		"Dagel",
		"Daliman",
		"Dalimin",
		"Daliono",
		"Damar",
		"Damu",
		"Danang",
		"Daniswara",
		"Danu",
		"Danuja",
		"Dariati",
		"Darijan",
		"Darimin",
		"Darmaji",
		"Darman",
		"Darmana",
		"Darmanto",
		"Darsirah",
		"Dartono",
		"Daru",
		"Daruna",
		"Daryani",
		"Dasa",
		"Digdaya",
		"Dimas",
		"Dimaz",
		"Dipa",
		"Dirja",
		"Drajat",
		"Dwi",
		"Dono",
		"Dodo",
		"Edi",
		"Eka",
		"Elon",
		"Eluh",
		"Eman",
		"Emas",
		"Embuh",
		"Emong",
		"Empluk",
		"Endra",
		"Enteng",
		"Estiawan",
		"Estiono",
		"Eko",
		"Edi",
		"Edison",
		"Edward",
		"Elvin",
		"Erik",
		"Emil",
		"Ega",
		"Emin",
		"Eja",
		"Gada",
		"Gadang",
		"Gading",
		"Gaduh",
		"Gaiman",
		"Galak",
		"Galang",
		"Galar",
		"Galih",
		"Galiono",
		"Galuh",
		"Galur",
		"Gaman",
		"Gamani",
		"Gamanto",
		"Gambira",
		"Gamblang",
		"Ganda",
		"Gandewa",
		"Gandi",
		"Gandi",
		"Ganep",
		"Gangsa",
		"Gangsar",
		"Ganjaran",
		"Gantar",
		"Gara",
		"Garan",
		"Garang",
		"Garda",
		"Gatot",
		"Gatra",
		"Ghani",
		"Gibran",
		"Gilang",
		"Hairyanto",
		"Hardana",
		"Hardi",
		"Harimurti",
		"Harja",
		"Harjasa",
		"Harjaya",
		"Harjo",
		"Harsana",
		"Harsanto",
		"Harsaya",
		"Hartaka",
		"Hartana",
		"Harto",
		"Hasta",
		"Heru",
		"Himawan",
		"Hadi",
		"Halim",
		"Hasim",
		"Hasan",
		"Hendra",
		"Hendri",
		"Heryanto",
		"Hamzah",
		"Hari",
		"Imam",
		"Indra",
		"Irwan",
		"Irsad",
		"Ikhsan",
		"Irfan",
		"Ian",
		"Ibrahim",
		"Ibrani",
		"Ismail",
		"Irnanto",
		"Ilyas",
		"Ibun",
		"Ivan",
		"Ikin",
		"Ihsan",
		"Jabal",
		"Jaeman",
		"Jaga",
		"Jagapati",
		"Jagaraga",
		"Jail",
		"Jaiman",
		"Jaka",
		"Jarwa",
		"Jarwadi",
		"Jarwi",
		"Jasmani",
		"Jaswadi",
		"Jati",
		"Jatmiko",
		"Jaya",
		"Jayadi",
		"Jayeng",
		"Jinawi",
		"Jindra",
		"Joko",
		"Jumadi",
		"Jumari",
		"Jamal",
		"Jamil",
		"Jais",
		"Jefri",
		"Johan",
		"Jono",
		"Kacung",
		"Kajen",
		"Kambali",
		"Kamidin",
		"Kariman",
		"Karja",
		"Karma",
		"Karman",
		"Karna",
		"Karsa",
		"Karsana",
		"Karta",
		"Kasiran",
		"Kasusra",
		"Kawaca",
		"Kawaya",
		"Kayun",
		"Kemba",
		"Kenari",
		"Kenes",
		"Kuncara",
		"Kunthara",
		"Kusuma",
		"Kadir",
		"Kala",
		"Kalim",
		"Kurnia",
		"Kanda",
		"Kardi",
		"Karya",
		"Kasim",
		"Kairav",
		"Kenzie",
		"Kemal",
		"Kamal",
		"Koko",
		"Labuh",
		"Laksana",
		"Lamar",
		"Lanang",
		"Langgeng",
		"Lanjar",
		"Lantar",
		"Lega",
		"Legawa",
		"Lembah",
		"Liman",
		"Limar",
		"Luhung",
		"Lukita",
		"Luluh",
		"Lulut",
		"Lurhur",
		"Luwar",
		"Luwes",
		"Latif",
		"Lasmanto",
		"Lukman",
		"Luthfi",
		"Leo",
		"Luis",
		"Lutfan",
		"Lasmono",
		"Laswi",
		"Mahesa",
		"Makara",
		"Makuta",
		"Manah",
		"Maras",
		"Margana",
		"Mariadi",
		"Marsudi",
		"Martaka",
		"Martana",
		"Martani",
		"Marwata",
		"Maryadi",
		"Maryanto",
		"Mitra",
		"Mujur",
		"Mulya",
		"Mulyanto",
		"Mulyono",
		"Mumpuni",
		"Muni",
		"Mursita",
		"Murti",
		"Mustika",
		"Maman",
		"Mahmud",
		"Mahdi",
		"Mahfud",
		"Malik",
		"Muhammad",
		"Mustofa",
		"Marsito",
		"Mursinin",
		"Nalar",
		"Naradi",
		"Nardi",
		"Niyaga",
		"Nrima",
		"Nugraha",
		"Nyana",
		"Narji",
		"Nasab",
		"Nasrullah",
		"Nasim",
		"Najib",
		"Najam",
		"Nyoman",
		"Olga",
		"Ozy",
		"Omar",
		"Opan",
		"Oskar",
		"Oman",
		"Okto",
		"Okta",
		"Opung",
		"Paiman",
		"Panca",
		"Pangeran",
		"Pangestu",
		"Pardi",
		"Parman",
		"Perkasa",
		"Praba",
		"Prabu",
		"Prabawa",
		"Prabowo",
		"Prakosa",
		"Pranata",
		"Pranawa",
		"Prasetya",
		"Prasetyo",
		"Prayitna",
		"Prayoga",
		"Prayogo",
		"Purwadi",
		"Purwa",
		"Purwanto",
		"Panji",
		"Pandu",
		"Paiman",
		"Prima",
		"Putu",
		"Raden",
		"Raditya",
		"Raharja",
		"Rama",
		"Rangga",
		"Reksa",
		"Respati",
		"Rusman",
		"Rosman",
		"Rahmat",
		"Rahman",
		"Rendy",
		"Reza",
		"Rizki",
		"Ridwan",
		"Rudi",
		"Raden",
		"Radit",
		"Radika",
		"Rafi",
		"Rafid",
		"Raihan",
		"Salman",
		"Saadat",
		"Saiful",
		"Surya",
		"Slamet",
		"Samsul",
		"Soleh",
		"Simon",
		"Sabar",
		"Sabri",
		"Sidiq",
		"Satya",
		"Setya",
		"Saka",
		"Sakti",
		"Taswir",
		"Tedi",
		"Teddy",
		"Taufan",
		"Taufik",
		"Tomi",
		"Tasnim",
		"Teguh",
		"Tasdik",
		"Timbul",
		"Tirta",
		"Tirtayasa",
		"Tri",
		"Tugiman",
		"Umar",
		"Usman",
		"Uda",
		"Umay",
		"Unggul",
		"Utama",
		"Umaya",
		"Upik",
		"Viktor",
		"Vino",
		"Vinsen",
		"Vero",
		"Vega",
		"Viman",
		"Virman",
		"Wahyu",
		"Wira",
		"Wisnu",
		"Wadi",
		"Wardi",
		"Warji",
		"Waluyo",
		"Wakiman",
		"Wage",
		"Wardaya",
		"Warsa",
		"Warsita",
		"Warta",
		"Wasis",
		"Wawan",
		"Xanana",
		"Yahya",
		"Yusuf",
		"Yosef",
		"Yono",
		"Yoga"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameSuffix() {
		static enum data = [
		"S.Ked",
		"S.Gz",
		"S.Pt",
		"S.IP",
		"S.E.I",
		"S.E.",
		"S.Kom",
		"S.H.",
		"S.T.",
		"S.Pd",
		"S.Psi",
		"S.I.Kom",
		"S.Sos",
		"S.Farm",
		"M.M.",
		"M.Kom.",
		"M.TI.",
		"M.Pd",
		"M.Farm",
		"M.Ak"
		];
		return choice(data, this.rnd);
	}

	///
	string nameFemaleTitle() {
		static enum data = [
		"dr.",
		"drg.",
		"Dr.",
		"Hj."
		];
		return choice(data, this.rnd);
	}

	///
	override string nameFemaleFirstName() {
		static enum data = [
		"Ade",
		"Agnes",
		"Ajeng",
		"Amalia",
		"Anita",
		"Ayu",
		"Aisyah",
		"Ana",
		"Ami",
		"Ani",
		"Azalea",
		"Aurora",
		"Alika",
		"Anastasia",
		"Amelia",
		"Almira",
		"Bella",
		"Betania",
		"Belinda",
		"Citra",
		"Cindy",
		"Chelsea",
		"Clara",
		"Cornelia",
		"Cinta",
		"Cinthia",
		"Ciaobella",
		"Cici",
		"Carla",
		"Calista",
		"Devi",
		"Dewi","Dian",
		"Diah",
		"Diana",
		"Dina",
		"Dinda",
		"Dalima",
		"Eka",
		"Eva",
		"Endah",
		"Elisa",
		"Eli",
		"Ella",
		"Ellis",
		"Elma",
		"Elvina",
		"Fitria",
		"Fitriani",
		"Febi",
		"Faizah",
		"Farah",
		"Farhunnisa",
		"Fathonah",
		"Gabriella",
		"Gasti",
		"Gawati",
		"Genta",
		"Ghaliyati",
		"Gina",
		"Gilda",
		"Halima",
		"Hesti",
		"Hilda",
		"Hafshah",
		"Hamima",
		"Hana",
		"Hani",
		"Hasna",
		"Humaira",
		"Ika",
		"Indah",
		"Intan",
		"Irma",
		"Icha",
		"Ida",
		"Ifa",
		"Ilsa",
		"Ina",
		"Ira",
		"Iriana",
		"Jamalia",
		"Janet",
		"Jane",
		"Julia",
		"Juli",
		"Jessica",
		"Jasmin",
		"Jelita",
		"Kamaria",
		"Kamila",
		"Kani",
		"Karen",
		"Karimah",
		"Kartika",
		"Kasiyah",
		"Keisha",
		"Kezia",
		"Kiandra",
		"Kayla",
		"Kania",
		"Lala",
		"Lalita",
		"Latika",
		"Laila",
		"Laras",
		"Lidya",
		"Lili",
		"Lintang",
		"Maria",
		"Mala",
		"Maya",
		"Maida",
		"Maimunah",
		"Melinda",
		"Mila",
		"Mutia",
		"Michelle",
		"Malika",
		"Nadia",
		"Nadine",
		"Nabila",
		"Natalia",
		"Novi",
		"Nova",
		"Nurul",
		"Nilam",
		"Najwa",
		"Olivia",
		"Ophelia",
		"Oni",
		"Oliva",
		"Padma",
		"Putri",
		"Paramita",
		"Paris",
		"Patricia",
		"Paulin",
		"Puput",
		"Puji",
		"Pia",
		"Puspa",
		"Puti",
		"Putri",
		"Padmi",
		"Qori",
		"Queen",
		"Ratih",
		"Ratna",
		"Restu",
		"Rini",
		"Rika",
		"Rina",
		"Rahayu",
		"Rahmi",
		"Rachel",
		"Rahmi",
		"Raisa",
		"Raina",
		"Sarah",
		"Sari",
		"Siti",
		"Siska",
		"Suci",
		"Syahrini",
		"Septi",
		"Sadina",
		"Safina",
		"Sakura",
		"Salimah",
		"Salwa",
		"Salsabila",
		"Samiah",
		"Shania",
		"Sabrina",
		"Silvia",
		"Shakila",
		"Talia",
		"Tami",
		"Tira",
		"Tiara",
		"Titin",
		"Tania",
		"Tina",
		"Tantri",
		"Tari",
		"Titi",
		"Uchita",
		"Unjani",
		"Ulya",
		"Uli",
		"Ulva",
		"Umi",
		"Usyi",
		"Vanya",
		"Vanesa",
		"Vivi",
		"Vera",
		"Vicky",
		"Victoria",
		"Violet",
		"Winda",
		"Widya",
		"Wulan",
		"Wirda",
		"Wani",
		"Yani",
		"Yessi",
		"Yulia",
		"Yuliana",
		"Yuni",
		"Yunita",
		"Yance",
		"Zahra",
		"Zalindra",
		"Zaenab",
		"Zulfa",
		"Zizi",
		"Zulaikha",
		"Zamira",
		"Zelda",
		"Zelaya"
		];
		return choice(data, this.rnd);
	}

	///
	override string nameName() {
		switch(uniform(0, 7, this.rnd)) {
			case 0:
				return format("%s %s", nameMaleFirstName(), nameMaleLastName());
			case 1:
				return format("%s %s", nameMaleLastName(), nameMaleFirstName());
			case 2:
				return format("%s %s %s", nameMaleFirstName(), nameMaleFirstName(), nameMaleLastName());
			case 3:
				return format("%s %s", nameFemaleFirstName(), nameFemaleLastName());
			case 4:
				return format("%s %s", nameFemaleFirstName(), nameMaleLastName());
			case 5:
				return format("%s %s", nameFemaleLastName(), nameFemaleFirstName());
			case 6:
				return format("%s %s %s", nameFemaleFirstName(), nameFemaleFirstName(), nameFemaleLastName());
			default: assert(false);
		}
	}

	///
	string nameMaleLastName() {
		static enum data = [
		"Adriansyah",
		"Ardianto",
		"Anggriawan",
		"Budiman",
		"Budiyanto",
		"Damanik",
		"Dongoran",
		"Dabukke",
		"Firmansyah",
		"Firgantoro",
		"Gunarto",
		"Gunawan",
		"Hardiansyah",
		"Habibi",
		"Hakim",
		"Halim",
		"Haryanto",
		"Hidayat",
		"Hidayanto",
		"Hutagalung",
		"Hutapea",
		"Hutasoit",
		"Irawan",
		"Iswahyudi",
		"Kuswoyo",
		"Januar",
		"Jailani",
		"Kurniawan",
		"Kusumo",
		"Latupono",
		"Lazuardi",
		"Maheswara",
		"Mahendra",
		"Mustofa",
		"Mansur",
		"Mandala",
		"Megantara",
		"Maulana",
		"Maryadi",
		"Mangunsong",
		"Manullang",
		"Marpaung",
		"Marbun",
		"Narpati",
		"Natsir",
		"Nugroho",
		"Najmudin",
		"Nashiruddin",
		"Nainggolan",
		"Nababan",
		"Napitupulu",
		"Pangestu",
		"Putra",
		"Pranowo",
		"Prabowo",
		"Pratama",
		"Prasetya",
		"Prasetyo",
		"Pradana",
		"Pradipta",
		"Prakasa",
		"Permadi",
		"Prasasta",
		"Prayoga",
		"Ramadan",
		"Rajasa",
		"Rajata",
		"Saptono",
		"Santoso",
		"Saputra",
		"Saefullah",
		"Setiawan",
		"Suryono",
		"Suwarno",
		"Siregar",
		"Sihombing",
		"Salahudin",
		"Sihombing",
		"Samosir",
		"Saragih",
		"Sihotang",
		"Simanjuntak",
		"Sinaga",
		"Simbolon",
		"Sitompul",
		"Sitorus",
		"Sirait",
		"Siregar",
		"Situmorang",
		"Tampubolon",
		"Thamrin",
		"Tamba",
		"Tarihoran",
		"Utama",
		"Uwais",
		"Wahyudin",
		"Waluyo",
		"Wibowo",
		"Winarno",
		"Wibisono",
		"Wijaya",
		"Widodo",
		"Wacana",
		"Waskita",
		"Wasita",
		"Zulkarnain"
		];
		return choice(data, this.rnd);
	}

	///
	string nameFemaleLastName() {
		static enum data = [
		"Agustina",
		"Andriani",
		"Anggraini",
		"Aryani",
		"Astuti",
		"Fujiati",
		"Farida",
		"Handayani",
		"Hassanah",
		"Hartati",
		"Hasanah",
		"Haryanti",
		"Hariyah",
		"Hastuti",
		"Halimah",
		"Kusmawati",
		"Kuswandari",
		"Laksmiwati",
		"Laksita",
		"Lestari",
		"Lailasari",
		"Mandasari",
		"Mardhiyah",
		"Mayasari",
		"Melani",
		"Mulyani",
		"Maryati",
		"Nurdiyanti",
		"Novitasari",
		"Nuraini",
		"Nasyidah",
		"Nasyiah",
		"Namaga",
		"Palastri",
		"Pudjiastuti",
		"Puspasari",
		"Puspita",
		"Purwanti",
		"Pratiwi",
		"Purnawati",
		"Pertiwi",
		"Permata",
		"Prastuti",
		"Padmasari",
		"Rahmawati",
		"Rahayu",
		"Riyanti",
		"Rahimah",
		"Suartini",
		"Sudiati",
		"Suryatmi",
		"Susanti",
		"Safitri",
		"Oktaviani",
		"Utami",
		"Usamah",
		"Usada",
		"Uyainah",
		"Yuniar",
		"Yuliarti",
		"Yulianti",
		"Yolanda",
		"Wahyuni",
		"Wijayanti",
		"Widiastuti",
		"Winarsih",
		"Wulandari",
		"Wastuti",
		"Zulaika"
		];
		return choice(data, this.rnd);
	}

	///
	string nameMaleTitle() {
		static enum data = [
		"dr.",
		"drg.",
		"Dr.",
		"Drs.",
		"Ir.",
		"H."
		];
		return choice(data, this.rnd);
	}

}
